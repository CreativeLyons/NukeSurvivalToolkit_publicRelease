Group {
 name RotoPaint_Transform
 onCreate "n = nuke.thisNode()\nn\['format'].setFlag(nuke.DISABLED)"
 knobChanged "n = nuke.thisNode()\nk = nuke.thisKnob()\n\n#works only if knob 'operation' is changing.\nif ('operation' in k.name()):\n    if(k.getValue()==0):\n        n\['UV_offset'].setVisible(False)\n        n\['UV_scale'].setVisible(False)\n        n\['line'].setVisible(False)\n    elif(k.getValue()==1):\n        n\['UV_offset'].setVisible(True)\n        n\['UV_scale'].setVisible(True)\n        n\['line'].setVisible(True)\nelif ('output_1' in k.name()):\n    if(k.getValue()==0):\n        n\['operation'].setVisible(True)\n        n\['filter'].setVisible(True)\n    elif(k.getValue()==1):\n        n\['operation'].setVisible(False)\n        n\['filter'].setVisible(False)\n    elif(k.getValue()==2):\n        n\['operation'].setVisible(False)\n        n\['filter'].setVisible(False)\nelif ('img_format' in k.name()):\n    if(k.getValue()==0):\n        n\['format'].clearFlag(nuke.DISABLED)\n    elif(k.getValue()==1):\n        n\['format'].setFlag(nuke.DISABLED)"
 tile_color 0xa57aaa00
 note_font "Verdana Bold"
 selected true
 addUserKnob {20 Parameters}
 addUserKnob {26 instructions l "" +STARTLINE T "<i>Click the button 'Select brush' below to select the right brush.<br/> Paint to move the elements<br/>\nClose the Properties to disable the node with D"}
 addUserKnob {26 ""}
 addUserKnob {26 output_2 l "<b><font color=\"dodgerblue\">OUTPUT"}
 addUserKnob {41 channels T STMap37.channels}
 addUserKnob {41 format T Constant1.format}
 addUserKnob {6 img_format l "format from img" -STARTLINE}
 img_format true
 addUserKnob {7 overscan R 0 100}
 addUserKnob {26 ""}
 addUserKnob {4 output t "Select which output you want to have: the final result with the distortion, the UV Map or the Vector Map to use with the iDistort node" M {"Final Result" "UV Map" Vector "" "" ""}}
 addUserKnob {4 operation t "Choose between\n- UVMap\n- Vector distort\n\nThe UVMap is without any control, the vector distort is used with the iDistort node, so you can also control the distortion with knobs Offset and Scale." M {"UV Map" Vector ""}}
 addUserKnob {4 filter M {Impulse Cubic Keys Simon Rifman Mitchell Parzen Notch Lanczos4 Lanczos6 Sinc4}}
 filter Cubic
 addUserKnob {26 line l "" +STARTLINE +HIDDEN}
 addUserKnob {7 UV_offset l "UV offset" +HIDDEN}
 addUserKnob {7 UV_scale l "UV scale" +HIDDEN R 0 100}
 UV_scale 2
 addUserKnob {26 ""}
 addUserKnob {22 move l "<font color=\"tomato\">Select brush" t "Select automatically the right brush" T "n = nuke.thisNode()\nn\['toolbox'].setValue(0)\nn\['toolbox'].setValue(25)" +STARTLINE}
 addUserKnob {6 check l "check painting" t "Use the checkerboard to check your paint" -STARTLINE}
 addUserKnob {41 size l smooth t "Smooth the paint" T Blur1.size}
 addUserKnob {26 paint l "<b><font color=\"lightgreen\">PAINT"}
 addUserKnob {41 opacity l INVISIBLE +INVISIBLE T RotoPaint.opacity}
 addUserKnob {41 toolbar_opacity l opacity T RotoPaint.toolbar_opacity}
 addUserKnob {41 brush_hardness l "brush hardness" T RotoPaint.brush_hardness}
 addUserKnob {41 brush_spacing l "brush spacing" T RotoPaint.brush_spacing}
 addUserKnob {26 ""}
 addUserKnob {20 paint_1 l "" +STARTLINE n 1}
 addUserKnob {41 opacity_1 l opacity T RotoPaint.opacity}
 addUserKnob {41 lifetime_type l "lifetime type" T RotoPaint.lifetime_type}
 addUserKnob {41 lifetime_start l from -STARTLINE T RotoPaint.lifetime_start}
 addUserKnob {41 lifetime_end l to -STARTLINE T RotoPaint.lifetime_end}
 addUserKnob {41 toolbox l "" +STARTLINE T RotoPaint.toolbox}
 addUserKnob {41 curves l "" -STARTLINE T RotoPaint.curves}
 addUserKnob {20 endGroup n -1}
 addUserKnob {41 maskChannel l "mask channel" T STMap37.maskChannel}
 addUserKnob {41 invert_mask l invert -STARTLINE T STMap37.invert_mask}
 addUserKnob {26 ""}
 addUserKnob {41 mix T Merge1.mix}
 addUserKnob {20 "" l Transform}
 addUserKnob {41 transform T RotoPaint.transform}
 addUserKnob {41 translate T RotoPaint.translate}
 addUserKnob {41 rotate T RotoPaint.rotate}
 addUserKnob {41 scale_1 l scale T RotoPaint.scale}
 addUserKnob {41 skewX l "skew X" T RotoPaint.skewX}
 addUserKnob {41 skewY l "skew Y" T RotoPaint.skewY}
 addUserKnob {41 skew_order l "skew order" T RotoPaint.skew_order}
 addUserKnob {41 center T RotoPaint.center}
 addUserKnob {20 "extra matrix" n 2}
 "extra matrix" 1
 addUserKnob {41 transform_matrix l "" -STARTLINE T RotoPaint.transform_matrix}
 addUserKnob {20 "" n -1}
 addUserKnob {20 email l @}
 addUserKnob {26 message l "" +STARTLINE T "<b><font color=\"Violet\">RotoPaint Transform v1.2</font></b><br>\n<font size=“1”><i>by Andrea Geremia</i><br>\n<br>\nandrea.geremia89@gmail.com<br>\nwww.andreageremia.it</font>"}
}
 Constant {
  inputs 0
  channels rgb
  format "2048 2048 0 0 2048 2048 1 square_2K"
  name Constant1
  xpos -177
  ypos -392
 }
 Input {
  inputs 0
  name img
  xpos 179
  ypos -505
 }
 Dot {
  name Dot10
  xpos 213
  ypos -459
 }
set N67f29800 [stack 0]
 Remove {
  name Remove1
  xpos -6
  ypos -466
 }
 Switch {
  inputs 2
  which {{!parent.img_format}}
  name Switch_Format
  label "\[value which]"
  xpos -6
  ypos -372
 }
 AdjBBox {
  numpixels {{parent.overscan}}
  name AdjBBox1
  xpos -6
  ypos -272
 }
 Expression {
  expr0 (x+0.5)/width
  expr1 (y+0.5)/height
  name Expression1
  xpos -6
  ypos -238
 }
 Dot {
  name Dot8
  xpos 28
  ypos -201
 }
set N67f28800 [stack 0]
 Dot {
  name Dot11
  xpos 28
  ypos -115
 }
set N67f28400 [stack 0]
push $N67f28800
 RotoPaint {
  cliptype none
  curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097664}
    {t x4493a000 x440b8000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}}}}}
  toolbox {smear {
  { selectAll bs 487.9 h 1 src 1 str 1 ssx 1 ssy 1 sf 1 ep1 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush bs 180 str 1 ssx 1 ssy 1 sf 1 sb 1 ltn 1034 ltm 1034 tt 17 }
  { eraser bs 86.2 src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 ltn 1033 ltm 1033 tt 18 }
  { clone opc 0.1 bs 44.8 src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 tt 19 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 tt 21 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 tt 22 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 ep1 5 tt 23 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 tt 24 }
  { smear bs 487.9 h 1 src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 tt 25 }
} }
  toolbar_brush_size 487.8999939
  toolbar_brush_hardness 1
  toolbar_lifetime_type single
  toolbar_effect_parameter1 1
  toolbar_paint_source fg
  toolbar_source_transform_scale {1 1}
  toolbar_source_transform_center {1024 778}
  colorOverlay {0 0 0 0}
  paint_source foreground
  view {}
  motionblur_on true
  motionblur_shutter_offset_type centred
  brush_type smear
  brush_size 487.8999939
  brush_spacing 0.05000000075
  brush_hardness 1
  effect_parameter1 1
  source_black_outside true
  name RotoPaint
  xpos -112
  ypos -149
 }
set N79877c00 [stack 0]
push $N67f28800
 Dot {
  name Dot9
  xpos -236
  ypos -201
 }
 Difference {
  inputs 2
  gain 1000000
  name Difference1
  xpos -270
  ypos -153
 }
 Dilate {
  channels alpha
  size {{parent.Blur1.size}}
  name Dilate1
  label "\[value size]"
  xpos -270
  ypos -113
 }
push $N79877c00
 Blur {
  inputs 1+1
  channels rgb
  name Blur1
  label "\[value size]"
  xpos -112
  ypos -108
 }
 CopyBBox {
  inputs 2
  name CopyBBox1
  xpos -112
  ypos -48
 }
push $N67f28400
 Merge2 {
  inputs 2
  operation copy
  name Merge1
  xpos -5
  ypos -48
 }
set N79876400 [stack 0]
 Dot {
  name Dot2
  xpos 28
  ypos 9
 }
set N79876000 [stack 0]
 Expression {
  expr0 (r-(x+0.5)/width)*width
  expr1 (g-(y+0.5)/height)*height
  expr2 0
  name Expression2
  label "UVMap to Vector"
  xpos 301
  ypos 2
 }
set N79875c00 [stack 0]
 Dot {
  name Dot3
  xpos 335
  ypos 176
 }
push $N79876000
 Dot {
  name Dot1
  xpos 28
  ypos 176
 }
 Input {
  inputs 0
  name mask
  xpos 566
  ypos -83
  number 1
 }
 Dot {
  name Dot7
  xpos 600
  ypos -45
 }
set N79874c00 [stack 0]
 Dot {
  name Dot6
  xpos 600
  ypos 42
 }
push $N79875c00
 CheckerBoard2 {
  inputs 0
  name CheckerBoard1
  xpos 307
  ypos -288
 }
push $N67f29800
 Switch {
  inputs 2
  which {{parent.check}}
  name Switch1
  label "\[value which]"
  xpos 179
  ypos -268
 }
 Dot {
  name Dot4
  xpos 213
  ypos -132
 }
set N7fbe3c00 [stack 0]
 Dot {
  name Dot5
  xpos 491
  ypos -132
 }
 ShuffleCopy {
  inputs 2
  red red
  green green
  blue blue
  out motion
  name ShuffleCopy1
  xpos 457
  ypos 6
 }
 IDistort {
  inputs 1+1
  channels {{{parent.STMap37.channels}}}
  uv motion
  uv_offset {{parent.UV_offset}}
  uv_scale {{parent.UV_scale}}
  maskChannel {{{parent.STMap37.maskChannel}}}
  invert_mask {{parent.STMap37.invert_mask}}
  filter {{STMap37.filter}}
  name IDistort1
  xpos 457
  ypos 39
 }
push $N79874c00
push $N79876400
push $N7fbe3c00
 STMap {
  inputs 2+1
  channels rgba
  uv rgba
  blur_scale 0
  filter {{parent.filter}}
  name STMap37
  xpos 179
  ypos -48
 }
 Switch {
  inputs 2
  which {{parent.operation}}
  name Switch_operation
  label "\[value which]"
  xpos 179
  ypos 35
 }
 Switch {
  inputs 3
  which {{parent.output}}
  name Switch_output
  label "\[value which]"
  xpos 179
  ypos 169
 }
 Output {
  name Output1
  xpos 179
  ypos 230
 }
end_group
