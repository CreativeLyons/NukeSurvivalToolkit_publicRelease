Group {
 name ConstantPro
 tile_color 0xff
 note_font "Bitstream Vera Sans Bold"
 note_font_size 12
 selected true
 addUserKnob {20 ConstantPro}
 addUserKnob {41 channels T Constant2.channels}
 addUserKnob {41 format T Constant2.format}
 addUserKnob {41 first l "frame range" T Constant2.first}
 addUserKnob {41 last l "" -STARTLINE T Constant2.last}
 addUserKnob {6 fillBBox l "Fill BBox" +STARTLINE}
 fillBBox true
 addUserKnob {41 overscanPercent l "| Overscan Percent" -STARTLINE T BBoxToFormat.overscanPercent}
 addUserKnob {26 ""}
 addUserKnob {26 text_1 l <b>RGB T " "}
 addUserKnob {22 white l "<font color=\"White\">&#9632;" -STARTLINE T "nuke.thisNode()\['color'].setValue(\[1,1,1,1])\n\nnuke.thisNode()\['tile_color'].setValue(4294967040)\n"}
 addUserKnob {22 red l "<font color=\"Red\">&#9632;" -STARTLINE T "nuke.thisNode()\['color'].setValue(\[1,0,0,1])\n\nnuke.thisNode()\['tile_color'].setValue(4278190335)\n"}
 addUserKnob {22 yellow l "<font color=\"Yellow\">&#9632;" -STARTLINE T "nuke.thisNode()\['color'].setValue(\[1,1,0,1])\n\nnuke.thisNode()\['tile_color'].setValue(4294902015)\n"}
 addUserKnob {22 green l "<font color=\"Green\">&#9632;" -STARTLINE T "nuke.thisNode()\['color'].setValue(\[0,1,0,1])\n\nnuke.thisNode()\['tile_color'].setValue(16711935)\n"}
 addUserKnob {22 gray l "<font color=\"Gray\">&#9632;" -STARTLINE T "nuke.thisNode()\['color'].setValue(\[.5,.5,.5,1])\n\nnuke.thisNode()\['tile_color'].setValue(2139062271)\n"}
 addUserKnob {22 cyan l "<font color=\"Cyan\">&#9632;" -STARTLINE T "nuke.thisNode()\['color'].setValue(\[0,1,1,1])\n\nnuke.thisNode()\['tile_color'].setValue(16777215)\n"}
 addUserKnob {22 blue l "<font color=\"Blue\">&#9632;" -STARTLINE T "nuke.thisNode()\['color'].setValue(\[0,0,1,1])\n\nnuke.thisNode()\['tile_color'].setValue(65535)\n"}
 addUserKnob {22 magenta l "<font color=\"Magenta\">&#9632;" -STARTLINE T "nuke.thisNode()\['color'].setValue(\[1,0,1,1])\n\nnuke.thisNode()\['tile_color'].setValue(4278255615)\n"}
 addUserKnob {22 black l "<font color=\"Black\">&#9632;" -STARTLINE T "nuke.thisNode()\['color'].setValue(\[0,0,0,1])\n\nnuke.thisNode()\['tile_color'].setValue(255)\n"}
 addUserKnob {26 text l <b>Alpha: T " "}
 addUserKnob {22 whiteAlpha l "<font color=\"White\">&#9632;" -STARTLINE T nuke.thisNode().knob('color').setValue(1,3)}
 addUserKnob {22 grayAlpha l "<font color=\"Gray\">&#9632;" -STARTLINE T "nuke.thisNode()\['color'].setValue(0.5,3)"}
 addUserKnob {22 blackAlpha l "<font color=\"Black\">&#9632;" -STARTLINE T "nuke.thisNode()\['color'].setValue(0, 3)"}
 addUserKnob {26 ""}
 addUserKnob {6 color_rgba_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 color_rgba_panelDropped true
 addUserKnob {19 color}
 color {0 0 0 1}
 addUserKnob {6 color_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {26 ""}
 addUserKnob {26 "" l mask T ""}
 addUserKnob {41 maskChannelInput l "" -STARTLINE T fillColor.maskChannelInput}
 addUserKnob {41 inject -STARTLINE T fillColor.inject}
 addUserKnob {41 invert_mask l invert -STARTLINE T fillColor.invert_mask}
 addUserKnob {41 fringe -STARTLINE T fillColor.fringe}
 addUserKnob {41 mix_1 l mix T fillColor.mix}
}
 Input {
  inputs 0
  name Inputmask
  xpos -403
  ypos -114
  number 1
 }
 Constant {
  inputs 0
  name Constant2
  tile_color 0xff
  xpos -545
  ypos -332
  postage_stamp false
 }
 Input {
  inputs 0
  name Input
  xpos -407
  ypos -227
 }
 Switch {
  inputs 2
  which {{"!\[exists parent.input0]"}}
  name SwitchDefault
  xpos -545
  ypos -227
 }
 Group {
  name BBoxToFormat
  onCreate "n = nuke.thisNode()\ninputFormat = n.knob(\"inputFormat\")\ninputBBox = n.knob(\"inputBBox\")\ncrop = nuke.toNode(\"Crop6\")\ncropb = crop.knob('box')\noutputBBox = n.knob('outputBBox')\noutputBBoxCenter = n.knob(\"outputBBoxCenter\")\n\ninputFormat.setFlag(0x0000000000008000)\ninputBBox.setFlag(0x0000000000008000)\ncropb.setFlag(0x0000000000008000)\noutputBBox.setFlag(0x0000000000008000)\noutputBBoxCenter.setFlag(0x0000000000008000)\n\nn = nuke.thisNode()\nn.knob(\"overscan\").setRange(0,400)\nn.knob(\"overscanPercent\").setRange(1,4)"
  knobChanged "n = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"overscanType\":\n    if n.knob(\"overscanType\").getValue() == 1:\n        n.knob(\"overscanPercent\").setVisible(True)\n        n.knob(\"overscan\").setVisible(False)\n    else:\n        n.knob(\"overscanPercent\").setVisible(False)\n        n.knob(\"overscan\").setVisible(True)"
  tile_color 0xa57aaaff
  note_font "Verdana Bold"
  note_font_color 0xffffffff
  xpos -545
  ypos -178
  disable {{!parent.fillBBox}}
  addUserKnob {20 CropBBox}
  addUserKnob {4 type l Type +INVISIBLE M {"To Format" "To BBox"}}
  addUserKnob {41 intersect T Crop6.intersect}
  addUserKnob {6 blackOutside l "Black Outside" -STARTLINE}
  addUserKnob {4 overscanType l "Overscan Type:" M {Pixels Percentage}}
  overscanType Percentage
  addUserKnob {14 overscan l Overscan +HIDDEN R 0 400}
  addUserKnob {14 overscanPercent l "Overscan Percent" R 1 4}
  overscanPercent 1
  addUserKnob {20 inputBbox l "BBox Data" n 1}
  inputBbox 0
  addUserKnob {15 inputFormat l "Input Format"}
  inputFormat {0 0 {input.width} {input.height}}
  addUserKnob {15 inputBBox l "Input BBox"}
  inputBBox {{input.bbox.x} {input.bbox.y} {input.bbox.r} {input.bbox.t}}
  addUserKnob {12 outputBBoxCenter l OutputBBoxCenter}
  outputBBoxCenter {{OutputBBox1.outputBBoxCenter.w} {OutputBBox1.outputBBoxCenter.h}}
  addUserKnob {15 outputBBox l "Output BBox"}
  outputBBox {{OutputBBox1.OutputBBox} {OutputBBox1.OutputBBox} {OutputBBox1.OutputBBox} {OutputBBox1.OutputBBox}}
  addUserKnob {20 endGroup n -1}
  addUserKnob {20 info_1 l Info}
  addUserKnob {26 creator l Creator: T "<b><big>Tony Lyons"}
  addUserKnob {26 desc l Description: t "crop to inputformat\n\ndisplays values of input bbox" T CropBBox}
  addUserKnob {26 ver l Version: T v02}
 }
  Input {
   inputs 0
   name Input
   xpos 261
   ypos 394
  }
  Dot {
   name Dot2
   note_font_size 41
   xpos 295
   ypos 462
  }
set N8411e400 [stack 0]
  Dot {
   name Dot1
   note_font_size 41
   xpos -160
   ypos 462
  }
set N8411e000 [stack 0]
push $N8411e400
  Crop {
   box {{curve} {curve} {input.width} {input.height}}
   crop {{parent.blackOutside}}
   name Crop6
   xpos 261
   ypos 510
   addUserKnob {20 User}
   addUserKnob {22 cropToBbox l "Crop to Bounding Box" -STARTLINE T codeBBox()}
  }
set N8411dc00 [stack 0]
  Remove {
   operation keep
   channels none
   name Remove1
   xpos 120
   ypos 504
  }
set N8411d800 [stack 0]
  Transform {
   scale {{parent.overscanPercent} {parent.overscanPercent}}
   center {{input.bbox.r/2} {input.bbox.t/2}}
   shutteroffset centred
   name Transform1
   xpos 120
   ypos 555
  }
push $N8411d800
  AdjBBox {
   numpixels {{parent.overscan} {parent.overscan}}
   name AdjBBox1
   xpos -5
   ypos 510
  }
  Switch {
   inputs 2
   which {{overscanType}}
   name Switch2
   label "\[value which]"
   xpos -5
   ypos 549
  }
  Merge2 {
   inputs 2
   bbox intersection
   Achannels {-rgba.red -rgba.green -rgba.blue rgba.alpha}
   Bchannels {-rgba.red -rgba.green -rgba.blue rgba.alpha}
   output {-rgba.red -rgba.green -rgba.blue rgba.alpha}
   name Merge1
   xpos -5
   ypos 647
   disable {{!parent.Crop6.intersect}}
  }
push $N8411e000
  CopyBBox {
   inputs 2
   name CopyBBox1
   xpos -194
   ypos 653
  }
  BlackOutside {
   name BlackOutside1
   xpos -194
   ypos 692
   disable {{!parent.blackOutside}}
  }
  Dot {
   name Dot4
   note_font_size 41
   xpos -160
   ypos 769
  }
push $N8411dc00
  Switch {
   inputs 2
   which {{"overscanType == 0 ? overscan.w != 0 || overscan.h != 0 : overscanPercent.w != 1 || overscanPercent.h != 1 ? 1 : 0"}}
   name Switch1
   label "\[value which]"
   xpos 261
   ypos 759
  }
set N7c2ff900 [stack 0]
  Output {
   name Output1
   xpos 261
   ypos 921
  }
push $N7c2ff900
  NoOp {
   name OutputBBox1
   selected true
   xpos 378
   ypos 821
   addUserKnob {20 User}
   addUserKnob {15 OutputBBox l "Output BBox"}
   OutputBBox {{input.bbox.x} {input.bbox.y} {input.bbox.r} {input.bbox.t}}
   addUserKnob {14 outputBBoxCenter l "Output BBox Center" R 0 100}
   outputBBoxCenter {{OutputBBox.x+(OutputBBox.r-OutputBBox.x)/2} {OutputBBox.y+(OutputBBox.t-OutputBBox.y)/2}}
  }
 end_group
 Fill {
  inputs 1+1
  color {{parent.color} {parent.color} {parent.color} {parent.color}}
  name fillColor
  xpos -545
  ypos -114
 }
 Output {
  name Output1
  xpos -545
  ypos 94
 }
end_group
