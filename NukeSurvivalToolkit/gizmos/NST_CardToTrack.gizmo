Group {
 name CardToTrack
 onCreate "#nuke.thisNode()\['picker'].setValue(\[nuke.toNode(\"root\")\['format'].value().width()/2,nuke.toNode(\"root\")\['format'].value().height()/2])"
 tile_color 0x5236ff
 gl_color 0xff0000ff
 note_font "DejaVu Sans"
 note_font_size 14
 note_font_color 0xff
 selected true
 addUserKnob {20 User l CardToTrack}
 addUserKnob {26 ""}
 addUserKnob {26 extras l "" t "here you can choose the way you would like find your position\n\n1 I have a Camera and great Matchmove\n   means you have only a tracked Camera - you will have to go normal way in finding position\n\n2  I have a Camera and Geometry\n   see little input called \"Extra\"? this is your new friend, if you have by any chance a geometry of the Scene - can be a model, lidar scan or just a bunch Nuke objects, connect it to the \"Extra\" input and press \"Set\" button, congrats you found your 3D position and ready sdjust your perspective(no need to bother with \"Z\" and \"Happy\" button\n\n3  I have a Camera and Wpos pass\n    if your nice 3D Artist rendered for you a Wpos pass, connect it to the \"Extra\" input and press \"Set\" button, congrats you found your 3D position and ready sdjust your perspective(no need to bother with \"Z\" and \"Happy\" button\n\n4  I have a Camera and Card\n    Let say you have animated Card and you want to translate it's position to Screen space, connect the Card to the .... guess what and press \"GO\" button\n    DONE!!!\n5  Axis \n    In Case you have card which animation is driven by one ore more Axises you can use this option. Just connect the Extra pipe to the lowest Axis in the chain. the script will consolidate transformations for you!\n\n" +STARTLINE T "I have a Camera and"}
 addUserKnob {41 _1 l " " -STARTLINE T NoOp2.extraStuff}
 addUserKnob {41 extraHelper l "" -STARTLINE +INVISIBLE T NoOp2.extraHelper}
 addUserKnob {3 scene l "      scene size" t "the tool does not know how big your scene is, if after adjusting \"Z\" slider you see that the card you generating is too big or too small - adjust the scene size.\n\nyou not going to see something changing till you will press \"Set\" button again\n\nif you do happy you can leave this knob alone there will be no need to touch it again\n\njust remember the value so you will be able to enter it when you will be work on the other shots from the same sequence\n\ncheers!" -STARTLINE}
 scene 10
 addUserKnob {41 hue_rotation l "hue grid" -STARTLINE T HueShift1.hue_rotation}
 addUserKnob {7 op l "     opacity grid" -STARTLINE}
 op 1
 addUserKnob {26 ""}
 addUserKnob {20 setGroup l "set Reference" n 1}
 addUserKnob {26 ds l <b>1. t "first step in finding desired position.\n\nplease find some feature on the screen, feature you can see on the other frames as well.\nnot position the picker on this feature and press \"Set\" button\n\nthe reference frame is set, yo should see now the grid centering on the \"picker\"\n\nthere is a chance that \"grid\" will be very small or very big depends on the size of your scene, feel free to adjust it's size with the u_scale knob.\n\nnow you ready for the next step" T "Set reference frame."}
 addUserKnob {22 REF l Set t "first step in finding desired position.\n\nplease find some feature on the screen, feature you can see on the other frames as well.\nnot position the picker on this feature and press \"Set\" button\n\nthe reference frame is set, yo should see now the grid centering on the \"picker\"\n\nthere is a chance that \"grid\" will be very small or very big depends on the size of your scene, feel free to adjust it's size with the u_scale knob.\n\nnow you ready for the next step" T "import NST_cardToTrack\nNST_cardToTrack.setRefFrame()" +STARTLINE}
 addUserKnob {6 S l INVISIBLE -STARTLINE +INVISIBLE}
 addUserKnob {3 refFrame l "   reference frame:" -STARTLINE +INVISIBLE}
 refFrame 1001
 addUserKnob {41 picker l "     " -STARTLINE T NoOp1.picker}
 addUserKnob {20 endGroup_3 l endGroup n -1}
 addUserKnob {26 ""}
 addUserKnob {20 findZ l "Find Z" n 1}
 findZ 0
 addUserKnob {26 d l "<b>2. " t "Second step help us to find exact position in 3d space\n\nstart advance few frames, you should see that a grid is not fixed anymore to your reference feature, from the moment you noticing it is happening adjust \"Z\" knob to bring the \"grid\" back to the place it was. already after first adjustment you will see that grid is sticking well to the feature. Now you can go to some other frame and refine the position again if needed\n\nTipp:\nit is possible that already after one or two frames of advancement your grid will disappear it can happen because of the size of your scene. just play with \"Z\" slider till you will bring the \"grid\" back to the screen. it is possible that you will have to go to negative values as well." T "go to some other frame and adjust Z. Use stabilize if needed."}
 addUserKnob {41 Stabilize -STARTLINE T NoOp2.Stabilize}
 addUserKnob {6 HighPass -STARTLINE +HIDDEN}
 addUserKnob {7 sharpen l "" -STARTLINE +HIDDEN R 1 10}
 sharpen 2
 addUserKnob {7 Zfind l Z t "Second step help us to find exact position in 3d space\n\nstart advance few frames, you should see that a grid is not fixed anymore to your reference feature, from the moment you noticing it is happening adjust \"Z\" knob to bring the \"grid\" back to the place it was. already after first adjustment you will see that grid is sticking well to the feature. Now you can go to some other frame and refine the position again if needed.\nonce you happy with the result\npress \"Happy\" button!!!\n\nTipp:\nit is possible that already after one or two frames of advancement your grid will disappear it can happen because of the size of your scene. just play with \"Z\" slider till you will bring the \"grid\" back to the screen. it is possible that you will have to go to negative values as well." R -100 100}
 addUserKnob {26 s l <b>3. t "this will create an axis in exact 3D position you found\nplease adjust (if needed)\nrotation of the card to match exact perspective you want\n\nTipp :\nadjusting \"scale\" and \"u_scale\":\nbe carefull when scaling up the card!!! from the moment one of the corners of the \"grid\" is passing the origin of the Camera the calculation will fail. So as a good practice leave your \"grid\" not too big it will not matter for final calculation since it still will lay on the same plane.\n\n" T "Happy with Z? Press \"Happy\" button and adjust perspective."}
 addUserKnob {22 Adjust l Happy!!! t "this will create an axis in exact 3D position you found\nplease adjust (if needed)\nrotation of the card to match exact perspective you want\n\nTipp :\nadjusting \"scale\" and \"u_scale\":\nbe carefull when scaling up the card!!! from the moment one of the corners of the \"grid\" is passing the origin of the Camera the calculation will fail. So as a good practice leave your \"grid\" not too big it will not matter for final calculation since it still will lay on the same plane.\n\n" T "import NST_cardToTrack\nNST_cardToTrack.happy()" +STARTLINE}
 addUserKnob {20 endGroup n -1}
 addUserKnob {26 ""}
 addUserKnob {20 happyGroup l "Adjust TRS" n 1}
 happyGroup 0
 addUserKnob {41 translate T Perspective.translate}
 addUserKnob {41 rotate l "rotate    " T Perspective.rotate}
 addUserKnob {41 scaling l "scale     " T Perspective.scaling}
 addUserKnob {41 uniform_scale l "u_scale " T Perspective.uniform_scale}
 addUserKnob {20 endGroup_1 l endGroup n -1}
 addUserKnob {26 ""}
 addUserKnob {20 goGroup l "Create Nodes" n 1}
 goGroup 0
 addUserKnob {26 r l <b>4. t "this little fellow will create for you three nodes\n\n1. NST_CProject - basically it is a cornerPin node with steroids it allowes to you very easy set Reference point for your \"projection\", stabilize, crop. all in one\n2. CornerPin with a transformation baked in the \"matrix\" knob - usually i am using it to copy to GridWarp or SplineWarp\n3. Roto - the node i am using the most.\nthe transformation is baked into the root matrix.\nso just pick the frame create the rotoshape and enjoy!" T "Time to create our Nodes!"}
 addUserKnob {22 C2T l <b>-----------------------GO!----------------------- t "this little fellow will create for you three nodes\n\n1. NST_CProject - basically it is a cornerPin node with steroids it allowes to you very easy set Reference point for your \"projection\", stabilize, crop. all in one\n2. CornerPin with a transformation baked in the \"matrix\" knob - usually i am using it to copy to GridWarp or SplineWarp\n3. Roto - the node i am using the most.\nthe transformation is baked into the root matrix.\nso just pick the frame create the rotoshape and enjoy!" T "import NST_cardToTrack\nNST_cardToTrack.go()" +STARTLINE}
 addUserKnob {26 w l "" -STARTLINE T or}
 addUserKnob {22 Card l "Create object only" t "create 3d object in extracted position\nwithout animation" -STARTLINE T "import NST_cardToTrack\nNST_cardToTrack.objectOnly()"}
 addUserKnob {6 Card_1 l Card t "Create a card based on 3D position" +STARTLINE}
 Card_1 true
 addUserKnob {6 CornerPin l "Corner Pin" t "Create a corner pin based on 3D position" +STARTLINE}
 CornerPin true
 addUserKnob {6 Roto t "Create a Roto node based on 3D position.\nTracking of the Roto will be saved on the Root leves of the node." +STARTLINE}
 Roto true
 addUserKnob {6 Transform t "Create a transform based on 3D position" +STARTLINE}
 addUserKnob {6 Matrix t "Create a Matrix representation of the transformatio in  3D space, can bre used later in various nodes such as RotoPaint, GridWarp, SplineWarp and so on.\n\nSide note - GridWarp is buggy when using matrix - better stabilize image with corner Pin, use grid warp and un- stabilize back with corner pin.\n(use uv/stmap to reduce quality hits)" +STARTLINE}
 addUserKnob {20 endGroup_2 l endGroup n -1}
 addUserKnob {26 ""}
 addUserKnob {26 credit l " &copy;" T "Helge Stang & Alexey Kuchinski"}
 addUserKnob {20 help_1 l Help}
 addUserKnob {26 hhelp l "" +STARTLINE T "---------------------------------------------------\nStep 1\n\nplease find some feature on the screen, feature you can see on the other frames as well.\nnow position the picker on this feature and press \"Set\" button\n\nthe reference frame is set, yo should see now the grid centering on the \"picker\"\n\nthere is a chance that \"grid\" will be very small or very big depends on the size of your scene, feel free to adjust it's size with the u_scale knob.\n\nnow you ready for the next step\n\n---------------------------------------------------\nStep 2\n\nLet's find exact position in 3d space\n\nstart advance few frames, you should see that a grid is not fixed anymore to your reference feature, from the moment you noticing it is happening adjust \"Z\" knob to bring the \"grid\" back to the place it was. already after first adjustment you will see that grid is sticking well to the feature. Now you can go to some other frame and refine the position again if needed\n\nTipp:\nit is possible that already after one or two frames of advancement your grid will disappear it can happen because of the size of your scene. just play with \"Z\" slider till you will bring the \"grid\" back to the screen. it is possible that you will have to go to negative \nvalues as well.\n\n---------------------------------------------------\nStep 3\n\nthis will create an axis in exact 3D position you found\nplease adjust (if needed)\nrotation of the card to match exact perspective you want\n\nTipp :\nadjusting \"scale\" and \"u_scale\":\nbe carefull when scaling up the card!!! from the moment one of the corners of the \"grid\" is passing the origin of the Camera the calculation will fail. So as a good practice leave your \"grid\" not too big it will not matter for final calculation since it still will lay on the same plane.\n\n\n---------------------------------------------------\nStep 4\n\nButton \"Go\"  will create for you few nodes\n\n1. NST_CProject - basically it is a cornerPin node with steroids it allowes to you very easy set Reference point for your \"projection\", stabilize, crop. all in one\n2. CornerPin with a transformation baked in the \"matrix\" knob - usually i am using it to copy to GridWarp or SplineWarp\n3. Roto - the node i am using the most.\nthe transformation is baked into the root matrix.\nso just pick the frame create the rotoshape and enjoy!\n"}
 addUserKnob {26 credits l "" +STARTLINE T "CardToTrack  v4.0  ||  by Alexey Kuchinski  |  lamakaha@gmail.com  |  7/2017"}
}
 BackdropNode {
  inputs 0
  name BackdropNode1
  tile_color 0x546b3d01
  note_font "Helvetica Bold"
  note_font_size 100
  xpos -1719
  ypos 977
  bookmark false
  bdwidth 287
  bdheight 334
 }
 StickyNote {
  inputs 0
  name StickyNote1
  tile_color 0xffffffff
  label "<b>Mark Joey Tang Deep2VP                ."
  note_font "Helvetica Bold"
  note_font_size 20
  xpos -1719
  ypos 939
 }
 Input {
  inputs 0
  name Extra
  xpos -1449
  ypos -791
  number 2
 }
 Dot {
  name Dot11
  xpos -1415
  ypos 566
 }
set Nd0813800 [stack 0]
 Dot {
  name Dot12
  xpos -1415
  ypos 673
 }
set Nd0813400 [stack 0]
 Dot {
  name Dot7
  xpos -1415
  ypos 726
 }
set Nd0813000 [stack 0]
 Dot {
  name Dot31
  xpos -1675
  ypos 726
 }
 DeepExpression {
  chans0 rgb
  chans1 none
  rgba.red "( ( x/\[value input.width] ) - 0.5 ) * \[value hratio] * deep.front )"
  rgba.green "( ( y/\[value input.height] ) - 0.5 ) * ( ( \[value hratio]*deep.front ) / ( \[value input.width]/\[value input.height] ) )"
  rgba.blue -deep.front
  name DeepExpression6
  label "initial setup"
  xpos -1709
  ypos 1086
  addUserKnob {20 User}
  addUserKnob {7 hratio}
  hratio {{"\[value cam_data.haperture] / \[value cam_data.focal]"}}
 }
 DeepExpression {
  chans0 {rgba.red rgba.green rgba.blue none}
  chans1 none
  rgba.red "(r * \[value cam_data.world_matrix.0] + g * \[value cam_data.world_matrix.1] + b * \[value cam_data.world_matrix.2]) + \[value cam_data.world_matrix.3]"
  rgba.green "(r * \[value cam_data.world_matrix.4] + g * \[value cam_data.world_matrix.5] + b * \[value cam_data.world_matrix.6]) + \[value cam_data.world_matrix.7]"
  rgba.blue "(r * \[value cam_data.world_matrix.8] + g * \[value cam_data.world_matrix.9] + b * \[value cam_data.world_matrix.10]) + \[value cam_data.world_matrix.11]"
  name deepCT_00
  label camera
  xpos -1709
  ypos 1172
  addUserKnob {20 User}
 }
 DeepToImage {
  name DeepToImage3
  xpos -1709
  ypos 1236
 }
 Dot {
  name Dot26
  xpos -1675
  ypos 1840
 }
push $Nd0813000
 Dot {
  name Dot9
  xpos -1415
  ypos 1731
 }
 Input {
  inputs 0
  name Camera
  xpos -624
  ypos 760
  number 1
 }
set Nd0810c00 [stack 0]
push $Nd0813800
 Axis {
  inputs 0
  translate {{"\[if \{\[exists parent.input1] == 0\} \{return 0\} else \{return \[value \[topnode this.parent.input1].translate.0]\}]" x1112 -519.8007202} {"\[if \{\[exists parent.input1] == 0\} \{return 0\} else \{return \[value \[topnode this.parent.input1].translate.1]\}]" x1112 197.4966736} {"\[if \{\[exists parent.input1] == 0\} \{return 0\} else \{return \[value \[topnode this.parent.input1].translate.2]\}]" x1112 -128.6857147}}
  rotate {{"\[if \{\[exists parent.input1] == 0\} \{return 0\} else \{return \[value \[topnode this.parent.input1].rotate.0]\}]"} {"\[if \{\[exists parent.input1] == 0\} \{return 0\} else \{return \[value \[topnode this.parent.input1].rotate.1]\}]"} {"\[if \{\[exists parent.input1] == 0\} \{return 0\} else \{return \[value \[topnode this.parent.input1].rotate.2]\}]"}}
  name Axis1
  xpos -805
  ypos 40
 }
 ColorBars {
  inputs 0
  name ColorBars1
  xpos -976
  ypos -130
 }
 Card2 {
  rows 4
  columns 4
  z 10
  lens_in_focal {{"\[if \{\[exists parent.input1] == 0\} \{return 0\} else \{return \[value \[topnode this.parent.input1].focal]\}]"}}
  lens_in_haperture {{"\[if \{\[exists parent.input1] == 0\} \{return 0\} else \{return \[value \[topnode this.parent.input1].haperture]\}]"}}
  control_points {3 3 3 6

1 {-0.5 -0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0 0 0}
1 {0 -0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0.5 0 0}
1 {0.5 -0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {1 0 0}
1 {-0.5 0 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0 0.5 0}
1 {0 0 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0.5 0.5 0}
1 {0.5 0 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {1 0.5 0}
1 {-0.5 0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0 1 0}
1 {0 0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0.5 1 0}
1 {0.5 0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {1 1 0} }
  name Card2
  xpos -976
  ypos -3
  addUserKnob {20 User}
  addUserKnob {22 "floor Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[0,0.5,0])\nn\['pivot'].setValue(\[0,-0.5,0])"}
  addUserKnob {22 "corner Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[-.5,.5,0])\nn\['pivot'].setValue(\[.5,-.5,0])"}
  addUserKnob {22 snapToSelected -STARTLINE T "b=nuke.selectedNode()\['translate'].value()\nn=nuke.thisNode()\nn\['translate'].setValue(b)"}
  addUserKnob {22 "floor Pivot_1" l "floor Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[0,0.5,0])\nn\['pivot'].setValue(\[0,-0.5,0])"}
  addUserKnob {22 "corner Pivot_1" l "corner Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[-.5,.5,0])\nn\['pivot'].setValue(\[.5,-.5,0])"}
  addUserKnob {22 snapToSelected_1 l snapToSelected -STARTLINE T "b=nuke.selectedNode()\['translate'].value()\nn=nuke.thisNode()\nn\['translate'].setValue(b)"}
 }
 TransformGeo {
  inputs 2
  name TransformGeo2
  xpos -976
  ypos 60
 }
 Switch {
  inputs 2
  which {{parent.extraHelper==1?1:0}}
  name GeoInput
  xpos -976
  ypos 563
 }
 Input {
  inputs 0
  name BG
  xpos 800
  ypos -858
 }
 Dot {
  name Dot4
  xpos 834
  ypos -788
 }
set Nd07e3000 [stack 0]
 Dot {
  name Dot5
  xpos -1122
  ypos -788
 }
 Dot {
  name Dot6
  xpos -1119
  ypos 911
 }
 ScanlineRender {
  inputs 3
  motion_vectors_type distance
  output_shader_vectors true
  P_channel rgb
  name ScanlineRender2
  xpos -976
  ypos 907
 }
 Switch {
  inputs 2
  which {{parent.extraHelper==2?1:0}}
  name WpasRender
  xpos -976
  ypos 1728
 }
 Switch {
  inputs 2
  which {{parent.extraHelper==5?1:0}}
  name deepInput
  note_font_size 14
  xpos -976
  ypos 1836
 }
 NoOp {
  name NoOp1
  tile_color 0xffff
  gl_color 0xffff
  xpos -976
  ypos 2323
  addUserKnob {20 User}
  addUserKnob {22 pick T "a=nuke.toNode(\"NoOp1\")\nr=nuke.sample(a,\"red\",a\['picker'].value(0),a\['picker'].value(1),1,1)\ng=nuke.sample(a,\"green\",a\['picker'].value(0),a\['picker'].value(1),1,1)\nb=nuke.sample(a,\"blue\",a\['picker'].value(0),a\['picker'].value(1),1,1)\n#nuke.tprint(r)\nnuke.toNode('look_at_Axis')\['translate'].setValue(\[r,g,b])" +STARTLINE}
  addUserKnob {12 picker}
  picker {10 10}
 }
 Clamp {
  channels rgba
  name Clamp1
  xpos -125
  ypos 2323
 }
push $Nd0810c00
 FrameHold {
  first_frame 1058
  name StabFrameHold
  xpos -624
  ypos 1121
  disable true
 }
set Nd07a0800 [stack 0]
push $Nd0810c00
 Axis {
  name Axis3
  xpos -500
  ypos 817
 }
 Dot {
  name Dot10
  xpos -476
  ypos 900
 }
 Card2 {
  inputs 0
  display wireframe
  render_mode off
  image_aspect false
  rows 1
  columns 1
  uniform_scale 600
  control_points {3 3 3 6

1 {-0.5 -0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0 0 0}
1 {0 -0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0.5 0 0}
1 {0.5 -0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {1 0 0}
1 {-0.5 0 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0 0.5 0}
1 {0 0 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0.5 0.5 0}
1 {0.5 0 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {1 0.5 0}
1 {-0.5 0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0 1 0}
1 {0 0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0.5 1 0}
1 {0.5 0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {1 1 0} }
  name Card3
  tile_color 0xff00ff
  gl_color 0xff00ff
  xpos -375
  ypos 819
  addUserKnob {20 User}
  addUserKnob {22 "floor Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[0,0.5,0])\nn\['pivot'].setValue(\[0,-0.5,0])"}
  addUserKnob {22 "corner Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[-.5,.5,0])\nn\['pivot'].setValue(\[.5,-.5,0])"}
  addUserKnob {22 snapToSelected -STARTLINE T "b=nuke.selectedNode()\['translate'].value()\nn=nuke.thisNode()\nn\['translate'].setValue(b)"}
  addUserKnob {22 "floor Pivot_1" l "floor Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[0,0.5,0])\nn\['pivot'].setValue(\[0,-0.5,0])"}
  addUserKnob {22 "corner Pivot_1" l "corner Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[-.5,.5,0])\nn\['pivot'].setValue(\[.5,-.5,0])"}
  addUserKnob {22 snapToSelected_1 l snapToSelected -STARTLINE T "b=nuke.selectedNode()\['translate'].value()\nn=nuke.thisNode()\nn\['translate'].setValue(b)"}
 }
 TransformGeo {
  inputs 2
  name TransformGeo3
  tile_color 0xff00ff
  gl_color 0xff00ff
  xpos -375
  ypos 896
 }
 Dot {
  name Dot20
  xpos -341
  ypos 983
 }
push $Nd0813000
 Constant {
  inputs 0
  format "512 512 0 0 512 512 1 square_512"
  name Constant2
  tile_color 0xff
  xpos -239
  ypos -627
  postage_stamp false
 }
set Nd07e0400 [stack 0]
 Wireframe {
  operation "see through"
  line_width 1
  line_color {1 0 0 1}
  name Wireframe4
  xpos -642
  ypos -416
 }
set Nd073fc00 [stack 0]
 Card2 {
  display wireframe
  image_aspect false
  rows 1
  columns 1
  translate {0.5 -0.5 0}
  uniform_scale 0.03
  control_points {3 3 3 6

1 {-0.5 -0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0 0 0}
1 {0 -0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0.5 0 0}
1 {0.5 -0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {1 0 0}
1 {-0.5 0 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0 0.5 0}
1 {0 0 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0.5 0.5 0}
1 {0.5 0 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {1 0.5 0}
1 {-0.5 0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0 1 0}
1 {0 0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0.5 1 0}
1 {0.5 0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {1 1 0} }
  name Card9
  xpos -891
  ypos -370
  addUserKnob {20 User}
  addUserKnob {22 "floor Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[0,0.5,0])\nn\['pivot'].setValue(\[0,-0.5,0])"}
  addUserKnob {22 "corner Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[-.5,.5,0])\nn\['pivot'].setValue(\[.5,-.5,0])"}
  addUserKnob {22 snapToSelected -STARTLINE T "b=nuke.selectedNode()\['translate'].value()\nn=nuke.thisNode()\nn\['translate'].setValue(b)"}
  addUserKnob {22 "floor Pivot_1" l "floor Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[0,0.5,0])\nn\['pivot'].setValue(\[0,-0.5,0])"}
  addUserKnob {22 "corner Pivot_1" l "corner Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[-.5,.5,0])\nn\['pivot'].setValue(\[.5,-.5,0])"}
  addUserKnob {22 snapToSelected_1 l snapToSelected -STARTLINE T "b=nuke.selectedNode()\['translate'].value()\nn=nuke.thisNode()\nn\['translate'].setValue(b)"}
 }
 Dot {
  name Dot19
  xpos -857
  ypos -260
 }
push $Nd073fc00
 Card2 {
  display wireframe
  image_aspect false
  rows 1
  columns 1
  translate {0.5 0.5 0}
  uniform_scale 0.03
  control_points {3 3 3 6

1 {-0.5 -0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0 0 0}
1 {0 -0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0.5 0 0}
1 {0.5 -0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {1 0 0}
1 {-0.5 0 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0 0.5 0}
1 {0 0 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0.5 0.5 0}
1 {0.5 0 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {1 0.5 0}
1 {-0.5 0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0 1 0}
1 {0 0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0.5 1 0}
1 {0.5 0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {1 1 0} }
  name Card8
  xpos -806
  ypos -367
  addUserKnob {20 User}
  addUserKnob {22 "floor Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[0,0.5,0])\nn\['pivot'].setValue(\[0,-0.5,0])"}
  addUserKnob {22 "corner Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[-.5,.5,0])\nn\['pivot'].setValue(\[.5,-.5,0])"}
  addUserKnob {22 snapToSelected -STARTLINE T "b=nuke.selectedNode()\['translate'].value()\nn=nuke.thisNode()\nn\['translate'].setValue(b)"}
  addUserKnob {22 "floor Pivot_1" l "floor Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[0,0.5,0])\nn\['pivot'].setValue(\[0,-0.5,0])"}
  addUserKnob {22 "corner Pivot_1" l "corner Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[-.5,.5,0])\nn\['pivot'].setValue(\[.5,-.5,0])"}
  addUserKnob {22 snapToSelected_1 l snapToSelected -STARTLINE T "b=nuke.selectedNode()\['translate'].value()\nn=nuke.thisNode()\nn\['translate'].setValue(b)"}
 }
 Dot {
  name Dot18
  xpos -772
  ypos -286
 }
push $Nd073fc00
 Card2 {
  display wireframe
  image_aspect false
  rows 1
  columns 1
  translate {-0.5 -0.5 0}
  uniform_scale 0.03
  control_points {3 3 3 6

1 {-0.5 -0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0 0 0}
1 {0 -0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0.5 0 0}
1 {0.5 -0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {1 0 0}
1 {-0.5 0 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0 0.5 0}
1 {0 0 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0.5 0.5 0}
1 {0.5 0 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {1 0.5 0}
1 {-0.5 0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0 1 0}
1 {0 0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0.5 1 0}
1 {0.5 0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {1 1 0} }
  name Card7
  xpos -724
  ypos -367
  addUserKnob {20 User}
  addUserKnob {22 "floor Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[0,0.5,0])\nn\['pivot'].setValue(\[0,-0.5,0])"}
  addUserKnob {22 "corner Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[-.5,.5,0])\nn\['pivot'].setValue(\[.5,-.5,0])"}
  addUserKnob {22 snapToSelected -STARTLINE T "b=nuke.selectedNode()\['translate'].value()\nn=nuke.thisNode()\nn\['translate'].setValue(b)"}
  addUserKnob {22 "floor Pivot_1" l "floor Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[0,0.5,0])\nn\['pivot'].setValue(\[0,-0.5,0])"}
  addUserKnob {22 "corner Pivot_1" l "corner Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[-.5,.5,0])\nn\['pivot'].setValue(\[.5,-.5,0])"}
  addUserKnob {22 snapToSelected_1 l snapToSelected -STARTLINE T "b=nuke.selectedNode()\['translate'].value()\nn=nuke.thisNode()\nn\['translate'].setValue(b)"}
 }
 Dot {
  name Dot17
  xpos -690
  ypos -312
 }
push $Nd073fc00
 Card2 {
  display wireframe
  image_aspect false
  rows 1
  columns 1
  translate {-0.5 0.5 0}
  uniform_scale 0.03
  control_points {3 3 3 6

1 {-0.5 -0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0 0 0}
1 {0 -0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0.5 0 0}
1 {0.5 -0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {1 0 0}
1 {-0.5 0 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0 0.5 0}
1 {0 0 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0.5 0.5 0}
1 {0.5 0 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {1 0.5 0}
1 {-0.5 0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0 1 0}
1 {0 0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0.5 1 0}
1 {0.5 0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {1 1 0} }
  name Card6
  xpos -642
  ypos -373
  addUserKnob {20 User}
  addUserKnob {22 "floor Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[0,0.5,0])\nn\['pivot'].setValue(\[0,-0.5,0])"}
  addUserKnob {22 "corner Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[-.5,.5,0])\nn\['pivot'].setValue(\[.5,-.5,0])"}
  addUserKnob {22 snapToSelected -STARTLINE T "b=nuke.selectedNode()\['translate'].value()\nn=nuke.thisNode()\nn\['translate'].setValue(b)"}
  addUserKnob {22 "floor Pivot_1" l "floor Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[0,0.5,0])\nn\['pivot'].setValue(\[0,-0.5,0])"}
  addUserKnob {22 "corner Pivot_1" l "corner Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[-.5,.5,0])\nn\['pivot'].setValue(\[.5,-.5,0])"}
  addUserKnob {22 snapToSelected_1 l snapToSelected -STARTLINE T "b=nuke.selectedNode()\['translate'].value()\nn=nuke.thisNode()\nn\['translate'].setValue(b)"}
 }
 MergeGeo {
  inputs 2
  selectable false
  name MergeGeo5
  xpos -642
  ypos -316
 }
 MergeGeo {
  inputs 2
  selectable false
  name MergeGeo6
  xpos -642
  ypos -290
 }
 MergeGeo {
  inputs 2
  selectable false
  name MergeGeo7
  xpos -642
  ypos -264
 }
 Dot {
  name Dot16
  xpos -608
  ypos -187
 }
push $Nd07e0400
 Wireframe {
  operation "see through"
  line_width 1
  line_color {0 1 0 1}
  name Wireframe5
  xpos -495
  ypos -441
 }
 Card2 {
  display wireframe
  cast_shadow false
  receive_shadow false
  image_aspect false
  rows 2
  columns 2
  uniform_scale 100
  control_points {3 3 3 6

1 {-0.5 -0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0 0 0}
1 {0 -0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0.5 0 0}
1 {0.5 -0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {1 0 0}
1 {-0.5 0 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0 0.5 0}
1 {0 0 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0.5 0.5 0}
1 {0.5 0 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {1 0.5 0}
1 {-0.5 0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0 1 0}
1 {0 0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0.5 1 0}
1 {0.5 0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {1 1 0} }
  name Card5
  xpos -495
  ypos -371
  addUserKnob {20 User}
  addUserKnob {22 "floor Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[0,0.5,0])\nn\['pivot'].setValue(\[0,-0.5,0])"}
  addUserKnob {22 "corner Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[-.5,.5,0])\nn\['pivot'].setValue(\[.5,-.5,0])"}
  addUserKnob {22 snapToSelected -STARTLINE T "b=nuke.selectedNode()\['translate'].value()\nn=nuke.thisNode()\nn\['translate'].setValue(b)"}
  addUserKnob {22 "floor Pivot_1" l "floor Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[0,0.5,0])\nn\['pivot'].setValue(\[0,-0.5,0])"}
  addUserKnob {22 "corner Pivot_1" l "corner Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[-.5,.5,0])\nn\['pivot'].setValue(\[.5,-.5,0])"}
  addUserKnob {22 snapToSelected_1 l snapToSelected -STARTLINE T "b=nuke.selectedNode()\['translate'].value()\nn=nuke.thisNode()\nn\['translate'].setValue(b)"}
 }
 Dot {
  name Dot15
  xpos -461
  ypos -307
 }
push $Nd07e0400
 Wireframe {
  operation "see through"
  line_width 1
  line_color {1 0 1 1}
  name Wireframe3
  xpos -352
  ypos -421
 }
 Card2 {
  display wireframe
  rows 2
  columns 2
  translate {0 0 -0.0001}
  uniform_scale 0.1
  control_points {3 3 3 6

1 {-0.5 -0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0 0 0}
1 {0 -0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0.5 0 0}
1 {0.5 -0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {1 0 0}
1 {-0.5 0 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0 0.5 0}
1 {0 0 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0.5 0.5 0}
1 {0.5 0 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {1 0.5 0}
1 {-0.5 0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0 1 0}
1 {0 0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0.5 1 0}
1 {0.5 0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {1 1 0} }
  name Card4
  xpos -352
  ypos -379
  addUserKnob {20 User}
  addUserKnob {22 "floor Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[0,0.5,0])\nn\['pivot'].setValue(\[0,-0.5,0])"}
  addUserKnob {22 "corner Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[-.5,.5,0])\nn\['pivot'].setValue(\[.5,-.5,0])"}
  addUserKnob {22 snapToSelected -STARTLINE T "b=nuke.selectedNode()\['translate'].value()\nn=nuke.thisNode()\nn\['translate'].setValue(b)"}
  addUserKnob {22 "floor Pivot_1" l "floor Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[0,0.5,0])\nn\['pivot'].setValue(\[0,-0.5,0])"}
  addUserKnob {22 "corner Pivot_1" l "corner Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[-.5,.5,0])\nn\['pivot'].setValue(\[.5,-.5,0])"}
  addUserKnob {22 snapToSelected_1 l snapToSelected -STARTLINE T "b=nuke.selectedNode()\['translate'].value()\nn=nuke.thisNode()\nn\['translate'].setValue(b)"}
 }
 Dot {
  name Dot14
  xpos -318
  ypos -333
 }
push $Nd07e0400
 Wireframe {
  operation "see through"
  line_width 0.1
  name Wireframe2
  xpos -239
  ypos -425
 }
 Card2 {
  display wireframe
  rows 4
  columns 4
  control_points {3 3 3 6

1 {-0.5 -0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0 0 0}
1 {0 -0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0.5 0 0}
1 {0.5 -0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {1 0 0}
1 {-0.5 0 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0 0.5 0}
1 {0 0 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0.5 0.5 0}
1 {0.5 0 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {1 0.5 0}
1 {-0.5 0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0 1 0}
1 {0 0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0.5 1 0}
1 {0.5 0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {1 1 0} }
  name Card1
  xpos -232
  ypos -372
  addUserKnob {20 User}
  addUserKnob {22 "floor Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[0,0.5,0])\nn\['pivot'].setValue(\[0,-0.5,0])"}
  addUserKnob {22 "corner Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[-.5,.5,0])\nn\['pivot'].setValue(\[.5,-.5,0])"}
  addUserKnob {22 snapToSelected -STARTLINE T "b=nuke.selectedNode()\['translate'].value()\nn=nuke.thisNode()\nn\['translate'].setValue(b)"}
  addUserKnob {22 "floor Pivot_1" l "floor Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[0,0.5,0])\nn\['pivot'].setValue(\[0,-0.5,0])"}
  addUserKnob {22 "corner Pivot_1" l "corner Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[-.5,.5,0])\nn\['pivot'].setValue(\[.5,-.5,0])"}
  addUserKnob {22 snapToSelected_1 l snapToSelected -STARTLINE T "b=nuke.selectedNode()\['translate'].value()\nn=nuke.thisNode()\nn\['translate'].setValue(b)"}
 }
 MergeGeo {
  inputs 2
  selectable false
  name MergeGeo2
  xpos -232
  ypos -337
 }
 MergeGeo {
  inputs 2
  selectable false
  name MergeGeo3
  xpos -232
  ypos -311
 }
 MergeGeo {
  inputs 2
  selectable false
  name MergeGeo4
  xpos -232
  ypos -191
 }
set Nb88de000 [stack 0]
 TransformGeo {
  inputs 2
  name TransformGeo5
  xpos -715
  ypos 722
 }
 Wireframe {
  inputs 0
  operation "see through"
  line_width 2
  name Wireframe1
  xpos -713
  ypos 433
 }
set Nb88dd800 [stack 0]
push $Nd0813400
 ApplyMaterial {
  inputs 2
  name ApplyMaterial2
  xpos -585
  ypos 669
 }
push $Nb88dd800
push $Nd0813400
 ApplyMaterial {
  inputs 2
  name ApplyMaterial1
  xpos -808
  ypos 519
 }
push 0
 Switch {
  inputs 2
  which {{parent.extraHelper==1?1:0}}
  name GeoInput1
  xpos -470
  ypos 640
 }
 Axis {
  inputs 0
  display off
  selectable false
  scaling {0 0 0}
  name Perspective
  selected true
  xpos -610
  ypos 7
 }
 Axis {
  inputs 0
  translate {-23.31071663 15.68824577 -22.73529816}
  rotate {{"\[if \{\[exists parent.input1] == 0\} \{return 0\} else \{return degrees(atan((\[topnode input1].translate.y(ref)-translate.y)/sqrt(pow2(sqrt(pow2(\[topnode input1].translate.x(ref)-translate.x)+pow2(\[topnode input1].translate.z(ref)-translate.z))))))\}]        "} {"\[topnode input1].translate.x(ref)-translate.x >= 0 ? 270-degrees(atan((\[topnode input1].translate.z(ref)-translate.z)/(\[topnode input1].translate.x(ref)-translate.x))): -degrees(atan((\[topnode input1].translate.z(ref)-translate.z)/(\[topnode input1].translate.x(ref)-translate.x)))-270"} {"curve  "}}
  name look_at_Axis
  xpos -500
  ypos -146
  addUserKnob {20 User}
  addUserKnob {3 ref}
  ref {{parent.refFrame}}
 }
 Axis2 {
  inputs 0
  name Axis2
  xpos -362
  ypos -150
 }
 Switch {
  inputs 2
  which {{"\[exists parent.input1]"}}
  name Switch2
  label "\[value which]"
  xpos -510
  ypos -52
 }
 Axis {
  display solid+wireframe
  translate {0 0 {parent.Zfind}}
  uniform_scale {{parent.Perspective.uniform_scale}}
  name Z_finder
  xpos -497
  ypos 14
 }
 Switch {
  inputs 2
  which 1
  name Switch
  label "\[value which]"
  xpos -507
  ypos 126
 }
 Dot {
  name Dot1
  xpos -473
  ypos 222
 }
set Nb8847400 [stack 0]
push $Nb88de000
push 0
 Switch {
  inputs 2
  which 1
  name Switch1
  label "\[value which]"
  xpos -232
  ypos 138
 }
 TransformGeo {
  inputs 2
  name TransformGeo1
  xpos -231
  ypos 218
 }
 MergeGeo {
  inputs 2
  selectable false
  name MergeGeo1
  xpos -231
  ypos 640
 }
 Switch {
  inputs 3
  which {{parent.extraHelper==3?1:parent.extraHelper==4?2:0}}
  name AnimCard
  xpos -231
  ypos 722
 }
 MergeGeo {
  inputs 2
  selectable false
  name MergeGeo8
  xpos -231
  ypos 979
 }
push $Nd07a0800
push $Nb8847400
 Dot {
  name Dot8
  xpos -470
  ypos 583
 }
push $Nd0810c00
push $Nd07e3000
 Dot {
  name Dot21
  xpos 834
  ypos 764
 }
set Nb8846000 [stack 0]
 Project3D {
  inputs 2
  crop false
  name Project3D1
  xpos 550
  ypos 760
 }
 Card2 {
  display wireframe
  rows 4
  columns 4
  uniform_scale 100000
  control_points {3 3 3 6

1 {-0.5 -0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0 0 0}
1 {0 -0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0.5 0 0}
1 {0.5 -0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {1 0 0}
1 {-0.5 0 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0 0.5 0}
1 {0 0 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0.5 0.5 0}
1 {0.5 0 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {1 0.5 0}
1 {-0.5 0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0 1 0}
1 {0 0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0.5 1 0}
1 {0.5 0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {1 1 0} }
  name Card10
  xpos 554
  ypos 950
  addUserKnob {20 User}
  addUserKnob {22 "floor Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[0,0.5,0])\nn\['pivot'].setValue(\[0,-0.5,0])"}
  addUserKnob {22 "corner Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[-.5,.5,0])\nn\['pivot'].setValue(\[.5,-.5,0])"}
  addUserKnob {22 snapToSelected -STARTLINE T "b=nuke.selectedNode()\['translate'].value()\nn=nuke.thisNode()\nn\['translate'].setValue(b)"}
  addUserKnob {22 "floor Pivot_1" l "floor Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[0,0.5,0])\nn\['pivot'].setValue(\[0,-0.5,0])"}
  addUserKnob {22 "corner Pivot_1" l "corner Pivot" -STARTLINE T "n=nuke.thisNode()\nn\['translate'].setValue(\[-.5,.5,0])\nn\['pivot'].setValue(\[.5,-.5,0])"}
  addUserKnob {22 snapToSelected_1 l snapToSelected -STARTLINE T "b=nuke.selectedNode()\['translate'].value()\nn=nuke.thisNode()\nn\['translate'].setValue(b)"}
 }
 TransformGeo {
  inputs 2
  name TransformGeo4
  xpos 554
  ypos 993
 }
push $Nb8846000
 Dot {
  name Dot22
  xpos 834
  ypos 1035
 }
set Nb8845000 [stack 0]
 Remove {
  name Remove2
  xpos 653
  ypos 1025
 }
 ScanlineRender {
  inputs 3
  shutter 0
  motion_vectors_type distance
  name ScanlineRender3
  xpos 554
  ypos 1127
 }
push $Nb8845000
 Switch {
  inputs 2
  which 1
  name StabSwitch
  label "\[value which]"
  xpos 800
  ypos 1121
  disable true
 }
 Dot {
  name Dot2
  xpos 834
  ypos 1510
 }
 Dot {
  name Dot3
  xpos 834
  ypos 1582
 }
set Nb87bfc00 [stack 0]
 Remove {
  name Remove1
  xpos 154
  ypos 1578
 }
 ScanlineRender {
  inputs 3
  shutter 0
  motion_vectors_type distance
  name ScanlineRender1
  xpos -235
  ypos 1584
 }
 HueShift {
  name HueShift1
  xpos -235
  ypos 1702
 }
 Multiply {
  channels rgba
  value {{parent.op}}
  name Multiply1
  xpos -235
  ypos 1728
 }
push $Nb87bfc00
 Merge2 {
  inputs 2
  name Merge2
  xpos 113
  ypos 1808
  disable {{HighPass}}
 }
 Merge2 {
  inputs 2
  mix 0.001
  name Merge1
  xpos 113
  ypos 2323
 }
 Dot {
  name Dot29
  xpos 144
  ypos 2459
 }
set Nb87be000 [stack 0]
 Dot {
  name Dot13
  xpos 21
  ypos 2459
 }
 Shuffle {
  alpha white
  name Shuffle1
  tile_color 0xffffffff
  label "White Alpha"
  xpos -13
  ypos 2511
 }
 Dot {
  name Dot23
  xpos 21
  ypos 2562
 }
set Nb87bd400 [stack 0]
 Dot {
  name Dot27
  xpos -123
  ypos 2562
 }
 Invert {
  channels rgba
  name Invert1
  xpos -157
  ypos 2593
 }
 FrameHold {
  name StabRef
  xpos -157
  ypos 2631
 }
 Dot {
  name Dot28
  xpos -123
  ypos 2698
 }
push $Nb87bd400
 Merge2 {
  inputs 2
  bbox A
  name Merge3
  xpos -13
  ypos 2694
 }
 Grade {
  add -1
  black_clamp false
  name Grade1
  xpos -13
  ypos 2720
  addUserKnob {20 User}
  addUserKnob {22 "keep luma" -STARTLINE T keepLuma()}
  addUserKnob {22 "keep luma_1" l "keep luma" -STARTLINE T keepLuma()}
  addUserKnob {22 "keep luma_2" l "keep luma" -STARTLINE T keepLuma()}
  addUserKnob {22 "keep luma_3" l "keep luma" -STARTLINE T keepLuma()}
 }
 Grade {
  multiply {{parent.sharpen}}
  add 0.5
  name Grade2
  xpos -13
  ypos 2746
  addUserKnob {20 User}
  addUserKnob {22 "keep luma" -STARTLINE T keepLuma()}
  addUserKnob {22 "keep luma_1" l "keep luma" -STARTLINE T keepLuma()}
  addUserKnob {22 "keep luma_2" l "keep luma" -STARTLINE T keepLuma()}
  addUserKnob {22 "keep luma_3" l "keep luma" -STARTLINE T keepLuma()}
 }
 Dot {
  name Dot30
  xpos 21
  ypos 2825
 }
push $Nb87be000
 Switch {
  inputs 2
  which {{HighPass}}
  name HighPass
  label "\[value which]"
  xpos 110
  ypos 2815
 }
 Output {
  name Output1
  xpos 110
  ypos 3021
 }
 Camera {
  inputs 0
  display off
  selectable false
  xform_order {{"\[if \{\[exists parent.input1] == 0\} \{return 0\} else \{return \[value \[topnode this.parent.input1].cam_xform_order]\}]"}}
  rot_order {{"\[if \{\[exists parent.input1] == 0\} \{return 0\} else \{return \[value \[topnode this.parent.input1].cam_rot_order]\}]"}}
  useMatrix true
  matrix {
      {{"\[if \{\[exists parent.input1] == 0\} \{return 0\} else \{return \[value \[topnode this.parent.input1].world_matrix.0]\}]"} {"\[if \{\[exists parent.input1] == 0\} \{return 0\} else \{return \[value \[topnode this.parent.input1].world_matrix.1]\}]"} {"\[if \{\[exists parent.input1] == 0\} \{return 0\} else \{return \[value \[topnode this.parent.input1].world_matrix.2]\}]"} {"\[if \{\[exists parent.input1] == 0\} \{return 0\} else \{return \[value \[topnode this.parent.input1].world_matrix.3]\}]"}}
      {{"\[if \{\[exists parent.input1] == 0\} \{return 0\} else \{return \[value \[topnode this.parent.input1].world_matrix.4]\}]"} {"\[if \{\[exists parent.input1] == 0\} \{return 0\} else \{return \[value \[topnode this.parent.input1].world_matrix.5]\}]"} {"\[if \{\[exists parent.input1] == 0\} \{return 0\} else \{return \[value \[topnode this.parent.input1].world_matrix.6]\}]"} {"\[if \{\[exists parent.input1] == 0\} \{return 0\} else \{return \[value \[topnode this.parent.input1].world_matrix.7]\}]"}}
      {{"\[if \{\[exists parent.input1] == 0\} \{return 0\} else \{return \[value \[topnode this.parent.input1].world_matrix.8]\}]"} {"\[if \{\[exists parent.input1] == 0\} \{return 0\} else \{return \[value \[topnode this.parent.input1].world_matrix.9]\}]"} {"\[if \{\[exists parent.input1] == 0\} \{return 0\} else \{return \[value \[topnode this.parent.input1].world_matrix.10]\}]"} {"\[if \{\[exists parent.input1] == 0\} \{return 0\} else \{return \[value \[topnode this.parent.input1].world_matrix.11]\}]"}}
      {{"\[if \{\[exists parent.input1] == 0\} \{return 0\} else \{return \[value \[topnode this.parent.input1].world_matrix.12]\}]"} {"\[if \{\[exists parent.input1] == 0\} \{return 0\} else \{return \[value \[topnode this.parent.input1].world_matrix.13]\}]"} {"\[if \{\[exists parent.input1] == 0\} \{return 0\} else \{return \[value \[topnode this.parent.input1].world_matrix.14]\}]"} {"\[if \{\[exists parent.input1] == 0\} \{return 0\} else \{return \[value \[topnode this.parent.input1].world_matrix.15]\}]"}}
    }
  focal {{"\[if \{\[exists parent.input1] == 0\} \{return 0\} else \{return \[value \[topnode this.parent.input1].focal]\}]"}}
  haperture {{"\[if \{\[exists parent.input1] == 0\} \{return 0\} else \{return \[value \[topnode this.parent.input1].haperture]\}]"}}
  name cam_data
  xpos -1567
  ypos 1072
 }
 NoOp {
  inputs 0
  name NoOp2
  knobChanged "nn = nuke.thisGroup()\nk = nuke.thisKnob()\nkn = k.name()\n\nif kn == \"extraStuff\":\n    if nn\['extraHelper'].value() in \[0,1,2,5]:\n        nn\[\"setGroup\"].clearFlag(1)\n        nn\['findZ'].setFlag(1)\n        nn\[\"happyGroup\"].setFlag(1)\n        nn\[\"goGroup\"].setFlag(1)\n        nn\[\"Zfind\"].setValue(0)\n        nn\['translate'].setValue(0)\n        nn\['rotate'].setValue(0)\n        nn\['scaling'].setValue(0)\n    elif nn\['extraHelper'].value() in \[3,4]:\n        nn\[\"setGroup\"].setFlag(1)\n        nn\['findZ'].setFlag(1)\n        nn\[\"happyGroup\"].setFlag(1)\n        nn\[\"goGroup\"].clearFlag(1)\n        nn\[\"Zfind\"].setValue(0)\nelif kn == \"Stabilize\":\n    t = nn\['S']\n    if t.value() == 0:\n        nn\['HighPass'].setVisible(False)\n        nn\['sharpen'].setVisible(False)\n    else:\n        nn\['HighPass'].setVisible(True)\n        nn\['sharpen'].setVisible(True)\n    "
  xpos 479
  ypos -605
  addUserKnob {20 User}
  addUserKnob {4 extraStuff t "here you can choose the way you would like find your position\n\n1 I have a Camera and great Matchmove\n   means you have only a tracked Camera - you will have to go normal way in finding position\n\n2  I have a Camera and Geometry\n   see little input called \"Extra\"? this is your new friend, if you have by any chance a geometry of the Scene - can be a model, lidar scan or just a bunch Nuke objects, connect it to the \"Extra\" input and press \"Set\" button, congrats you found your 3D position and ready sdjust your perspective(no need to bother with \"Z\" and \"Happy\" button\n\n3  I have a Camera and Wpos pass\n    if your nice 3D Artist rendered for you a Wpos pass, connect it to the \"Extra\" input and press \"Set\" button, congrats you found your 3D position and ready sdjust your perspective(no need to bother with \"Z\" and \"Happy\" button\n\n4  I have a Camera and Card\n    Let say you have animated Card and you want to translate it's position to Screen space,\n     connect the Card to the .... \n    Adjust rotation/position/scaling  in the Card it self if needed\n     and press \"GO\" button\n    DONE!!!\n\n5 I have a Camera and an Axis\n    In some cases you have to use multiple Axises to refine position of your card.\n    This option will consolidate transformations stored in Axises.\n    Adjust rotation/position/scaling  in the Axis it self if needed\n    Connect the last (lowest) axis to Extra pipe and press GO button\n\n6 Use this one in case you have deep image." M {"great match move!!!" Geometry "Wpos pass" Card Axis Deep ""}}
  addUserKnob {3 extraHelper}
  extraHelper {{"\[numvalue extraStuff]"}}
  addUserKnob {22 Stabilize T "import NST_cardToTrack\nNST_cardToTrack.stabilize()" +STARTLINE}
 }
end_group
