Group {
 name apChroma
 help "Advanced chromatic drift gizmo, that works through a sub-frame blend of different values on an STMap and Transform, while creating a color spectrum.\n\napChroma v1.1\nadrianpueyo.com"
 knobChanged "n = nuke.thisNode()\nk = nuke.thisKnob()\nkn = k.name()\nif kn == \"monochrome\":\n    k.setValue(min(1,max(0,k.value())))\nelif kn == \"output_dist_matte\":\n    n.knob(\"output_matte_channel\").setEnabled(k.value())"
 tile_color 0x736efdff
 selected true
 addUserKnob {20 apChroma}
 addUserKnob {26 text l "<b> Transform"}
 addUserKnob {41 translate T Transform17.translate}
 addUserKnob {41 rotate T Transform17.rotate}
 addUserKnob {41 scale T Transform17.scale}
 addUserKnob {41 center T Transform17.center}
 addUserKnob {22 center_on_input l "center on input" -STARTLINE T "n = nuke.thisNode()\ntry:\n    ni = n.input(0)\n    n\[\"center\"].setValue(\[ni.width()/2,ni.height()/2])\nexcept:\n    pass"}
 addUserKnob {7 smooth l "smooth<i style=\"color:#888\"></i>" t "Helps keep a lower sample number for large distortions by adding motion blur. The higher this value, the higher the motion blur quality.\n\nFor typical aberrations this won't be needed, so better avoid smoothing when possible by keeping it 0, as it is super heavy to compute!"}
 addUserKnob {41 invert_matrix l invert T Transform17.invert_matrix}
 addUserKnob {6 black_outside l "black outside" t "When disabled, the edges of your image will be extended in the aberration instead of seeing black entering through the first frequencies." -STARTLINE}
 addUserKnob {22 create_uv_map l " Create UV Map " T "n = nuke.thisNode()\nn.end()\nns = nuke.selectedNodes()\n\[i.setSelected(False) for i in ns]\ntry:\n    uv = nuke.nodes.NST_UV_Map()\n    isExpression = False\nexcept:\n    uv = nuke.nodes.Expression()\n    isExpression = True\nuv.setXYpos(n.xpos()+140, n.ypos()-100)\nuv.setSelected(True)\nif isExpression:\n    uv\[\"expr0\"].setValue(\"(x+0.5)/width\")\n    uv\[\"expr1\"].setValue(\"(y+0.5)/height\")\nn.setInput(1,uv)\nd = nuke.createNode(\"Dot\")\nd.hideControlPanel()\nd.setYpos(int(n.ypos()+n.screenHeight()/2 - d.screenHeight()/2))\nuv.setSelected(False)\nd.setSelected(False)\n\[i.setSelected(True) for i in ns]" +STARTLINE}
 addUserKnob {26 breathe l "" +STARTLINE T " "}
 addUserKnob {26 text_1 l "<b> Settings"}
 addUserKnob {3 samples}
 samples 10
 addUserKnob {7 ab l aberration t "This drives the amount of color aberration.\n0 = No aberration at all, works as regular STMap.\n1 = Amount of aberration equal to the values of the input UV Map." R 0 2}
 ab 1
 addUserKnob {7 compensate t "Inverse the values of the distortion map so that the overall effect stays at the same position." R -1 1}
 compensate 1
 addUserKnob {7 monochrome t "With the same amount of \"color leak\", this desaturates the spectrum in that leak.\nAt value 1, the effect is similar to a directional blur."}
 addUserKnob {14 overscan R 0 100}
 addUserKnob {6 invert_spectrum l "invert spectrum" +STARTLINE}
 addUserKnob {6 calculate_multi_alpha l "calculate per-channel alpha" t "Also generates a channel layer called apChroma wich includes the transformed alphas for each of the rgba channels. This is necessary if you want to merge the result of this node onto a background. You'll need apChromaMerge or a similar gizmo in order to perform the special merge." -STARTLINE}
 calculate_multi_alpha true
 addUserKnob {6 process_alpha l "process single alpha from" t "If activated, the multi-channel alpha will get combined into a regular alpha that you can use for normal operations after this node." +STARTLINE}
 process_alpha true
 addUserKnob {41 mode l "" -STARTLINE T Saturation1.mode}
 addUserKnob {6 output_dist_matte l "output distortion matte" t "Useful if you want to add a grading or iBlur afterwards, driven by the amount of chromatic aberration." +STARTLINE}
 addUserKnob {41 output_matte_channel l "" -STARTLINE T CopyAlpha.to0}
 addUserKnob {26 breathe3 l "" +STARTLINE T " "}
 addUserKnob {26 ""}
 addUserKnob {41 maskChannelMask l "mask " T MergeRGB.maskChannelMask}
 addUserKnob {41 inject -STARTLINE T MergeRGB.inject}
 addUserKnob {41 invert_mask l invert -STARTLINE T MergeRGB.invert_mask}
 addUserKnob {41 fringe -STARTLINE T MergeRGB.fringe}
 addUserKnob {41 mix T MergeRGB.mix}
 addUserKnob {26 version_author l "" t "apChroma v1.1\n2016-2019" +STARTLINE T "<span style=\"color:#666\"><br/><b>apChroma v1.1</b> - <a href=\"http://www.adrianpueyo.com\" style=\"color:#666;text-decoration: none;\">adrianpueyo.com</a>, 2016-2019</span>"}
 addUserKnob {20 Spectrum}
 addUserKnob {41 lut l "" +STARTLINE T CLP.lut}
 addUserKnob {22 lutPrepare l INVISIBLE +INVISIBLE T "n = nuke.thisNode()\ntry:\n    n.knob(\"lut\").delCurve(\"master\")\n    n.knob(\"lut\").delCurve(\"alpha\")\nexcept:\n    pass" +STARTLINE}
 addUserKnob {52 lutPrepareGo T "nuke.thisNode()\[\"lutPrepare\"].execute()" +STARTLINE}
}
 ColorLookup {
  inputs 0
  use_precomputed false
  lut {red {curve C 0 s0 x0.3128865659 1 s-0 v0.7904256582 x0.7806204557 -0.0007482314769 s0 u1.743535638 v1.742119074 x0.9418143034 0.06970721483 s-0.05000000075 x1 0 s0}
    green {curve C x0.1143286526 0 s0.01999999955 v1.837088585 x0.530087471 1 s-0.05000000075 u1.36422956 v1.120811939 x0.9743717909 0 s-0 u2.045060158}
    blue {curve C x0.6321670413 0 s0 x0.8160832524 0.99800843 s0 x1 0 s0}}
  name CLP
  label "Natural Spectrum"
  xpos 137
  ypos -191
 }
 ColorLookup {
  inputs 0
  channels rgb
  lut {master {}
    red {"CLP.lut.red * (1-parent.monochrome) + parent.monochrome" C 0 1}
    green {"CLP.lut.green * (1-parent.monochrome) + parent.monochrome" C 0 1}
    blue {"CLP.lut.blue * (1-parent.monochrome) + parent.monochrome" C 0 1}
    alpha {"CLP.lut.alpha * (1-parent.monochrome) + parent.monochrome" C 0 1}}
  name CL
  label monochrome
  xpos 27
  ypos -149
 }
 Merge2 {
  inputs 0
  operation copy
  Achannels {{{parent.MergeCopyChroma.Achannels}}}
  Bchannels none
  output {{{parent.MergeCopyChroma.Achannels}}}
  name MergeChosen
  xpos -209
  ypos -368
  hide_input true
 }
 Input {
  inputs 0
  name Inputmask
  label "\[value number]"
  xpos -498
  ypos 483
  number 2
 }
 Dot {
  name Dot25
  note_font_size 41
  xpos -464
  ypos 651
 }
set Nc322d600 [stack 0]
 Dot {
  name Dot21
  xpos -464
  ypos 689
 }
set Nc322cf00 [stack 0]
 Dot {
  name Dot24
  note_font_size 41
  xpos -464
  ypos 799
 }
 Input {
  inputs 0
  name Inputimg
  xpos -388
  ypos -554
 }
 NoTimeBlur {
  rounding none
  name NoTB
  xpos -388
  ypos -528
 }
 AdjBBox {
  numpixels {{parent.overscan} {parent.overscan}}
  name AdjBBox
  xpos -388
  ypos -502
 }
set Nc3203200 [stack 0]
 Dot {
  name Dot1
  xpos -47
  ypos -498
 }
set Nc3202b00 [stack 0]
 Expression {
  expr0 (x+0.5)/width
  expr1 (y+0.5)/height
  expr2 0
  name ExpressionUVDefault
  xpos 118
  ypos -502
 }
 Input {
  inputs 0
  name Inputuv
  xpos 279
  ypos -558
  number 1
 }
 Switch {
  inputs 2
  which 1
  name SwitchUV
  xpos 279
  ypos -502
  disable {{"\[exists parent.input1]"}}
 }
 NoTimeBlur {
  rounding none
  name NoTB1
  xpos 279
  ypos -476
 }
 Dot {
  name Dot3
  note_font_size 41
  xpos 313
  ypos -275
 }
set Nc3200800 [stack 0]
 Dot {
  name Dot11
  note_font_size 41
  xpos 447
  ypos -275
 }
 Remove {
  name Remove1
  xpos 413
  ypos -257
 }
 Expression {
  expr0 (x+0.5)/width
  expr1 (y+0.5)/height
  expr2 0
  expr3 0
  name ExpressionUV
  xpos 413
  ypos -219
 }
 Dot {
  name Dot13
  note_font_size 41
  xpos 447
  ypos -183
 }
set Nc31e2b00 [stack 0]
 Dot {
  name Dot15
  note_font_size 41
  xpos 690
  ypos -183
 }
set Nc31e2400 [stack 0]
 Multiply {
  channels {rgba.red rgba.green -rgba.blue none}
  value {{1-parent.ab} {1-parent.ab} 1 1}
  name Multiply6
  xpos 656
  ypos -97
 }
 Dot {
  name Dot16
  xpos 690
  ypos -38
 }
push $Nc3200800
 Dot {
  name Dot27
  note_font_size 41
  xpos 214
  ypos -275
 }
 Dot {
  name Dot5
  note_font_size 41
  xpos 214
  ypos -233
 }
push $Nc3200800
 Merge2 {
  inputs 2
  operation copy
  name Merge3
  xpos 279
  ypos -237
 }
 Dot {
  name Dot8
  note_font_size 41
  xpos 313
  ypos -164
 }
set Nc31c3200 [stack 0]
 Dot {
  name Dot14
  note_font_size 41
  xpos 600
  ypos -164
 }
 Multiply {
  channels {rgba.red rgba.green -rgba.blue none}
  value {{parent.ab} {parent.ab} 0 0}
  name Multiply5
  xpos 566
  ypos -98
 }
 Merge2 {
  inputs 2
  operation plus
  bbox B
  output rgb
  name Merge4
  xpos 566
  ypos -42
 }
 Transform {
  center {1024 576}
  motionblur {{parent.smooth}}
  shutter {{1/parent.samples}}
  shutteroffset centred
  name Transform17
  label control
  xpos 566
 }
set Nc31c0f00 [stack 0]
push $Nc31e2400
 Dot {
  name Dot18
  note_font_size 41
  xpos 831
  ypos -183
 }
 CopyBBox {
  inputs 2
  name CopyBBox1
  xpos 797
  ypos 6
 }
 Dot {
  name Dot19
  xpos 831
  ypos 77
 }
push $Nc31c0f00
 Merge2 {
  inputs 2
  operation difference
  bbox B
  name Merge5
  xpos 566
  ypos 73
 }
 Expression {
  expr3 sqrt(pow2(r)+pow2(g))
  name ExpressionDiff
  xpos 566
  ypos 117
 }
 Dot {
  name Dot9
  xpos 600
  ypos 440
 }
set Nc338a400 [stack 0]
push $Nc338a400
push $Nc3202b00
 Dot {
  name Dot2
  note_font_size 41
  xpos -47
  ypos -453
 }
set Nc3389d00 [stack 0]
 Dot {
  name Dot17
  note_font_size 41
  xpos 31
  ypos -453
 }
 Dot {
  name Dot26
  note_font_size 41
  xpos 31
  ypos -364
 }
push $Nc3389d00
add_layer {apChroma apChroma.red apChroma.green apChroma.blue apChroma.alpha}
 Shuffle {
  alpha white
  black alpha
  white alpha
  red2 alpha
  out2 {apChroma.red apChroma.green apChroma.blue -apChroma.alpha}
  name ShuffleAlpha1
  xpos -81
  ypos -418
 }
 Merge2 {
  inputs 2
  operation copy
  Achannels {{{parent.MergeCopyChroma.Achannels}}}
  Bchannels none
  name MergeGetChroma
  xpos -81
  ypos -368
  disable {{"\[\nif \{ \[lsearch -exact \[channels \[input this 1]] \[lindex \[channels MergeChosen] 0]] >= 0\} \{\n    return 0\n\} else \{\n    return 1\n\}\n]"}}
 }
 Remove {
  channels apChroma
  name Remove_apChroma
  xpos -81
  ypos -278
  disable {{parent.calculate_multi_alpha}}
 }
add_layer {apChromaWeight apChromaWeight.red apChromaWeight.green apChromaWeight.blue apChromaWeight.alpha}
 AddChannels {
  channels apChromaWeight
  color 1
  name AddChannels1
  xpos -81
  ypos -240
 }
 Multiply {
  value {{!parent.invert_spectrum?CL.lut.red(TB.frf):CL.lut.red(1-TB.frf)} {!parent.invert_spectrum?CL.lut.green(TB.frf):CL.lut.green(1-TB.frf)} {!parent.invert_spectrum?CL.lut.blue(TB.frf):CL.lut.blue(1-TB.frf)} {!parent.invert_spectrum?CL.lut.red(TB.frf):CL.lut.red(1-TB.frf)}}
  name Multiply1
  xpos -81
  ypos -189
  addUserKnob {20 User}
  addUserKnob {19 fullcolor}
  fullcolor {{!parent.invert_spectrum?CLP.lut.red(TB.frf):CLP.lut.red(1-TB.frf)} {!parent.invert_spectrum?CLP.lut.green(TB.frf):CLP.lut.green(1-TB.frf)} {!parent.invert_spectrum?CLP.lut.blue(TB.frf):CLP.lut.blue(1-TB.frf)} {!parent.invert_spectrum?CLP.lut.red(TB.frf):CLP.lut.red(1-TB.frf)}}
  addUserKnob {6 fullcolor_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 }
 Dot {
  name Dot6
  note_font_size 41
  xpos -47
  ypos -141
 }
set Nc3360f00 [stack 0]
 Dot {
  name Dot7
  note_font_size 41
  xpos -139
  ypos -141
 }
 Dot {
  name Dot10
  note_font_size 41
  xpos -139
  ypos 90
 }
push $Nc31c3200
 Multiply {
  channels {rgba.red rgba.green -rgba.blue none}
  value {{"(TB.frf-.5)*parent.ab + 0.5*(1-parent.compensate)"} {"(TB.frf-.5)*parent.ab + 0.5*(1-parent.compensate)"} 0 0}
  name Multiply3
  xpos 279
  ypos -146
 }
 Dot {
  name Dot12
  note_font_size 41
  xpos 313
  ypos -108
 }
push $Nc31e2b00
 Multiply {
  channels {rgba.red rgba.green -rgba.blue none}
  value {{"(1- ((TB.frf-.5)*parent.ab + 0.5*(1-parent.compensate)) )" i} {"(1- ((TB.frf-.5)*parent.ab + 0.5*(1-parent.compensate)) )" i} 1 1}
  name Multiply4
  xpos 413
  ypos -145
 }
 Merge2 {
  inputs 2
  operation plus
  Achannels {rgba.red rgba.green -rgba.blue -rgba.alpha}
  Bchannels {rgba.red rgba.green -rgba.blue -rgba.alpha}
  output {rgba.red rgba.green -rgba.blue -rgba.alpha}
  name Merge1
  xpos 413
  ypos -112
 }
 Dot {
  name Dot4
  xpos 447
  ypos 43
 }
push $Nc3360f00
 Remove {
  channels apChromaWeight
  name Remove3
  xpos -81
  ypos -104
 }
 Transform {
  translate {{"parent.Transform17.translate*((TB.frf-0.5)*parent.ab+ 0.5*(1-parent.compensate))"} {"parent.Transform17.translate*((TB.frf-0.5)*parent.ab+ 0.5*(1-parent.compensate))"}}
  rotate {{"parent.Transform17.rotate*((TB.frf-0.5)*parent.ab+ 0.5*(1-parent.compensate))"}}
  scale {{"parent.Transform17.scale*((TB.frf-0.5)*parent.ab+ 0.5*(1-parent.compensate)) + 1 - ((TB.frf-0.5)*parent.ab+ 0.5*(1-parent.compensate)) "} {"parent.Transform17.scale*((TB.frf-0.5)*parent.ab+ 0.5*(1-parent.compensate)) + 1 - ((TB.frf-0.5)*parent.ab+ 0.5*(1-parent.compensate)) "}}
  center {{parent.Transform17.center} {parent.Transform17.center}}
  invert_matrix {{parent.Transform17.invert_matrix}}
  black_outside {{parent.black_outside}}
  motionblur {{parent.smooth}}
  shutter {{1/parent.samples}}
  name TransformI
  xpos -81
  ypos -66
 }
 Blur {
  channels rgba
  name Blur1
  xpos -81
  ypos -40
  addUserKnob {20 User}
  addUserKnob {26 info l "" +STARTLINE T "needed to break concatenation and make sure mblur works with the stmaps"}
 }
 STMap {
  inputs 2
  uv rgb
  blur_scale 0
  name STMap1
  xpos -81
  ypos 33
  disable {{"!\[exists parent.input1]"}}
 }
 Copy {
  inputs 2
  channels apChromaWeight
  name Copy2
  xpos -81
  ypos 74
 }
 TimeBlur {
  divisions {{parent.samples}}
  shutter 1
  shutteroffset start
  shuttercustomoffset 0
  name TB
  xpos -81
  ypos 124
  addUserKnob {20 User}
  addUserKnob {7 frf}
  frf {{(frame%1)*(parent.samples+1)/parent.samples}}
 }
set Nc3322400 [stack 0]
push $Nc3322400
 Shuffle {
  in apChromaWeight
  name Shuffle2
  label "\[value in]"
  xpos 89
  ypos 118
 }
set Nc3321d00 [stack 0]
 Merge2 {
  inputs 2
  operation divide
  bbox A
  metainput A
  rangeinput A
  Achannels apChroma
  output apChroma
  name Merge6
  xpos 89
  ypos 261
 }
push $Nc3322400
push $Nc3321d00
 Merge2 {
  inputs 2
  operation divide
  bbox A
  metainput A
  rangeinput A
  name Merge2
  xpos -81
  ypos 196
 }
 Copy {
  inputs 2
  channels apChroma
  name Copy3
  xpos -81
  ypos 255
 }
 Dot {
  name Dot29
  note_font_size 41
  xpos -47
  ypos 323
 }
set Nc3320100 [stack 0]
 Shuffle {
  in apChroma
  name Shuffle1
  label "\[value in] \[ expr \{ \[value out2] == \"none\" ? \" \" : \[concat → \[value out2]] \}]"
  xpos 43
  ypos 313
 }
 Saturation {
  saturation 0
  name Saturation1
  xpos 43
  ypos 359
 }
push $Nc3320100
 Copy {
  inputs 2
  from0 rgba.red
  to0 rgba.alpha
  name Copy5
  xpos -81
  ypos 353
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 apChroma.alpha
  from1 -rgba.alpha
  to1 -rgba.alpha
  bbox B
  name Copy1
  xpos -81
  ypos 424
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name CopyAlpha1
  xpos -81
  ypos 493
  disable {{!parent.output_dist_matte}}
 }
 Dot {
  name Dot22
  note_font_size 41
  xpos -47
  ypos 651
 }
set Nc32ed600 [stack 0]
 Dot {
  name Dot20
  xpos -47
  ypos 689
 }
set Nc32ecf00 [stack 0]
 Dot {
  name Dot28
  note_font_size 41
  xpos -47
  ypos 742
 }
set Nc32ec800 [stack 0]
 Dot {
  name Dot23
  note_font_size 41
  xpos -47
  ypos 799
 }
push $Nc32ec800
push $Nc322cf00
push $Nc32ecf00
push $Nc322d600
push $Nc32ed600
push $Nc3203200
 Dot {
  name Dot30
  note_font_size 41
  xpos -354
  ypos 428
 }
set Nc32c7900 [stack 0]
 AddChannels {
  channels rgba
  name AddChannels2
  xpos -279
  ypos 424
 }
push $Nc32c7900
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 apChroma.red
  from1 rgba.alpha
  to1 apChroma.green
  from2 rgba.alpha
  to2 apChroma.blue
  from3 rgba.alpha
  to3 apChroma.alpha
  name Copy6
  xpos -388
  ypos 467
  disable {{"!\[exists input2]"}}
 }
 Merge2 {
  inputs 2+1
  operation copy
  Achannels rgb
  Bchannels rgb
  output rgb
  also_merge apChroma
  name MergeRGB
  xpos -388
  ypos 647
 }
 Copy {
  inputs 2+1
  channels apChroma
  maskChannelMask {{{parent.MergeRGB.maskChannelMask}}}
  maskChannelInput {{{parent.MergeRGB.maskChannelInput}}}
  inject {{parent.MergeRGB.inject}}
  invert_mask {{parent.MergeRGB.invert_mask}}
  fringe {{parent.MergeRGB.fringe}}
  mix {{parent.MergeRGB.mix}}
  name Copy_apChroma
  xpos -388
  ypos 673
  disable {{!parent.calculate_multi_alpha}}
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy4
  xpos -388
  ypos 732
  disable {{!parent.process_alpha}}
 }
 Copy {
  inputs 2+1
  from0 rgba.alpha
  to0 rgba.alpha
  name CopyAlpha
  xpos -388
  ypos 789
  disable {{!parent.output_dist_matte}}
 }
 Output {
  name Output
  xpos -388
  ypos 910
 }
end_group
