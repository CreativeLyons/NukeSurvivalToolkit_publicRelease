Group {
 name C44Kernel
 help "C44Kernel v1.0 by Adrian Pueyo\n\nMultiply the rgb or rgba colors by an arbitrary 4x4 Matrix. Useful for transforming a Position pass.\n\nYou can plug in an Axis or Camera node into the axis input, to also apply its transformations.\n\nadrianpueyo.com, 2017"
 tile_color 0xe88543ff
 lock_connections true
 addUserKnob {20 C44Kernel}
 addUserKnob {41 channels T MergeIn.Achannels}
 addUserKnob {41 matrix T Axis1.matrix}
 addUserKnob {6 invert -STARTLINE}
 addUserKnob {6 alpha_masking l "alpha masking" t "Apply only where rgba.alpha>0" +STARTLINE}
 addUserKnob {20 advanced l Advanced n 1}
 advanced 0
 addUserKnob {6 transpose +STARTLINE}
 addUserKnob {6 w_divide +STARTLINE}
 addUserKnob {6 rgba_mode l "apply on Vector4" t "Usually you'll want to apply the matrix on the RGB only, which uses a white alpha. Enable this to use the full Vector4 (RGBA)." +STARTLINE}
 addUserKnob {20 endGroup n -1}
 addUserKnob {26 "" +STARTLINE}
 addUserKnob {41 mix T MergeOut.mix}
 addUserKnob {26 version_author l "" t "C44Kernel v1.0\n23 June, 2018" +STARTLINE T "<span style=\"color:#666\"><br/><b>C44Kernel v1.0</b> - <a href=\"http://www.adrianpueyo.com\" style=\"color:#666;text-decoration: none;\">adrianpueyo.com</a>, 2018</span>"}
 addUserKnob {20 GPU_Settings l "GPU Settings"}
 addUserKnob {41 maxGPUMemory l "Percentage of GPU memory to use" T C44MatrixKernel.maxGPUMemory}
 addUserKnob {41 maxTileLines l "Percentage of image height per tile" T C44MatrixKernel.maxTileLines}
}
 Input {
  inputs 0
  name Inputaxis
  xpos 133
  ypos -181
  number 1
 }
 Axis2 {
  useMatrix true
  name Axis1
  xpos 143
  ypos -133
 }
 Input {
  inputs 0
  name Inputimg
  xpos -110
  ypos -192
 }
set N961d0400 [stack 0]
 Dot {
  name Dot1
  xpos -76
  ypos -161
 }
set N96501eb0 [stack 0]
 Expression {
  expr3 a>0
  name ExpressionA
  xpos -220
  ypos -164
 }
 Switch {
  which {{!parent.alpha_masking}}
  name SwitchMasking
  xpos -220
  ypos -112
 }
push $N96501eb0
push $N961d0400
 Remove {
  name RemoveAll
  xpos 34
  ypos -196
 }
 Merge2 {
  inputs 2
  operation copy
  Bchannels none
  name MergeIn
  xpos 34
  ypos -164
 }
 Shuffle {
  alpha white
  name ShuffleWhiteA
  xpos 34
  ypos -140
  disable {{parent.rgba_mode}}
 }
 BlinkScript {
  recompileCount 147
  ProgramGroup 1
  KernelDescription "2 \"C44MatrixKernel\" iterate pixelWise 10f1841ce0aee43165aca4445fb9ce0126826eedd71da6339f12b8f8de8e52eb 2 \"src\" Read Point \"dst\" Write Point 4 \"m\" Float 16 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA== \"invert\" Int 1 AAAAAA== \"transpose\" Int 1 AAAAAA== \"w_divide\" Int 1 AAAAAA== 4 \"m\" 16 1 \"invert\" 1 1 \"transpose\" 1 1 \"w_divide\" 1 1 0"
  kernelSource "kernel C44MatrixKernel : ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessPoint, eEdgeClamped> src;\n  Image<eWrite> dst;\n\n  param:\n    float4x4 m;\n    int invert;\n    int transpose;\n    int w_divide;\n\n  void process(int2 pos) \{\n    SampleType(src) p = src();\n    float4 result = 1.0f;\n    float4x4 mi = m;\n    mi = invert?mi.invert():mi;\n    mi = transpose?mi.transpose():mi;\n    for(int c = 0; c<dst.kComps; c++)\{\n      result\[c] = mi\[c]\[0]*p.x + mi\[c]\[1]*p.y + mi\[c]\[2]*p.z + mi\[c]\[3]*p.w;\n    \}\n    dst() = w_divide?result/result.w:result;\n  \}\n\};\n"
  rebuild ""
  C44MatrixKernel_m {
      {{Axis1.world_matrix} {Axis1.world_matrix} {Axis1.world_matrix} {Axis1.world_matrix}}
      {{Axis1.world_matrix} {Axis1.world_matrix} {Axis1.world_matrix} {Axis1.world_matrix}}
      {{Axis1.world_matrix} {Axis1.world_matrix} {Axis1.world_matrix} {Axis1.world_matrix}}
      {{Axis1.world_matrix} {Axis1.world_matrix} {Axis1.world_matrix} {Axis1.world_matrix}}
    }
  C44MatrixKernel_invert {{parent.invert}}
  C44MatrixKernel_transpose {{parent.transpose}}
  C44MatrixKernel_w_divide {{parent.w_divide}}
  rebuild_finalise ""
  name C44MatrixKernel
  xpos 34
  ypos -116
 }
push $N96501eb0
 Merge2 {
  inputs 2+1
  operation copy
  Bchannels {{{parent.MergeIn.Achannels}}}
  output {{{parent.MergeIn.Achannels}}}
  name MergeOut
  xpos -110
  ypos -112
 }
 Output {
  name Output1
  xpos -110
  ypos -88
 }
end_group
