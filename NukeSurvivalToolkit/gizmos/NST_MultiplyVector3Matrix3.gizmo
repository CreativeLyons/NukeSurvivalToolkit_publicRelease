Group {
 name MultiplyVector3Matrix3_
 help "Multiply (transform) a Vector3 by a Matrix3. This is the equivalent of applying Rotation/Scale/Skew from a Matrix to the vector.\nA Matrix4 can be used, but the last row/column will be ignored."
 addUserKnob {20 main_tab l "Mutiply Vector3 Matrix3"}
 addUserKnob {26 ""}
 addUserKnob {26 copyright l "" +STARTLINE T "v1.0 -  Mathieu Goulet-Aubin & Erwan Leroy - <a href=\"https://github.com/mapoga/nuke-vector-matrix\" style=\"color:#aaa\">Github</a>"}
}
 Input {
  inputs 0
  name InputMatrix3
  xpos 402
  ypos 7
  number 1
 }
 Dot {
  name Dot3
  tile_color 0xcccccc00
  xpos 436
  ypos 62
 }
add_layer {matrix0 matrix0.0 matrix0.1 matrix0.2 matrix0.3}
 Shuffle {
  in matrix0
  name Shuffle1
  label "in \[value in]-->out \[value out]"
  xpos 402
  ypos 109
 }
set Ne478bfd0 [stack 0]
add_layer {matrix1 matrix1.0 matrix1.1 matrix1.2 matrix1.3}
 Shuffle {
  in matrix1
  name Shuffle2
  label "in \[value in]-->out \[value out]"
  xpos 402
  ypos 147
 }
set Nd8882950 [stack 0]
add_layer {matrix2 matrix2.0 matrix2.1 matrix2.2 matrix2.3}
 Shuffle {
  in matrix2
  name Shuffle3
  label "in \[value in]-->out \[value out]"
  xpos 402
  ypos 185
 }
set N2858d430 [stack 0]
add_layer {matrix3 matrix3.0 matrix3.1 matrix3.2 matrix3.3}
 Shuffle {
  in matrix3
  name Shuffle4
  label "in \[value in]-->out \[value out]"
  xpos 402
  ypos 223
 }
push $N2858d430
 Dot {
  name Dot7
  tile_color 0x9e3c6300
  xpos 343
  ypos 195
 }
push $Nd8882950
 Dot {
  name Dot6
  tile_color 0x9e3c6300
  xpos 343
  ypos 157
 }
push $Ne478bfd0
 Dot {
  name Dot5
  tile_color 0x9e3c6300
  xpos 343
  ypos 119
 }
 Input {
  inputs 0
  name InputVector3
  xpos 219
  ypos 8
 }
 Dot {
  name Dot4
  tile_color 0xcccccc00
  xpos 253
  ypos 115
 }
 BlinkScript {
  inputs 4
  recompileCount 12
  ProgramGroup 1
  KernelDescription "2 \"TransformVector3byMatrix3\" iterate pixelWise 156e29276da8287b847626148a2a784d9969b7d1a3ad81e28187d00a7aaafaca 5 \"src\" Read Point \"matrix0\" Read Point \"matrix1\" Read Point \"matrix2\" Read Point \"dst\" Write Point 0 0 0"
  kernelSource "kernel TransformVector3byMatrix3 : ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessPoint, eEdgeClamped> src; // the input image\n  Image<eRead, eAccessPoint, eEdgeClamped> matrix0; // the input image\n  Image<eRead, eAccessPoint, eEdgeClamped> matrix1; // the input image\n  Image<eRead, eAccessPoint, eEdgeClamped> matrix2; // the input image\n  Image<eWrite> dst; // the output image\n\n  void process() \{\n    // Read the input image\n    SampleType(src) input = src();\n    SampleType(matrix0) m0 = matrix0();\n    SampleType(matrix1) m1 = matrix1();\n    SampleType(matrix2) m2 = matrix2();\n\n    // Create the matrix object (matrix3 in this case)\n    float3x3  matrix;\n    matrix\[0]\[0] = m0.x;\n    matrix\[0]\[1] = m0.y;\n    matrix\[0]\[2] = m0.z;\n    matrix\[1]\[0] = m1.x;\n    matrix\[1]\[1] = m1.y;\n    matrix\[1]\[2] = m1.z;\n    matrix\[2]\[0] = m2.x;\n    matrix\[2]\[1] = m2.y;\n    matrix\[2]\[2] = m2.z;\n\n    // Multiply the Matrix and the Vector\n    float3 vector(input.x, input.y, input.z);\n    vector = matrix*vector;\n\n    // Write the result to the output image\n    dst() = float4(vector.x, vector.y, vector.z, input.w);\n  \}\n\};\n"
  rebuild ""
  rebuild_finalise ""
  name BlinkScript1
  xpos 219
  ypos 223
 }
 Output {
  name Output1
  xpos 219
  ypos 323
 }
end_group
