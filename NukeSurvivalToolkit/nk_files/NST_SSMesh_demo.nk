Root {
 inputs 0
 mapsize {0.03420523139 0.03513513514}
 frame 77
 format "1280 720 0 0 1280 720 1 HD_720"
}
BackdropNode {
 inputs 0
 name BackdropNode11
 tile_color 0x2a2a4bff
 label "work with stabilized UV"
 note_font_size 42
 xpos -1279
 ypos 1707
 bdwidth 2923
 bdheight 1592
 z_order 9
}
BackdropNode {
 inputs 0
 name BackdropNode15
 tile_color 0x2a2a4bff
 label "use focus region"
 note_font_size 42
 xpos -1272
 ypos 3537
 bdwidth 2905
 bdheight 1080
 z_order 9
}
BackdropNode {
 inputs 0
 name BackdropNode5
 tile_color 0x2a2a4bff
 label "Data type supported"
 note_font_size 42
 xpos -1273
 ypos -845
 bdwidth 2905
 bdheight 1080
 z_order 9
}
BackdropNode {
 inputs 0
 name BackdropNode8
 tile_color 0x2a2a4bff
 label "distance clip"
 note_font_size 42
 xpos -1272
 ypos 388
 bdwidth 2905
 bdheight 1080
 z_order 9
}
BackdropNode {
 inputs 0
 name BackdropNode1
 tile_color 0x7171c600
 label "render with position world space"
 note_font_size 42
 xpos -1112
 ypos -552
 bdwidth 606
 bdheight 615
 z_order 10
}
BackdropNode {
 inputs 0
 name BackdropNode10
 tile_color 0x7171c600
 label "work with stabilized UV\n(texturing / painting / mask)"
 note_font_size 42
 xpos 151
 ypos 1847
 bdwidth 970
 bdheight 1257
 z_order 10
}
BackdropNode {
 inputs 0
 name BackdropNode14
 tile_color 0x7171c600
 note_font_size 42
 xpos -1114
 ypos 3717
 bdwidth 630
 bdheight 753
 z_order 10
}
BackdropNode {
 inputs 0
 name BackdropNode2
 tile_color 0x7171c600
 label "render with position camera space"
 note_font_size 42
 xpos -445
 ypos -549
 bdwidth 599
 bdheight 609
 z_order 10
}
BackdropNode {
 inputs 0
 name BackdropNode3
 tile_color 0x7171c600
 label "render with zdepth\n(normalized far=0, scanlineRender)"
 note_font_size 42
 xpos 224
 ypos -548
 bdwidth 599
 bdheight 606
 z_order 10
}
BackdropNode {
 inputs 0
 name BackdropNode4
 tile_color 0x7171c600
 label "render with deep / depth (direct)"
 note_font_size 42
 xpos 907
 ypos -552
 bdwidth 599
 bdheight 606
 z_order 10
}
BackdropNode {
 inputs 0
 name BackdropNode6
 tile_color 0x7171c600
 label "distance clip\n(with color clipped)"
 note_font_size 42
 xpos -1120
 ypos 657
 bdwidth 606
 bdheight 615
 z_order 10
}
BackdropNode {
 inputs 0
 name BackdropNode7
 tile_color 0x7171c600
 label "distance clip\n(without color clipped)"
 note_font_size 42
 xpos -415
 ypos 658
 bdwidth 606
 bdheight 615
 z_order 10
}
BackdropNode {
 inputs 0
 name BackdropNode9
 tile_color 0x7171c600
 label "work with stabilized UV\n(texturing / painting / mask)"
 note_font_size 42
 xpos -1118
 ypos 1839
 bdwidth 987
 bdheight 1243
 z_order 10
}
BackdropNode {
 inputs 0
 name BackdropNode12
 tile_color 0x373760ff
 label "Do Texture work here"
 note_font_size 42
 xpos -888
 ypos 2362
 bdwidth 408
 bdheight 311
 z_order 11
}
BackdropNode {
 inputs 0
 name BackdropNode13
 tile_color 0x373760ff
 label "Do Texture work here"
 note_font_size 42
 xpos 421
 ypos 2328
 bdwidth 397
 bdheight 345
 z_order 11
}
Group {
 inputs 0
 name render_with_pworld
 xpos -816
 ypos -369
 postage_stamp true
}
 Camera2 {
  inputs 0
  translate {{curve x1 -23.73355293 x50 1.828465939 x100 10.79810143} {curve x1 6.752248287 x50 13.82691669 x100 25.23773003} {curve x1 -3.158116341 x50 5.475767136 x100 -12.79232216}}
  rotate {{curve x1 30.63627052 x50 14.22963619 x100 -23.22279344} {curve x1 -44.94124796 x50 19.70681696 x100 76.6501109} {curve x1 0 x50 27.42004885 x100 13.36756642}}
  focal 24
  name Camera1
  xpos 241
  ypos -567
 }
 Dot {
  name Dot2
  xpos 351
  ypos -543
 }
set N81983f90 [stack 0]
 Dot {
  name Dot3
  xpos 351
  ypos -428
 }
push $N81983f90
 CheckerBoard2 {
  inputs 0
  name CheckerBoard1
  xpos 406
  ypos -928
 }
 Dot {
  name Dot1
  xpos 440
  ypos -814
 }
set N8198ce40 [stack 0]
 Dot {
  name Dot5
  xpos 553
  ypos -814
 }
set N8198f260 [stack 0]
 Dot {
  name Dot4
  xpos 693
  ypos -814
 }
 Multiply {
  channels rgb
  value {0 1 1 1}
  name Multiply3
  xpos 659
  ypos -756
 }
 Cube {
  rows 1
  columns 1
  separate_faces false
  translate {-7.849998951 18.14999962 -19.00000191}
  rotate {0 0 45.93192592}
  uniform_scale 7
  name Cube1
  xpos 659
  ypos -676
 }
push $N8198f260
 Multiply {
  channels rgb
  value {1 0 1 1}
  name Multiply2
  xpos 519
  ypos -750
 }
 Sphere {
  translate {-15.00000191 16.45000076 -17.79999924}
  scaling {3.183291435 1 2.618715286}
  uniform_scale 2
  name Sphere1
  xpos 519
  ypos -670
 }
push $N8198ce40
 Multiply {
  channels rgb
  value {1 1 0 1}
  name Multiply1
  xpos 406
  ypos -754
 }
 Cylinder {
  rows 1
  close_top true
  close_bottom true
  translate {-3.149999619 19.64999962 -13.89999866}
  rotate {52.26493538 0 32.53306187}
  scaling {1 4.216488838 1}
  uniform_scale 2
  name Cylinder1
  xpos 406
  ypos -673
 }
 Scene {
  inputs 4
  name Scene1
  xpos 416
  ypos -567
 }
 Reformat {
  inputs 0
  type "to box"
  box_width 1280
  box_height 720
  box_fixed true
  name Reformat1
  xpos 530
  ypos -431
 }
add_layer {pworld pworld.red pworld.green pworld.blue pworld.alpha}
 ScanlineRender {
  inputs 3
  conservative_shader_sampling false
  motion_vectors_type off
  MB_channel none
  output_shader_vectors true
  P_channel pworld
  name ScanlineRender1
  xpos 406
  ypos -431
 }
 Output {
  name Output1
  xpos 406
  ypos -331
 }
end_group
Group {
 name SSMesh8
 tile_color 0x5c9e83ff
 label "<font color=cyan>Geo Output</font>"
 xpos -816
 ypos -202
 addUserKnob {20 tab_general l General}
 addUserKnob {22 set_link l "link to selected camera" t "Click to link selected camera by expression. This tool will get the focal, haperture and world matrix from selected camera to generate" T "def getLevel() :\n\t### level define ###\n\tif len(nuke.thisNode().fullName().split('.')) == 1 :\n\t\t  ggLevel = nuke.root()\n\telse :\n\t\t  nodePath = nuke.thisNode().fullName().split('.')\n\t\t  nodePath.pop()\n\t\t  ggLevel = nuke.toNode('.'.join(nodePath))\n\treturn ggLevel\n\nroot = getLevel()\nthisGRP = nuke.thisGroup()\n\nmainKnobs = \['world_matrix','cam_focal','cam_haperture','cam_win_translate','cam_win_scale','cam_winroll']\ndefaultKnobs = \{\n\t\t\t'world matrix' : 'world_matrix',\n\t\t\t'focal length' : 'focal',\n\t\t\t'horiz aperture' : 'haperture',\n\t\t\t'window translate' : 'win_translate',\n\t\t\t'window scale' : 'win_scale',\n\t\t\t'window roll' : 'winroll'\n\t\t\t\}\nselNodeKnobs = \[]\nmissingKnob = \[]\n\ntry :\n\twith root :\n\t\tselNode = nuke.selectedNode()\n\n\tfor knob in selNode.knobs() :\n\t\tselNodeKnobs.append( knob )\n\n\tselNodeKnobs.sort()\n\n\tfor key,value in defaultKnobs.items() :\n\t\tif value not in selNodeKnobs :\n\t\t\tmissingKnob.append( key )\n\n\tif not len(missingKnob) :\n\t\twith root :\n\t\t\tCAMnode = selNode.name()\n\t\t\tthisGRP\[mainKnobs\[0]].setExpression('\{0\}.world_matrix'.format(CAMnode))\n\t\t\tthisGRP\[mainKnobs\[1]].setExpression('\{0\}.focal'.format(CAMnode))\n\t\t\tthisGRP\[mainKnobs\[2]].setExpression('\{0\}.haperture'.format(CAMnode))\n\t\t\tthisGRP\[mainKnobs\[3]].setExpression('\{0\}.win_translate'.format(CAMnode))\n\t\t\tthisGRP\[mainKnobs\[4]].setExpression('\{0\}.win_scale'.format(CAMnode))\n\t\t\tthisGRP\[mainKnobs\[5]].setExpression('\{0\}.winroll'.format(CAMnode))\n\telse :\n\t\tp = nuke.Panel('Select knobs :')\n\t\tp.addBooleanCheckBox( '<b>Unable to find the default knobs. Please use the pulldown menu below to define the knob manually.</b>' , False)\n\t\tfor rk in missingKnob :\n\t\t\tp.addEnumerationPulldown( rk, ' '.join( selNodeKnobs ) )\n\n\t\tif p.show() :\n\t\t\ttry :\n\t\t\t\tfor key,value in defaultKnobs.items() :\n\t\t\t\t\tif p.value( key ) != None :\n\t\t\t\t\t\tdefaultKnobs\[key] = p.value( key )\n\t\t\texcept :\n\t\t\t\tpass\n\n\t\t\twith root :\n\t\t\t\tCAMnode = selNode.name()\n\t\t\t\tthisGRP\[mainKnobs\[0]].setExpression('\{0\}.\{1\}'.format(CAMnode, defaultKnobs\['world matrix']))\n\t\t\t\tthisGRP\[mainKnobs\[1]].setExpression('\{0\}.\{1\}'.format(CAMnode, defaultKnobs\['focal length']))\n\t\t\t\tthisGRP\[mainKnobs\[2]].setExpression('\{0\}.\{1\}'.format(CAMnode, defaultKnobs\['horiz aperture']))\n\t\t\t\tthisGRP\[mainKnobs\[3]].setExpression('\{0\}.\{1\}'.format(CAMnode, defaultKnobs\['window translate']))\n\t\t\t\tthisGRP\[mainKnobs\[4]].setExpression('\{0\}.\{1\}'.format(CAMnode, defaultKnobs\['window scale']))\n\t\t\t\tthisGRP\[mainKnobs\[5]].setExpression('\{0\}.\{1\}'.format(CAMnode, defaultKnobs\['window roll']))\nexcept :\n\tnuke.message('no node selected.')" +STARTLINE}
 addUserKnob {22 remove_link l "remove linked expression" t "Remove the linked camera expression but won't reset any data." -STARTLINE T "thisGRP = nuke.thisGroup()\nmainKnobs = \['world_matrix','cam_focal','cam_haperture','cam_win_translate','cam_win_scale','cam_winroll']\n\nfor knob in thisGRP.knobs() :\n\tif mainKnobs.count(knob) != 0 :\n\t\t thisGRP\[knob].clearAnimated()"}
 addUserKnob {20 cam_data_grp l "CAMERA DATA" n 1}
 cam_data_grp 0
 addUserKnob {7 cam_focal l "focal length" R 5 100}
 cam_focal {{Camera2.focal}}
 addUserKnob {7 cam_haperture l "horiz aperture" R 0.1 50}
 cam_haperture {{Camera2.haperture}}
 addUserKnob {30 cam_win_translate l "window translate"}
 cam_win_translate {{Camera2.win_translate} {Camera2.win_translate}}
 addUserKnob {30 cam_win_scale l "window scale"}
 cam_win_scale {{Camera2.win_scale} {Camera2.win_scale}}
 addUserKnob {7 cam_winroll l "window roll" R -45 45}
 cam_winroll {{Camera2.winroll}}
 addUserKnob {41 world_matrix l "world matrix" T cam_data.matrix}
 addUserKnob {20 endGroup_1 l endGroup n -1}
 addUserKnob {26 spacer_5 l "" +STARTLINE T <br>}
 addUserKnob {26 title_basic l "<b>BASIC SETTING</b>"}
 addUserKnob {4 display l "3D display" t "How to draw in 3D preview. The viewer can override this setting." M {off wireframe soild solid+wireframe textured textured+wireframe "" "" ""}}
 display textured
 addUserKnob {4 data_type l "data type" t "data type\nUsing one of these data to convert into 3D mesh.\n\nPosition\nSupported world space or camera space position data.\n\nDepth (normalized far=0)\nNormalized depth data, which is same as depth data output by ScanlineRender.\n\nDeep / Depth (direct)\nRaw camera depth data. If using deep, need to convert DeepToImage first, and selected deep channel on 'channels' knob." M {"position (world space)" "position (camera space)" "depth (normalized far=0)" "deep / depth (direct)" "" "" ""}}
 addUserKnob {41 channels t "Select which channel represented on selected data type." T shuffle_data.in}
 addUserKnob {6 unpm l unpremult t "3D data pass should be unpremult with alpha before process." -STARTLINE}
 unpm true
 addUserKnob {26 spacer_4 l "" +STARTLINE T <br>}
 addUserKnob {7 lod l "mesh LOD" t "Level of Details\n\nIf this value set to 1.0, subdivision of the mesh  1:1 to the data available in the resolution. Which mean 1 face of the mesh equal to 1 pixel.\n\nIf this value set to 1.0, it will slow down the render process.\n\nHighly recommend to use 0.1 - 0.5 if high resolution mesh details is not concern."}
 lod 0.1
 addUserKnob {41 filter_size l "filter size" T DisplaceGeo.filter_size}
 addUserKnob {41 filter T DisplaceGeo.filter}
 addUserKnob {26 spacer_2 l "" +STARTLINE T <br>}
 addUserKnob {26 title_drange l "" +STARTLINE T "distance range"}
 addUserKnob {7 drange_near l near t "clip the mesh in the min value in terms of depth." R 0 10000}
 addUserKnob {7 drange_far l far t "clip the mesh in the max value in terms of depth." R 0 10000}
 drange_far 30
 addUserKnob {6 clip_color l "distance clip on color" t "Apply the distance clip on colored texture." +STARTLINE}
 clip_color true
 addUserKnob {26 spacer_3 l "" +STARTLINE T <br>}
 addUserKnob {26 title_export l <b>EXPORT</b>}
 addUserKnob {41 file t "only support *.abc file extension (alembric) ." T WriteGeo.file}
 addUserKnob {22 export_geo l "Export Geo" T "def exportGeo() :\n\twgeo = nuke.toNode('WriteGeo')\n\twgeo\['Execute'].execute()\n\nthisGRP = nuke.thisGroup()\nfilepath = thisGRP\['file'].getValue()\n\nif not len(filepath) :\n\tnuke.message('file path is empty. Process denied.')\nelif not filepath.split('.')\[-1:]\[0].lower() == 'abc' :\n\tif nuke.ask('File extension invalue. Only support render <font color=orange>*.abc</font> . Do you want this tool to fix it and process ?') :\n\t\tthisGRP\['file'].setValue( thisGRP\['file'].getValue() + '.abc' )\n\t\texportGeo()\nelse :\n\texportGeo()" +STARTLINE}
 addUserKnob {22 import_geo l "Import Geo" -STARTLINE T "prefx = nuke.toNode('preferences')\['GridWidth'].value()\nthisGRP = nuke.thisGroup()\ngoStore = nuke.toNode('store')\ngoStore\['fn'].execute()\n\nroot = getLevel()\n\nwith root :\n\trgeo = nuke.nodes.ReadGeo2( file=thisGRP\['file'].getValue() )\n\trgeo.setXYpos( int( thisGRP\['xpos'].getValue() + prefx ) , int( thisGRP\['ypos'].getValue() ) )"}
 addUserKnob {20 tab_misc l Miscellaneous}
 addUserKnob {26 title_focus_region l "<b>FOCUS REGION</b>"}
 addUserKnob {41 use_focus_region l "use focus region" t "use focus region to generate SSMesh in specific area. Save resources and possible to work with high LOD mesh." T menu2.use_focus_region}
 addUserKnob {15 focus_region l "focus region" t "Set focus region in screen space. These values are 2D coordinate." +DISABLED}
 focus_region {0 0 1280 720}
 addUserKnob {26 spacer_1 l "" +STARTLINE T <br>}
 addUserKnob {3 fregion_ref_frame l "ref frame" t "set reference frame for tracking focus region. 'focus region' & 'define z' will apply on this reference frame and process the tracking." +DISABLED}
 fregion_ref_frame 1
 addUserKnob {22 fregion_set_frame l "set current frame" t "set current frame for focus region reference frame." -STARTLINE +DISABLED T "nuke.thisGroup()\['fregion_ref_frame'].setValue( nuke.frame() )"}
 addUserKnob {12 sample_point l "sample position" t "Toggle 'sample z' in 2D to enable this 2D sample coordinate." +DISABLED}
 addUserKnob {22 sample_z_toggle l "sample z in 2D" t "'sample z' is only works for sample value purpose. After sample is done, must turn off sample function." -STARTLINE +DISABLED T "thisGRP = nuke.thisGroup()\nszstatus = thisGRP\['sample_z_status'].value()\n\nstatus = \['<font color=red>\[ OFF ]</font>','<font color=cyan>\[ ON ]</font>']\n\nif szstatus == status\[0] :\n\tthisGRP\['sample_z_status'].setValue( status\[1] )\n\tthisGRP\['sample_point'].setEnabled(True)\n\tthisGRP\['updateUI'].setValue(\"goStore = nuke.toNode(\\'store\\')\\ngoStore\[\\'fn\\'].execute()\\nsample2d()\")\nelse :\n\tthisGRP\['sample_z_status'].setValue( status\[0] )\n\tthisGRP\['sample_point'].setEnabled(False)\n\tthisGRP\['updateUI'].setValue('')"}
 addUserKnob {26 sample_z_status l "" -STARTLINE +DISABLED T "<font color=red>\[ OFF ]</font>"}
 addUserKnob {7 fregion_define_z l "define z" t "Define the z value on reference frame. Can use 'sample z in 2D' to get this value." +DISABLED R 0 10000}
 addUserKnob {22 track_focus_region l "<b>\[ track focus region ]</b>" t "Use the set focus region on reference frame to track with camera in 3D space.\n\n* project setting need to be same as image resolution to get the correct result." +DISABLED T "rootST = int( nuke.root()\['first_frame'].getValue() )\nrootED = int( nuke.root()\['last_frame'].getValue() )\n\ngetFrame = nuke.getFramesAndViews( 'frame range', str( rootST ) + '-' + str( rootED ) )\n\ntry :\n\tframeST = int( getFrame\[0].replace( ' ' , '' ).split('-')\[0] )\n\tframeED = int( getFrame\[0].replace( ' ' , '' ).split('-')\[1] )\n\n\tthisGRP = nuke.thisGroup()\n\trefframe = int( thisGRP\['fregion_ref_frame'].getValue() )\n\tcam = nuke.toNode('cam_data')\n\tpt1 = nuke.toNode('left_pt')\['translate'].getValue()\n\tpt2 = nuke.toNode('right_pt')\['translate'].getValue()\n\n\tct_hack = nuke.nodes.CurveTool()\n\n\twith nuke.root() :\n\n\t\tif frameED - frameST != 0 :\n\t\t\tthisGRP\['focus_region'].clearAnimated()\n\t\t\ttempbuffer1 = thisGRP\['focus_region'].getValue()\n\t\t\tthisGRP\['focus_region'].setAnimated()\n\t\t\tthisGRP\['focus_region'].setValueAt( tempbuffer1\[0] , refframe , 0 )\n\t\t\tthisGRP\['focus_region'].setValueAt( tempbuffer1\[1] , refframe , 1 )\n\t\t\tthisGRP\['focus_region'].setValueAt( tempbuffer1\[2] , refframe , 2 )\n\t\t\tthisGRP\['focus_region'].setValueAt( tempbuffer1\[3] , refframe , 3 )\n\n\t\tfor trackframe in xrange( frameST, frameED+1 , 1 ) :\n\t\t\tnuke.execute( ct_hack, trackframe, trackframe )\n\t\t\tthisGRP\['focus_region'].setValueAt( nukescripts.snap3d.projectPoint( cam, pt1 )\[0] , trackframe , 0 )\n\t\t\tthisGRP\['focus_region'].setValueAt( nukescripts.snap3d.projectPoint( cam, pt1 )\[1] , trackframe , 1 )\n\t\t\tthisGRP\['focus_region'].setValueAt( nukescripts.snap3d.projectPoint( cam, pt2 )\[0] , trackframe , 2 )\n\t\t\tthisGRP\['focus_region'].setValueAt( nukescripts.snap3d.projectPoint( cam, pt2 )\[1] , trackframe , 3 )\n\n\tnuke.delete( ct_hack )\nexcept :\n    pass" +STARTLINE}
 addUserKnob {26 spacer_6 l "" +STARTLINE T <br>}
 addUserKnob {20 grp_crop_preview l "3D crop preview" +DISABLED n 1}
 grp_crop_preview 0
 addUserKnob {6 show_crop l "show crop point" t "It will show 2 spheres for the crop in 3D space. They set in the place which is where you set the focus region in screen space and defined by z." +DISABLED +STARTLINE}
 addUserKnob {7 crop_point_scale l scale t "Scale the preview crop points (spheres)." +DISABLED}
 crop_point_scale 0.3
 addUserKnob {18 crop_point_color l color t "change color of the crop points (spheres)." +DISABLED}
 crop_point_color 1
 addUserKnob {6 crop_point_color_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 crop_point_color_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 crop_point_color_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 crop_point_color_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 crop_point_color_panelDropped_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 crop_point_color_panelDropped_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 crop_point_color_panelDropped_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 crop_point_color_panelDropped_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 crop_point_color_panelDropped_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {20 endGroup n -1}
 addUserKnob {26 spacer l "" +STARTLINE T <br>}
 addUserKnob {26 title_uv l <b>UV</b>}
 addUserKnob {41 uv_stabilize l "uv stabilize" t "Turn this on if you need to stabilize in UV space. During UV stabilize on, the geo will not be animated. Set reference frame under 'mesh ref frame'." T menu1.uv_stabilize}
 addUserKnob {3 uv_ref_frame l "mesh ref frame" t "Select the frame number that will have identity geo shaped for UV texturing." +DISABLED}
 uv_ref_frame 1001
 addUserKnob {22 uv_set_frame l "set current frame" -STARTLINE +DISABLED T "nuke.thisGroup()\['uv_ref_frame'].setValue( nuke.frame() )"}
 addUserKnob {6 black_outside l "black outside" t "black outside the UV texture." +DISABLED +STARTLINE}
 black_outside true
 addUserKnob {20 t_VERSION l Version}
 addUserKnob {26 l_VERSION l Version T 1.3}
 addUserKnob {26 l_DATE l "Date Modified" T 2019-11-08}
 addUserKnob {26 l_CHANGELOG l Changelog T "1.3\n- camera window supported\n- anamophic project supported\n- fix the conflict of 'force region' and 'UV stabilize'.\n  can use both at the same time now.\n\n1.2\n- removed unuse camera link knobs\n- added focus region, so mesh can be\n  form in specific area/object to save\n  resources for higher LOD\n\n1.1\n- fix the missing line on 'Export Geo' \n  button\n\n1.0\n- create mesh/geo in screen space\n  using position/depth/deep data"}
 addUserKnob {26 l_DEV l "Developed by" T "<a href=\"https://facebook.com/MJTLab\"><font color=orange>Mark Joey Tang</font></a>"}
}
 BackdropNode {
  inputs 0
  name BackdropNode1
  tile_color 0xff
  label "don't touch"
  note_font_size 32
  xpos -1142
  ypos -169
  bdwidth 202
  bdheight 478
 }
 BackdropNode {
  inputs 0
  name BackdropNode2
  tile_color 0x4c4c4cff
  label bin
  note_font_size 32
  xpos -899
  ypos -170
  bdwidth 200
  bdheight 280
 }
 Input {
  inputs 0
  name img
  xpos -100
  ypos -184
 }
 Dot {
  name img_dot
  xpos -66
  ypos -83
 }
set N6a09e790 [stack 0]
 Dot {
  name Dot3
  xpos 758
  ypos -83
 }
set N5a77e6c0 [stack 0]
 Shuffle {
  in pworld
  in2 alpha
  alpha red2
  name shuffle_data
  label "\[value in]"
  xpos 724
  ypos -32
 }
 Unpremult {
  name Unpremult_data
  xpos 724
  ypos 62
  disable {{!parent.unpm}}
 }
 Dot {
  name Dot5
  xpos 758
  ypos 700
 }
set N5022cf20 [stack 0]
 Dot {
  name Dot6
  xpos 928
  ypos 700
 }
set N831fb820 [stack 0]
 Dot {
  name Dot7
  xpos 1106
  ypos 700
 }
set N831832b0 [stack 0]
 Dot {
  name Dot8
  xpos 1260
  ypos 700
 }
 Expression {
  temp_name0 dvalue
  temp_expr0 red
  temp_name1 xpos
  temp_expr1 "( ( x + 0.5 ) / input.width - 0.5 ) * \[value global_math.hratio] * abs( dvalue )"
  temp_name2 ypos
  temp_expr2 "( ( y + 0.5 ) / input.height - 0.5 ) * ( \[value global_math.hratio] * abs( dvalue ) * ( img_dot.height / img_dot.width ) ) * 1 / \[value format.pixel_aspect]"
  temp_name3 zpos
  temp_expr3 "- dvalue"
  expr0 "( xpos * \[value fb_data.world_matrix.0] + ypos * \[value fb_data.world_matrix.1] ) * \[value fb_data.win_scale.u] + ( \[value global_math.hratio] * abs(zpos) * \[value fb_data.win_translate.u] / 2 )"
  expr1 "( xpos * \[value fb_data.world_matrix.4] + ypos * \[value fb_data.world_matrix.5] ) * \[value fb_data.win_scale.v] + ( \[value global_math.hratio] * abs(zpos) * \[value fb_data.win_translate.v] / 2 )"
  expr2 zpos
  name Expression9
  xpos 1226
  ypos 774
 }
 Dot {
  name Dot16
  xpos 1260
  ypos 889
 }
push $N831832b0
 Expression {
  temp_name0 dvalue
  temp_expr0 "1 / red"
  temp_name1 xpos
  temp_expr1 "( ( x + 0.5 ) / input.width - 0.5 ) * \[value global_math.hratio] * abs( dvalue )"
  temp_name2 ypos
  temp_expr2 "( ( y + 0.5 ) / input.height - 0.5 ) * ( \[value global_math.hratio] * abs( dvalue ) * ( img_dot.height / img_dot.width ) ) * 1 / \[value format.pixel_aspect]"
  temp_name3 zpos
  temp_expr3 "- dvalue"
  expr0 "( xpos * \[value fb_data.world_matrix.0] + ypos * \[value fb_data.world_matrix.1] ) * \[value fb_data.win_scale.u] + ( \[value global_math.hratio] * abs(zpos) * \[value fb_data.win_translate.u] / 2 )"
  expr1 "( xpos * \[value fb_data.world_matrix.4] + ypos * \[value fb_data.world_matrix.5] ) * \[value fb_data.win_scale.v] + ( \[value global_math.hratio] * abs(zpos) * \[value fb_data.win_translate.v] / 2 )"
  expr2 zpos
  name Expression6
  xpos 1072
  ypos 774
 }
 Dot {
  name Dot17
  xpos 1106
  ypos 863
 }
push $N831fb820
 Expression {
  expr2 -blue
  name Expression7
  label "fix z"
  xpos 894
  ypos 774
 }
 Dot {
  name Dot18
  xpos 928
  ypos 876
 }
push $N5022cf20
 Expression {
  temp_name0 nx
  temp_expr0 "red - cam_data.world_matrix.3"
  temp_name1 ny
  temp_expr1 "green - cam_data.world_matrix.7"
  temp_name2 nz
  temp_expr2 "blue - cam_data.world_matrix.11"
  expr0 "nx * \[value inverseMatrix.invMatrix.0] + ny * \[value inverseMatrix.invMatrix.1] + nz * \[value inverseMatrix.invMatrix.2]"
  expr1 "nx * \[value inverseMatrix.invMatrix.3] + ny * \[value inverseMatrix.invMatrix.4] + nz * \[value inverseMatrix.invMatrix.5]"
  expr2 "nx * \[value inverseMatrix.invMatrix.6] + ny * \[value inverseMatrix.invMatrix.7] + nz * \[value inverseMatrix.invMatrix.8]"
  name Expression3
  label "position invert"
  xpos 724
  ypos 774
 }
 Switch {
  inputs 4
  which {{parent.data_type}}
  name Switch1
  xpos 724
  ypos 984
 }
 Dot {
  name Dot13
  xpos 758
  ypos 1113
 }
set N5a492f40 [stack 0]
 Dot {
  name sam_dot
  xpos 551
  ypos 1113
 }
 NoOp {
  inputs 0
  name menu1
  knobChanged "\nthisGRP = nuke.thisGroup()\nif thisGRP\['uv_stabilize'].getValue() == 1 :\n    thisGRP\['uv_ref_frame'].setEnabled(True)\n    thisGRP\['uv_set_frame'].setEnabled(True)\n    thisGRP\['black_outside'].setEnabled(True)\nelse :\n    thisGRP\['uv_ref_frame'].setEnabled(False)\n    thisGRP\['uv_set_frame'].setEnabled(False)\n    thisGRP\['black_outside'].setEnabled(False)\n"
  xpos -1085
  ypos -42
  addUserKnob {20 User}
  addUserKnob {6 uv_stabilize l "uv stabilize" +STARTLINE}
 }
 NoOp {
  inputs 0
  name menu2
  onCreate "\nthisGRP = nuke.thisGroup()\nfregion_knobs = \['focus_region','fregion_define_z','sample_z_toggle','sample_z_status','sample_point','fregion_ref_frame','fregion_set_frame','track_focus_region','grp_crop_preview','show_crop','crop_point_scale','crop_point_color']\n\nthisGRP\[fregion_knobs\[4]].setEnabled(True)\n\nif thisGRP\['use_focus_region'].getValue()  == 0 :\n    for i in fregion_knobs :\n        thisGRP\[i].setEnabled(False)\n    thisGRP\[fregion_knobs\[3]].setValue( '<font color=red>\[ OFF ]</font>' )\n    thisGRP\['updateUI'].setValue('')\n    nuke.toNode('material_switch')\['disable'].setValue(0)\nelse :\n    for i in fregion_knobs :\n        if i != 'sample_point' :\n            thisGRP\[i].setEnabled(True)\n        else :\n            thisGRP\[i].setEnabled(False)\n    nuke.toNode('material_switch')\['disable'].setValue(1)\n"
  knobChanged "\nthisGRP = nuke.thisGroup()\nfregion_knobs = \['focus_region','fregion_define_z','sample_z_toggle','sample_z_status','sample_point','fregion_ref_frame','fregion_set_frame','track_focus_region','grp_crop_preview','show_crop','crop_point_scale','crop_point_color']\n\nif thisGRP\['use_focus_region'].getValue()  == 0 :\n    for i in fregion_knobs :\n        thisGRP\[i].setEnabled(False)\n    thisGRP\[fregion_knobs\[3]].setValue( '<font color=red>\[ OFF ]</font>' )\n    thisGRP\['updateUI'].setValue('')\n    nuke.toNode('material_switch')\['disable'].setValue(0)\nelse :\n    for i in fregion_knobs :\n        if i != 'sample_point' :\n            thisGRP\[i].setEnabled(True)\n    nuke.toNode('material_switch')\['disable'].setValue(1)\n"
  xpos -1085
  ypos 25
  addUserKnob {20 User}
  addUserKnob {6 use_focus_region l "use focus region" +STARTLINE}
 }
 Camera {
  inputs 0
  display off
  selectable false
  useMatrix true
  matrix {
      {{Camera2.world_matrix} {Camera2.world_matrix} {Camera2.world_matrix} {Camera2.world_matrix}}
      {{Camera2.world_matrix} {Camera2.world_matrix} {Camera2.world_matrix} {Camera2.world_matrix}}
      {{Camera2.world_matrix} {Camera2.world_matrix} {Camera2.world_matrix} {Camera2.world_matrix}}
      {{Camera2.world_matrix} {Camera2.world_matrix} {Camera2.world_matrix} {Camera2.world_matrix}}
    }
  focal {{parent.cam_focal}}
  haperture {{cam_haperture}}
  name cam_data
  xpos -335
  ypos 2204
 }
push $N5a492f40
 Expression {
  temp_name0 unpremultA
  temp_expr0 "alpha * ( 1 / alpha )"
  temp_name1 max
  temp_expr1 blue
  expr3 "abs( max ) < \[value parent.drange_near] || abs( max ) > \[value parent.drange_far] ? 0 : isnan(unpremultA) ? 0 : unpremultA"
  name Expression1
  label "distance crop"
  xpos 724
  ypos 1244
 }
 Premult {
  name Premult1
  xpos 724
  ypos 1332
 }
 Dot {
  name Dot9
  xpos 758
  ypos 1640
 }
set N5a4a2a00 [stack 0]
push $N6a09e790
 Dot {
  name Dot10
  xpos -66
  ypos 1552
 }
set N6a5a4250 [stack 0]
 Unpremult {
  name Unpremult1
  xpos 48
  ypos 1549
 }
 Merge2 {
  inputs 2
  operation mask
  name Merge2
  xpos 48
  ypos 1637
 }
 Premult {
  name Premult3
  xpos 48
  ypos 1719
 }
push $N6a5a4250
 Switch {
  inputs 2
  which {{parent.clip_color}}
  name Switch2
  xpos -100
  ypos 1828
 }
 Project3D2 {
  inputs 2
  crop {{parent.black_outside}}
  name Project3D2
  xpos -100
  ypos 2224
 }
push $N5a77e6c0
 Dot {
  name Dot2
  xpos 1576
  ypos -84
 }
 Shuffle {
  red black
  green black
  blue black
  alpha black
  name Shuffle1
  label "\[value in]"
  xpos 1542
  ypos 30
 }
 Remove {
  name Remove1
  xpos 1542
  ypos 118
 }
 Reformat {
  type scale
  black_outside true
  name Reformat1
  xpos 1542
  ypos 212
 }
 Expression {
  temp_name0 xpos
  temp_expr0 "( ( x + 0.5 ) / input.width - 0.5) *  \[value global_math.hratio] * abs( \[value parent.drange_far] )"
  temp_name1 ypos
  temp_expr1 "( ( y + 0.5 ) / input.height -0.5 ) * ( \[value global_math.hratio] * abs( \[value parent.drange_far] ) * ( img_dot.height / img_dot.width ) ) * 1 / \[value format.pixel_aspect]"
  temp_name2 zpos
  temp_expr2 "-\[value parent.drange_far]"
  expr0 "( xpos * \[value fb_data.world_matrix.0] + ypos * \[value fb_data.world_matrix.1] ) * \[value fb_data.win_scale.u] + ( \[value global_math.hratio] * abs(zpos) * \[value fb_data.win_translate.u] / 2 )"
  expr1 "( xpos * \[value fb_data.world_matrix.4] + ypos * \[value fb_data.world_matrix.5] ) * \[value fb_data.win_scale.v] + ( \[value global_math.hratio] * abs(zpos) * \[value fb_data.win_translate.v] / 2 )"
  expr2 zpos
  name Expression8
  xpos 1542
  ypos 845
 }
 ColorMatrix {
  matrix {
      {{cam_data.world_matrix.0} {cam_data.world_matrix.1} {cam_data.world_matrix.2}}
      {{cam_data.world_matrix.4} {cam_data.world_matrix.5} {cam_data.world_matrix.6}}
      {{cam_data.world_matrix.8} {cam_data.world_matrix.9} {cam_data.world_matrix.10}}
    }
  name ColorMatrix1
  xpos 1542
  ypos 970
 }
 Add {
  channels rgb
  value {{cam_data.world_matrix.3} {cam_data.world_matrix.7} {cam_data.world_matrix.11} 0}
  name Add1
  xpos 1542
  ypos 1052
 }
 Crop {
  box {{store.fregion} {store.fregion} {store.fregion} {store.fregion}}
  reformat true
  crop false
  name Crop1
  xpos 1542
  ypos 1476
  disable {{!parent.use_focus_region}}
 }
 Dot {
  name Dot4
  xpos 1576
  ypos 2402
 }
push $N5a4a2a00
 Crop {
  box {{store.fregion} {store.fregion} {store.fregion} {store.fregion}}
  reformat true
  crop false
  name Crop4
  selected true
  xpos 724
  ypos 1714
  disable {{!parent.use_focus_region}}
 }
 Unpremult {
  name Unpremult3
  xpos 724
  ypos 1851
 }
 Expression {
  temp_name0 nx
  temp_expr0 red
  temp_name1 ny
  temp_expr1 green
  temp_name2 nz
  temp_expr2 blue
  expr0 "( nx * \[value cam_data.world_matrix.0] + ny * \[value cam_data.world_matrix.1] + nz * \[value cam_data.world_matrix.2] ) + \[value cam_data.world_matrix.3]"
  expr1 "( nx * \[value cam_data.world_matrix.4] + ny * \[value cam_data.world_matrix.5] + nz * \[value cam_data.world_matrix.6] ) + \[value cam_data.world_matrix.7]"
  expr2 "( nx * \[value cam_data.world_matrix.8] + ny * \[value cam_data.world_matrix.9] + nz * \[value cam_data.world_matrix.10] ) + \[value cam_data.world_matrix.11]"
  name Expression4
  label "position revert"
  xpos 724
  ypos 1933
 }
 Premult {
  name Premult2
  xpos 724
  ypos 2027
 }
 Merge2 {
  inputs 2
  operation under
  name Merge1
  xpos 724
  ypos 2398
 }
 Card {
  inputs 0
  image_aspect false
  rows {{"img_dot.height * parent.lod"}}
  columns {{"img_dot.width * parent.lod"}}
  name ssmesh
  xpos 343
  ypos 2317
 }
 DisplaceGeo {
  inputs 2
  source "rgb absolute"
  scale 1
  filter_size 1
  name DisplaceGeo
  xpos 343
  ypos 2399
 }
 FrameHold {
  first_frame {{parent.uv_ref_frame}}
  name FrameHold
  xpos 343
  ypos 2479
  disable {{!parent.uv_stabilize}}
 }
 ApplyMaterial {
  inputs 2
  name ApplyMaterial1
  xpos -100
  ypos 2483
 }
 Scene {
  display {{parent.display}}
  name gl_scene
  xpos -90
  ypos 3072
 }
set N50253b80 [stack 0]
 WriteGeo {
  file_type abc
  name WriteGeo
  xpos 120
  ypos 3093
 }
 Axis {
  inputs 0
  display off
  selectable false
  translate {{"( global_math.pt2.x * cam_data.world_matrix.0(parent.fregion_ref_frame) + global_math.pt2.y * cam_data.world_matrix.1(parent.fregion_ref_frame) + global_math.pt2.z * cam_data.world_matrix.2(parent.fregion_ref_frame) ) + cam_data.world_matrix.3(parent.fregion_ref_frame)"} {"( global_math.pt2.x * cam_data.world_matrix.4(parent.fregion_ref_frame) + global_math.pt2.y * cam_data.world_matrix.5(parent.fregion_ref_frame) + global_math.pt2.z * cam_data.world_matrix.6(parent.fregion_ref_frame) ) + cam_data.world_matrix.7(parent.fregion_ref_frame)"} {"( global_math.pt2.x * cam_data.world_matrix.8(parent.fregion_ref_frame) + global_math.pt2.y * cam_data.world_matrix.9(parent.fregion_ref_frame) + global_math.pt2.z * cam_data.world_matrix.10(parent.fregion_ref_frame) ) + cam_data.world_matrix.11(parent.fregion_ref_frame)"}}
  name right_pt
  xpos -600
  ypos 3218
 }
 CheckerBoard2 {
  inputs 0
  format "256 256 0 0 256 256 1 square_256"
  name CheckerBoard1
  xpos -789
  ypos 2694
 }
 Multiply {
  channels rgb
  value {{parent.crop_point_color.r} {parent.crop_point_color.g} {parent.crop_point_color.b} 1}
  name Multiply
  xpos -789
  ypos 2822
 }
 Clamp {
  channels rgba
  name Clamp1
  xpos -789
  ypos 2905
 }
 Sphere {
  selectable false
  cast_shadow false
  receive_shadow false
  rows 10
  columns 10
  uniform_scale {{parent.crop_point_scale}}
  name Sphere1
  xpos -789
  ypos 2987
  disable {{!show_crop}}
 }
 Dot {
  name Dot24
  xpos -755
  ypos 3065
 }
set N4a72f9f0 [stack 0]
 Dot {
  name Dot25
  xpos -456
  ypos 3065
 }
 TransformGeo {
  inputs 2
  selectable false
  name TransformGeo2
  xpos -490
  ypos 3238
 }
 Axis {
  inputs 0
  display off
  selectable false
  translate {{"( global_math.pt1.x * cam_data.world_matrix.0(parent.fregion_ref_frame) + global_math.pt1.y * cam_data.world_matrix.1(parent.fregion_ref_frame) + global_math.pt1.z * cam_data.world_matrix.2(parent.fregion_ref_frame) ) + cam_data.world_matrix.3(parent.fregion_ref_frame)"} {"( global_math.pt1.x * cam_data.world_matrix.4(parent.fregion_ref_frame) + global_math.pt1.y * cam_data.world_matrix.5(parent.fregion_ref_frame) + global_math.pt1.z * cam_data.world_matrix.6(parent.fregion_ref_frame) ) + cam_data.world_matrix.7(parent.fregion_ref_frame)"} {"( global_math.pt1.x * cam_data.world_matrix.8(parent.fregion_ref_frame) + global_math.pt1.y * cam_data.world_matrix.9(parent.fregion_ref_frame) + global_math.pt1.z * cam_data.world_matrix.10(parent.fregion_ref_frame) ) + cam_data.world_matrix.11(parent.fregion_ref_frame)"}}
  name left_pt
  xpos -899
  ypos 3220
 }
push $N4a72f9f0
 TransformGeo {
  inputs 2
  selectable false
  name TransformGeo1
  xpos -789
  ypos 3240
 }
 Scene {
  inputs 2
  selectable false
  name Scene1
  xpos -480
  ypos 3395
 }
 ApplyMaterial {
  display off
  selectable false
  render_mode off
  name material_switch
  xpos -490
  ypos 3523
 }
push $N50253b80
 Scene {
  inputs 2
  name Scene2
  xpos -90
  ypos 3502
 }
 Output {
  name Output1
  xpos -100
  ypos 4030
 }
 Group {
  inputs 0
  name inverseMatrix
  tile_color 0x337f4cff
  xpos 576
  ypos 780
  addUserKnob {20 tab_general l General}
  addUserKnob {1 knob_path}
  knob_path cam_data.world_matrix
  addUserKnob {26 ""}
  addUserKnob {41 id T id_assign.matrix}
  addUserKnob {26 ""}
  addUserKnob {7 determinant}
  determinant {{"\[value \[value knob_path].\[value id.0]] * ((\[value \[value knob_path].\[value id.4]]*\[value \[value knob_path].\[value id.8]]) - (\[value \[value knob_path].\[value id.5]]*\[value \[value knob_path].\[value id.7]])) - \[value \[value knob_path].\[value id.1]] * ((\[value \[value knob_path].\[value id.3]]*\[value \[value knob_path].\[value id.8]]) - (\[value \[value knob_path].\[value id.5]]*\[value \[value knob_path].\[value id.6]])) + \[value \[value knob_path].\[value id.2]] * ((\[value \[value knob_path].\[value id.3]]*\[value \[value knob_path].\[value id.7]])-(\[value \[value knob_path].\[value id.4]]*\[value \[value knob_path].\[value id.6]]))"}}
  addUserKnob {26 ""}
  addUserKnob {41 cofactor T mtx_cofactor.matrix}
  addUserKnob {26 ""}
  addUserKnob {41 invMatrix T matrix_output.matrix}
  addUserKnob {20 t_VERSION l Version}
  addUserKnob {26 l_VERSION l Version T 1.0}
  addUserKnob {26 l_DATE l "Date Modified" T 2011-11-28}
  addUserKnob {26 l_CHANGELOG l Changelog T "v1.0\n- reveal the calculate output of \n  inverse matrix which is c44matrix\n  and colormatrix doesn't show\n  "}
  addUserKnob {26 l_DEV l "Developed by" T "Mark Joey Tang"}
 }
  Matrix {
   inputs 0
   matrix {
       {0 1 2}
       {4 5 6}
       {8 9 10}
     }
   name id_assign
   xpos -12
   ypos 33
  }
  Matrix {
   inputs 0
   matrix {
       {{"(\[value \[value knob_path].\[value id.4]]*\[value \[value knob_path].\[value id.8]]) - (\[value \[value knob_path].\[value id.5]]*\[value \[value knob_path].\[value id.7]])"} {"(\[value \[value knob_path].\[value id.7]]*\[value \[value knob_path].\[value id.2]]) - (\[value \[value knob_path].\[value id.8]]*\[value \[value knob_path].\[value id.1]])"} {"(\[value \[value knob_path].\[value id.1]]*\[value \[value knob_path].\[value id.5]]) - (\[value \[value knob_path].\[value id.2]]*\[value \[value knob_path].\[value id.4]])"}}
       {{"(\[value \[value knob_path].\[value id.5]]*\[value \[value knob_path].\[value id.6]]) - (\[value \[value knob_path].\[value id.3]]*\[value \[value knob_path].\[value id.8]])"} {"(\[value \[value knob_path].\[value id.8]]*\[value \[value knob_path].\[value id.0]]) - (\[value \[value knob_path].\[value id.6]]*\[value \[value knob_path].\[value id.2]])"} {"(\[value \[value knob_path].\[value id.2]]*\[value \[value knob_path].\[value id.3]]) - (\[value \[value knob_path].\[value id.0]]*\[value \[value knob_path].\[value id.5]])"}}
       {{"(\[value \[value knob_path].\[value id.3]]*\[value \[value knob_path].\[value id.7]]) - (\[value \[value knob_path].\[value id.4]]*\[value \[value knob_path].\[value id.6]])"} {"(\[value \[value knob_path].\[value id.6]]*\[value \[value knob_path].\[value id.1]]) - (\[value \[value knob_path].\[value id.7]]*\[value \[value knob_path].\[value id.0]])"} {"(\[value \[value knob_path].\[value id.0]]*\[value \[value knob_path].\[value id.4]]) - (\[value \[value knob_path].\[value id.1]]*\[value \[value knob_path].\[value id.3]])"}}
     }
   name mtx_cofactor
   xpos 86
   ypos 32
  }
  Matrix {
   inputs 0
   matrix {
       {{"cofactor.0 == 0 || determinant == 0 ? 0 : cofactor.0/determinant"} {"cofactor.1 == 0 || determinant == 0 ? 0 : cofactor.1/determinant"} {"cofactor.2 == 0 || determinant == 0 ? 0 : cofactor.2/determinant"}}
       {{"cofactor.3 == 0 || determinant == 0 ? 0 : cofactor.3/determinant"} {"cofactor.4 == 0 || determinant == 0 ? 0 : cofactor.4/determinant"} {"cofactor.5 == 0 || determinant == 0 ? 0 : cofactor.5/determinant"}}
       {{"cofactor.6 == 0 || determinant == 0 ? 0 : cofactor.6/determinant"} {"cofactor.7 == 0 || determinant == 0 ? 0 : cofactor.7/determinant"} {"cofactor.8 == 0 || determinant == 0 ? 0 : cofactor.8/determinant"}}
     }
   name matrix_output
   xpos 186
   ypos 33
  }
 end_group
 Camera {
  inputs 0
  rotate {0 0 {-parent.cam_winroll}}
  win_translate {{parent.cam_win_translate} {parent.cam_win_translate}}
  win_scale {{parent.cam_win_scale} {parent.cam_win_scale}}
  name fb_data
  xpos -340
  ypos 2087
 }
 NoOp {
  inputs 0
  name store
  xpos -843
  ypos 28
  addUserKnob {20 User}
  addUserKnob {22 fn T "### level define ###\n\ndef getLevel() :\n\tif len(nuke.thisNode().fullName().split('.')) == 1 :\n\t\tggLevel = nuke.root()\n\telse :\n\t\tnodePath = nuke.thisNode().fullName().split('.')\n\t\tnodePath.pop()\n\t\tggLevel = nuke.toNode('.'.join(nodePath))\n\treturn ggLevel\n\n### sample z in 2D ###\n\ndef sample2d() :\n\tthisGRP = nuke.thisGroup()\n\tif thisGRP\['sample_z_status'].value() == '<font color=cyan>\[ ON ]</font>' :\n\t\tsam_co = thisGRP\['sample_point'].getValue()\n\t\tzdata = nuke.toNode('sam_dot').sample('blue', sam_co\[0], sam_co\[1]) * -1\n\t\tthisGRP\['fregion_define_z'].setValue( zdata )" +STARTLINE}
  addUserKnob {15 fregion}
  fregion {{parent.focus_region} {parent.focus_region} {parent.focus_region} {parent.focus_region}}
 }
 NoOp {
  inputs 0
  name global_math
  xpos -842
  ypos -43
  addUserKnob {20 User}
  addUserKnob {7 hratio}
  hratio {{"cam_data.haperture / cam_data.focal"}}
  addUserKnob {7 maxwidth}
  maxwidth {{"hratio * parent.fregion_define_z"}}
  addUserKnob {7 maxheight}
  maxheight {{"hratio * parent.fregion_define_z * ( img_dot.height / img_dot.width )"}}
  addUserKnob {13 pt1}
  pt1 {{"( ( ( maxwidth * ( parent.focus_region.x(parent.fregion_ref_frame) / img_dot.width) ) - ( maxwidth / 2 ) ) * fb_data.world_matrix.0 + ( ( ( maxheight * ( parent.focus_region.y(parent.fregion_ref_frame) / img_dot.height ) ) - ( maxheight / 2 ) ) * 1 / \[value root.format.pixel_aspect] ) * fb_data.world_matrix.1 ) * fb_data.win_scale.u + ( hratio * abs(parent.fregion_define_z) * fb_data.win_translate.u /2 )"} {"( ( ( maxwidth * ( parent.focus_region.x(parent.fregion_ref_frame) / img_dot.width) ) - ( maxwidth / 2 ) ) * fb_data.world_matrix.4 + \n( ( ( maxheight * ( parent.focus_region.y(parent.fregion_ref_frame) / img_dot.height ) ) - ( maxheight / 2 ) ) * 1 / \[value root.format.pixel_aspect] ) * fb_data.world_matrix.5 ) * fb_data.win_scale.v + ( hratio * abs(parent.fregion_define_z) * fb_data.win_translate.v /2 )"} {-parent.fregion_define_z}}
  addUserKnob {13 pt2}
  pt2 {{"( ( ( maxwidth * ( parent.focus_region.r(parent.fregion_ref_frame) / img_dot.width) ) - ( maxwidth / 2 ) ) * fb_data.world_matrix.0 + ( ( ( maxheight * ( parent.focus_region.t(parent.fregion_ref_frame) / img_dot.height ) ) - ( maxheight / 2 ) ) * 1 / \[value root.format.pixel_aspect] ) * fb_data.world_matrix.1 ) * fb_data.win_scale.u + ( hratio * abs(parent.fregion_define_z) * fb_data.win_translate.u /2 )"} {"( ( ( maxwidth * ( parent.focus_region.r(parent.fregion_ref_frame) / img_dot.width) ) - ( maxwidth / 2 ) ) * fb_data.world_matrix.4 + ( ( ( maxheight * ( parent.focus_region.t(parent.fregion_ref_frame) / img_dot.height ) ) - ( maxheight / 2 ) ) * 1 / \[value root.format.pixel_aspect] ) * fb_data.world_matrix.5 ) * fb_data.win_scale.v + ( hratio * abs(parent.fregion_define_z) * fb_data.win_translate.v /2 )"} {-parent.fregion_define_z}}
 }
end_group
Camera2 {
 inputs 0
 translate {{curve x1 -23.73355293 x50 1.828465939 x100 10.79810143} {curve x1 6.752248287 x50 13.82691669 x100 25.23773003} {curve x1 -3.158116341 x50 5.475767136 x100 -12.79232216}}
 rotate {{curve x1 30.63627052 x50 14.22963619 x100 -23.22279344} {curve x1 -44.94124796 x50 19.70681696 x100 76.6501109} {curve x1 0 x50 27.42004885 x100 13.36756642}}
 focal 24
 name Camera2
 xpos -983
 ypos -209
}
Scene {
 inputs 2
 name Scene1
 xpos -806
 ypos -68
}
Dot {
 name Dot1
 xpos -782
 ypos 119
}
Group {
 inputs 0
 name render_with_pcam
 xpos -157
 ypos -375
 postage_stamp true
}
 Camera2 {
  inputs 0
  translate {{curve x1 -23.73355293 x50 1.828465939 x100 10.79810143} {curve x1 6.752248287 x50 13.82691669 x100 25.23773003} {curve x1 -3.158116341 x50 5.475767136 x100 -12.79232216}}
  rotate {{curve x1 30.63627052 x50 14.22963619 x100 -23.22279344} {curve x1 -44.94124796 x50 19.70681696 x100 76.6501109} {curve x1 0 x50 27.42004885 x100 13.36756642}}
  focal 24
  name Camera1
  xpos 241
  ypos -567
 }
 Dot {
  name Dot2
  xpos 351
  ypos -543
 }
set N818864f0 [stack 0]
 Dot {
  name Dot3
  xpos 351
  ypos -428
 }
push $N818864f0
 CheckerBoard2 {
  inputs 0
  name CheckerBoard1
  xpos 406
  ypos -928
 }
 Dot {
  name Dot1
  xpos 440
  ypos -814
 }
set N7ed45e80 [stack 0]
 Dot {
  name Dot5
  xpos 553
  ypos -814
 }
set N7ed48200 [stack 0]
 Dot {
  name Dot4
  xpos 693
  ypos -814
 }
 Multiply {
  channels rgb
  value {0 1 1 1}
  name Multiply3
  xpos 659
  ypos -756
 }
 Cube {
  rows 1
  columns 1
  separate_faces false
  translate {-7.849998951 18.14999962 -19.00000191}
  rotate {0 0 45.93192592}
  uniform_scale 7
  name Cube1
  xpos 659
  ypos -676
 }
push $N7ed48200
 Multiply {
  channels rgb
  value {1 0 1 1}
  name Multiply2
  xpos 519
  ypos -750
 }
 Sphere {
  translate {-15.00000191 16.45000076 -17.79999924}
  scaling {3.183291435 1 2.618715286}
  uniform_scale 2
  name Sphere1
  xpos 519
  ypos -670
 }
push $N7ed45e80
 Multiply {
  channels rgb
  value {1 1 0 1}
  name Multiply1
  xpos 406
  ypos -754
 }
 Cylinder {
  rows 1
  close_top true
  close_bottom true
  translate {-3.149999619 19.64999962 -13.89999866}
  rotate {52.26493538 0 32.53306187}
  scaling {1 4.216488838 1}
  uniform_scale 2
  name Cylinder1
  xpos 406
  ypos -673
 }
 Scene {
  inputs 4
  name Scene1
  xpos 416
  ypos -567
 }
 Reformat {
  inputs 0
  type "to box"
  box_width 1280
  box_height 720
  box_fixed true
  name Reformat1
  xpos 530
  ypos -431
 }
add_layer {pcam pcam.red pcam.green pcam.blue pcam.alpha}
 ScanlineRender {
  inputs 3
  conservative_shader_sampling false
  motion_vectors_type off
  MB_channel none
  output_shader_vectors true
  P_channel pcam
  name ScanlineRender1
  xpos 406
  ypos -431
 }
 Add {
  channels pcam
  value {{-Camera1.world_matrix.3} {-Camera1.world_matrix.7} {-Camera1.world_matrix.11} {curve}}
  name Add1
  xpos 406
  ypos -351
 }
 ColorMatrix {
  channels pcam
  matrix {
      {{Camera1.world_matrix.0} {Camera1.world_matrix.1} {Camera1.world_matrix.2}}
      {{Camera1.world_matrix.4} {Camera1.world_matrix.5} {Camera1.world_matrix.6}}
      {{Camera1.world_matrix.8} {Camera1.world_matrix.9} {Camera1.world_matrix.10}}
    }
  invert true
  name ColorMatrix1
  xpos 406
  ypos -274
 }
 Expression {
  channel2 {-pcam.red -pcam.green pcam.blue pcam.alpha}
  expr2 abs(pcam.blue)
  name Expression1
  selected true
  xpos 406
  ypos -186
 }
 Output {
  name Output1
  xpos 406
  ypos -65
 }
end_group
Group {
 name SSMesh9
 tile_color 0x5c9e83ff
 label "<font color=cyan>Geo Output</font>"
 xpos -157
 ypos -205
 addUserKnob {20 tab_general l General}
 addUserKnob {22 set_link l "link to selected camera" t "Click to link selected camera by expression. This tool will get the focal, haperture and world matrix from selected camera to generate" T "def getLevel() :\n\t### level define ###\n\tif len(nuke.thisNode().fullName().split('.')) == 1 :\n\t\t  ggLevel = nuke.root()\n\telse :\n\t\t  nodePath = nuke.thisNode().fullName().split('.')\n\t\t  nodePath.pop()\n\t\t  ggLevel = nuke.toNode('.'.join(nodePath))\n\treturn ggLevel\n\nroot = getLevel()\nthisGRP = nuke.thisGroup()\n\nmainKnobs = \['world_matrix','cam_focal','cam_haperture','cam_win_translate','cam_win_scale','cam_winroll']\ndefaultKnobs = \{\n\t\t\t'world matrix' : 'world_matrix',\n\t\t\t'focal length' : 'focal',\n\t\t\t'horiz aperture' : 'haperture',\n\t\t\t'window translate' : 'win_translate',\n\t\t\t'window scale' : 'win_scale',\n\t\t\t'window roll' : 'winroll'\n\t\t\t\}\nselNodeKnobs = \[]\nmissingKnob = \[]\n\ntry :\n\twith root :\n\t\tselNode = nuke.selectedNode()\n\n\tfor knob in selNode.knobs() :\n\t\tselNodeKnobs.append( knob )\n\n\tselNodeKnobs.sort()\n\n\tfor key,value in defaultKnobs.items() :\n\t\tif value not in selNodeKnobs :\n\t\t\tmissingKnob.append( key )\n\n\tif not len(missingKnob) :\n\t\twith root :\n\t\t\tCAMnode = selNode.name()\n\t\t\tthisGRP\[mainKnobs\[0]].setExpression('\{0\}.world_matrix'.format(CAMnode))\n\t\t\tthisGRP\[mainKnobs\[1]].setExpression('\{0\}.focal'.format(CAMnode))\n\t\t\tthisGRP\[mainKnobs\[2]].setExpression('\{0\}.haperture'.format(CAMnode))\n\t\t\tthisGRP\[mainKnobs\[3]].setExpression('\{0\}.win_translate'.format(CAMnode))\n\t\t\tthisGRP\[mainKnobs\[4]].setExpression('\{0\}.win_scale'.format(CAMnode))\n\t\t\tthisGRP\[mainKnobs\[5]].setExpression('\{0\}.winroll'.format(CAMnode))\n\telse :\n\t\tp = nuke.Panel('Select knobs :')\n\t\tp.addBooleanCheckBox( '<b>Unable to find the default knobs. Please use the pulldown menu below to define the knob manually.</b>' , False)\n\t\tfor rk in missingKnob :\n\t\t\tp.addEnumerationPulldown( rk, ' '.join( selNodeKnobs ) )\n\n\t\tif p.show() :\n\t\t\ttry :\n\t\t\t\tfor key,value in defaultKnobs.items() :\n\t\t\t\t\tif p.value( key ) != None :\n\t\t\t\t\t\tdefaultKnobs\[key] = p.value( key )\n\t\t\texcept :\n\t\t\t\tpass\n\n\t\t\twith root :\n\t\t\t\tCAMnode = selNode.name()\n\t\t\t\tthisGRP\[mainKnobs\[0]].setExpression('\{0\}.\{1\}'.format(CAMnode, defaultKnobs\['world matrix']))\n\t\t\t\tthisGRP\[mainKnobs\[1]].setExpression('\{0\}.\{1\}'.format(CAMnode, defaultKnobs\['focal length']))\n\t\t\t\tthisGRP\[mainKnobs\[2]].setExpression('\{0\}.\{1\}'.format(CAMnode, defaultKnobs\['horiz aperture']))\n\t\t\t\tthisGRP\[mainKnobs\[3]].setExpression('\{0\}.\{1\}'.format(CAMnode, defaultKnobs\['window translate']))\n\t\t\t\tthisGRP\[mainKnobs\[4]].setExpression('\{0\}.\{1\}'.format(CAMnode, defaultKnobs\['window scale']))\n\t\t\t\tthisGRP\[mainKnobs\[5]].setExpression('\{0\}.\{1\}'.format(CAMnode, defaultKnobs\['window roll']))\nexcept :\n\tnuke.message('no node selected.')" +STARTLINE}
 addUserKnob {22 remove_link l "remove linked expression" t "Remove the linked camera expression but won't reset any data." -STARTLINE T "thisGRP = nuke.thisGroup()\nmainKnobs = \['world_matrix','cam_focal','cam_haperture','cam_win_translate','cam_win_scale','cam_winroll']\n\nfor knob in thisGRP.knobs() :\n\tif mainKnobs.count(knob) != 0 :\n\t\t thisGRP\[knob].clearAnimated()"}
 addUserKnob {20 cam_data_grp l "CAMERA DATA" n 1}
 cam_data_grp 0
 addUserKnob {7 cam_focal l "focal length" R 5 100}
 cam_focal {{Camera1.focal}}
 addUserKnob {7 cam_haperture l "horiz aperture" R 0.1 50}
 cam_haperture {{Camera1.haperture}}
 addUserKnob {30 cam_win_translate l "window translate"}
 cam_win_translate {{Camera1.win_translate} {Camera1.win_translate}}
 addUserKnob {30 cam_win_scale l "window scale"}
 cam_win_scale {{Camera1.win_scale} {Camera1.win_scale}}
 addUserKnob {7 cam_winroll l "window roll" R -45 45}
 cam_winroll {{Camera1.winroll}}
 addUserKnob {41 world_matrix l "world matrix" T cam_data.matrix}
 addUserKnob {20 endGroup_1 l endGroup n -1}
 addUserKnob {26 spacer_5 l "" +STARTLINE T <br>}
 addUserKnob {26 title_basic l "<b>BASIC SETTING</b>"}
 addUserKnob {4 display l "3D display" t "How to draw in 3D preview. The viewer can override this setting." M {off wireframe soild solid+wireframe textured textured+wireframe "" "" ""}}
 display textured
 addUserKnob {4 data_type l "data type" t "data type\nUsing one of these data to convert into 3D mesh.\n\nPosition\nSupported world space or camera space position data.\n\nDepth (normalized far=0)\nNormalized depth data, which is same as depth data output by ScanlineRender.\n\nDeep / Depth (direct)\nRaw camera depth data. If using deep, need to convert DeepToImage first, and selected deep channel on 'channels' knob." M {"position (world space)" "position (camera space)" "depth (normalized far=0)" "deep / depth (direct)" "" "" ""}}
 data_type "position (camera space)"
 addUserKnob {41 channels t "Select which channel represented on selected data type." T shuffle_data.in}
 addUserKnob {6 unpm l unpremult t "3D data pass should be unpremult with alpha before process." -STARTLINE}
 unpm true
 addUserKnob {26 spacer_4 l "" +STARTLINE T <br>}
 addUserKnob {7 lod l "mesh LOD" t "Level of Details\n\nIf this value set to 1.0, subdivision of the mesh  1:1 to the data available in the resolution. Which mean 1 face of the mesh equal to 1 pixel.\n\nIf this value set to 1.0, it will slow down the render process.\n\nHighly recommend to use 0.1 - 0.5 if high resolution mesh details is not concern."}
 lod 0.1
 addUserKnob {41 filter_size l "filter size" T DisplaceGeo.filter_size}
 addUserKnob {41 filter T DisplaceGeo.filter}
 addUserKnob {26 spacer_2 l "" +STARTLINE T <br>}
 addUserKnob {26 title_drange l "" +STARTLINE T "distance range"}
 addUserKnob {7 drange_near l near t "clip the mesh in the min value in terms of depth." R 0 10000}
 addUserKnob {7 drange_far l far t "clip the mesh in the max value in terms of depth." R 0 10000}
 drange_far 30
 addUserKnob {6 clip_color l "distance clip on color" t "Apply the distance clip on colored texture." +STARTLINE}
 clip_color true
 addUserKnob {26 spacer_3 l "" +STARTLINE T <br>}
 addUserKnob {26 title_export l <b>EXPORT</b>}
 addUserKnob {41 file t "only support *.abc file extension (alembric) ." T WriteGeo.file}
 addUserKnob {22 export_geo l "Export Geo" T "def exportGeo() :\n\twgeo = nuke.toNode('WriteGeo')\n\twgeo\['Execute'].execute()\n\nthisGRP = nuke.thisGroup()\nfilepath = thisGRP\['file'].getValue()\n\nif not len(filepath) :\n\tnuke.message('file path is empty. Process denied.')\nelif not filepath.split('.')\[-1:]\[0].lower() == 'abc' :\n\tif nuke.ask('File extension invalue. Only support render <font color=orange>*.abc</font> . Do you want this tool to fix it and process ?') :\n\t\tthisGRP\['file'].setValue( thisGRP\['file'].getValue() + '.abc' )\n\t\texportGeo()\nelse :\n\texportGeo()" +STARTLINE}
 addUserKnob {22 import_geo l "Import Geo" -STARTLINE T "prefx = nuke.toNode('preferences')\['GridWidth'].value()\nthisGRP = nuke.thisGroup()\ngoStore = nuke.toNode('store')\ngoStore\['fn'].execute()\n\nroot = getLevel()\n\nwith root :\n\trgeo = nuke.nodes.ReadGeo2( file=thisGRP\['file'].getValue() )\n\trgeo.setXYpos( int( thisGRP\['xpos'].getValue() + prefx ) , int( thisGRP\['ypos'].getValue() ) )"}
 addUserKnob {20 tab_misc l Miscellaneous}
 addUserKnob {26 title_focus_region l "<b>FOCUS REGION</b>"}
 addUserKnob {41 use_focus_region l "use focus region" t "use focus region to generate SSMesh in specific area. Save resources and possible to work with high LOD mesh." T menu2.use_focus_region}
 addUserKnob {15 focus_region l "focus region" t "Set focus region in screen space. These values are 2D coordinate." +DISABLED}
 focus_region {0 0 1280 720}
 addUserKnob {26 spacer_1 l "" +STARTLINE T <br>}
 addUserKnob {3 fregion_ref_frame l "ref frame" t "set reference frame for tracking focus region. 'focus region' & 'define z' will apply on this reference frame and process the tracking." +DISABLED}
 fregion_ref_frame 1
 addUserKnob {22 fregion_set_frame l "set current frame" t "set current frame for focus region reference frame." -STARTLINE +DISABLED T "nuke.thisGroup()\['fregion_ref_frame'].setValue( nuke.frame() )"}
 addUserKnob {12 sample_point l "sample position" t "Toggle 'sample z' in 2D to enable this 2D sample coordinate." +DISABLED}
 addUserKnob {22 sample_z_toggle l "sample z in 2D" t "'sample z' is only works for sample value purpose. After sample is done, must turn off sample function." -STARTLINE +DISABLED T "thisGRP = nuke.thisGroup()\nszstatus = thisGRP\['sample_z_status'].value()\n\nstatus = \['<font color=red>\[ OFF ]</font>','<font color=cyan>\[ ON ]</font>']\n\nif szstatus == status\[0] :\n\tthisGRP\['sample_z_status'].setValue( status\[1] )\n\tthisGRP\['sample_point'].setEnabled(True)\n\tthisGRP\['updateUI'].setValue(\"goStore = nuke.toNode(\\'store\\')\\ngoStore\[\\'fn\\'].execute()\\nsample2d()\")\nelse :\n\tthisGRP\['sample_z_status'].setValue( status\[0] )\n\tthisGRP\['sample_point'].setEnabled(False)\n\tthisGRP\['updateUI'].setValue('')"}
 addUserKnob {26 sample_z_status l "" -STARTLINE +DISABLED T "<font color=red>\[ OFF ]</font>"}
 addUserKnob {7 fregion_define_z l "define z" t "Define the z value on reference frame. Can use 'sample z in 2D' to get this value." +DISABLED R 0 10000}
 addUserKnob {22 track_focus_region l "<b>\[ track focus region ]</b>" t "Use the set focus region on reference frame to track with camera in 3D space.\n\n* project setting need to be same as image resolution to get the correct result." +DISABLED T "rootST = int( nuke.root()\['first_frame'].getValue() )\nrootED = int( nuke.root()\['last_frame'].getValue() )\n\ngetFrame = nuke.getFramesAndViews( 'frame range', str( rootST ) + '-' + str( rootED ) )\n\ntry :\n\tframeST = int( getFrame\[0].replace( ' ' , '' ).split('-')\[0] )\n\tframeED = int( getFrame\[0].replace( ' ' , '' ).split('-')\[1] )\n\n\tthisGRP = nuke.thisGroup()\n\trefframe = int( thisGRP\['fregion_ref_frame'].getValue() )\n\tcam = nuke.toNode('cam_data')\n\tpt1 = nuke.toNode('left_pt')\['translate'].getValue()\n\tpt2 = nuke.toNode('right_pt')\['translate'].getValue()\n\n\tct_hack = nuke.nodes.CurveTool()\n\n\twith nuke.root() :\n\n\t\tif frameED - frameST != 0 :\n\t\t\tthisGRP\['focus_region'].clearAnimated()\n\t\t\ttempbuffer1 = thisGRP\['focus_region'].getValue()\n\t\t\tthisGRP\['focus_region'].setAnimated()\n\t\t\tthisGRP\['focus_region'].setValueAt( tempbuffer1\[0] , refframe , 0 )\n\t\t\tthisGRP\['focus_region'].setValueAt( tempbuffer1\[1] , refframe , 1 )\n\t\t\tthisGRP\['focus_region'].setValueAt( tempbuffer1\[2] , refframe , 2 )\n\t\t\tthisGRP\['focus_region'].setValueAt( tempbuffer1\[3] , refframe , 3 )\n\n\t\tfor trackframe in xrange( frameST, frameED+1 , 1 ) :\n\t\t\tnuke.execute( ct_hack, trackframe, trackframe )\n\t\t\tthisGRP\['focus_region'].setValueAt( nukescripts.snap3d.projectPoint( cam, pt1 )\[0] , trackframe , 0 )\n\t\t\tthisGRP\['focus_region'].setValueAt( nukescripts.snap3d.projectPoint( cam, pt1 )\[1] , trackframe , 1 )\n\t\t\tthisGRP\['focus_region'].setValueAt( nukescripts.snap3d.projectPoint( cam, pt2 )\[0] , trackframe , 2 )\n\t\t\tthisGRP\['focus_region'].setValueAt( nukescripts.snap3d.projectPoint( cam, pt2 )\[1] , trackframe , 3 )\n\n\tnuke.delete( ct_hack )\nexcept :\n    pass" +STARTLINE}
 addUserKnob {26 spacer_6 l "" +STARTLINE T <br>}
 addUserKnob {20 grp_crop_preview l "3D crop preview" +DISABLED n 1}
 grp_crop_preview 0
 addUserKnob {6 show_crop l "show crop point" t "It will show 2 spheres for the crop in 3D space. They set in the place which is where you set the focus region in screen space and defined by z." +DISABLED +STARTLINE}
 addUserKnob {7 crop_point_scale l scale t "Scale the preview crop points (spheres)." +DISABLED}
 crop_point_scale 0.3
 addUserKnob {18 crop_point_color l color t "change color of the crop points (spheres)." +DISABLED}
 crop_point_color 1
 addUserKnob {6 crop_point_color_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 crop_point_color_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 crop_point_color_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 crop_point_color_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 crop_point_color_panelDropped_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 crop_point_color_panelDropped_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 crop_point_color_panelDropped_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 crop_point_color_panelDropped_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 crop_point_color_panelDropped_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 crop_point_color_panelDropped_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {20 endGroup n -1}
 addUserKnob {26 spacer l "" +STARTLINE T <br>}
 addUserKnob {26 title_uv l <b>UV</b>}
 addUserKnob {41 uv_stabilize l "uv stabilize" t "Turn this on if you need to stabilize in UV space. During UV stabilize on, the geo will not be animated. Set reference frame under 'mesh ref frame'." T menu1.uv_stabilize}
 addUserKnob {3 uv_ref_frame l "mesh ref frame" t "Select the frame number that will have identity geo shaped for UV texturing." +DISABLED}
 uv_ref_frame 1001
 addUserKnob {22 uv_set_frame l "set current frame" -STARTLINE +DISABLED T "nuke.thisGroup()\['uv_ref_frame'].setValue( nuke.frame() )"}
 addUserKnob {6 black_outside l "black outside" t "black outside the UV texture." +DISABLED +STARTLINE}
 black_outside true
 addUserKnob {20 t_VERSION l Version}
 addUserKnob {26 l_VERSION l Version T 1.3}
 addUserKnob {26 l_DATE l "Date Modified" T 2019-11-08}
 addUserKnob {26 l_CHANGELOG l Changelog T "1.3\n- camera window supported\n- anamophic project supported\n- fix the conflict of 'force region' and 'UV stabilize'.\n  can use both at the same time now.\n\n1.2\n- removed unuse camera link knobs\n- added focus region, so mesh can be\n  form in specific area/object to save\n  resources for higher LOD\n\n1.1\n- fix the missing line on 'Export Geo' \n  button\n\n1.0\n- create mesh/geo in screen space\n  using position/depth/deep data"}
 addUserKnob {26 l_DEV l "Developed by" T "<a href=\"https://facebook.com/MJTLab\"><font color=orange>Mark Joey Tang</font></a>"}
}
 BackdropNode {
  inputs 0
  name BackdropNode1
  tile_color 0xff
  label "don't touch"
  note_font_size 32
  xpos -1142
  ypos -169
  bdwidth 202
  bdheight 478
 }
 BackdropNode {
  inputs 0
  name BackdropNode2
  tile_color 0x4c4c4cff
  label bin
  note_font_size 32
  xpos -899
  ypos -170
  bdwidth 200
  bdheight 280
 }
 Input {
  inputs 0
  name img
  xpos -100
  ypos -184
 }
 Dot {
  name img_dot
  xpos -66
  ypos -83
 }
set N4a7cfcf0 [stack 0]
 Dot {
  name Dot3
  xpos 758
  ypos -83
 }
set N4a7d21b0 [stack 0]
 Shuffle {
  in pcam
  in2 alpha
  alpha red2
  name shuffle_data
  label "\[value in]"
  xpos 724
  ypos -32
 }
 Unpremult {
  name Unpremult_data
  xpos 724
  ypos 62
  disable {{!parent.unpm}}
 }
 Dot {
  name Dot5
  xpos 758
  ypos 700
 }
set N5a4b8090 [stack 0]
 Dot {
  name Dot6
  xpos 928
  ypos 700
 }
set N5a476310 [stack 0]
 Dot {
  name Dot7
  xpos 1106
  ypos 700
 }
set N4a7e0940 [stack 0]
 Dot {
  name Dot8
  xpos 1260
  ypos 700
 }
 Expression {
  temp_name0 dvalue
  temp_expr0 red
  temp_name1 xpos
  temp_expr1 "( ( x + 0.5 ) / input.width - 0.5 ) * \[value global_math.hratio] * abs( dvalue )"
  temp_name2 ypos
  temp_expr2 "( ( y + 0.5 ) / input.height - 0.5 ) * ( \[value global_math.hratio] * abs( dvalue ) * ( img_dot.height / img_dot.width ) ) * 1 / \[value format.pixel_aspect]"
  temp_name3 zpos
  temp_expr3 "- dvalue"
  expr0 "( xpos * \[value fb_data.world_matrix.0] + ypos * \[value fb_data.world_matrix.1] ) * \[value fb_data.win_scale.u] + ( \[value global_math.hratio] * abs(zpos) * \[value fb_data.win_translate.u] / 2 )"
  expr1 "( xpos * \[value fb_data.world_matrix.4] + ypos * \[value fb_data.world_matrix.5] ) * \[value fb_data.win_scale.v] + ( \[value global_math.hratio] * abs(zpos) * \[value fb_data.win_translate.v] / 2 )"
  expr2 zpos
  name Expression9
  xpos 1226
  ypos 774
 }
 Dot {
  name Dot16
  xpos 1260
  ypos 889
 }
push $N4a7e0940
 Expression {
  temp_name0 dvalue
  temp_expr0 "1 / red"
  temp_name1 xpos
  temp_expr1 "( ( x + 0.5 ) / input.width - 0.5 ) * \[value global_math.hratio] * abs( dvalue )"
  temp_name2 ypos
  temp_expr2 "( ( y + 0.5 ) / input.height - 0.5 ) * ( \[value global_math.hratio] * abs( dvalue ) * ( img_dot.height / img_dot.width ) ) * 1 / \[value format.pixel_aspect]"
  temp_name3 zpos
  temp_expr3 "- dvalue"
  expr0 "( xpos * \[value fb_data.world_matrix.0] + ypos * \[value fb_data.world_matrix.1] ) * \[value fb_data.win_scale.u] + ( \[value global_math.hratio] * abs(zpos) * \[value fb_data.win_translate.u] / 2 )"
  expr1 "( xpos * \[value fb_data.world_matrix.4] + ypos * \[value fb_data.world_matrix.5] ) * \[value fb_data.win_scale.v] + ( \[value global_math.hratio] * abs(zpos) * \[value fb_data.win_translate.v] / 2 )"
  expr2 zpos
  name Expression6
  xpos 1072
  ypos 774
 }
 Dot {
  name Dot17
  xpos 1106
  ypos 863
 }
push $N5a476310
 Expression {
  expr2 -blue
  name Expression7
  label "fix z"
  xpos 894
  ypos 774
 }
 Dot {
  name Dot18
  xpos 928
  ypos 876
 }
push $N5a4b8090
 Expression {
  temp_name0 nx
  temp_expr0 "red - cam_data.world_matrix.3"
  temp_name1 ny
  temp_expr1 "green - cam_data.world_matrix.7"
  temp_name2 nz
  temp_expr2 "blue - cam_data.world_matrix.11"
  expr0 "nx * \[value inverseMatrix.invMatrix.0] + ny * \[value inverseMatrix.invMatrix.1] + nz * \[value inverseMatrix.invMatrix.2]"
  expr1 "nx * \[value inverseMatrix.invMatrix.3] + ny * \[value inverseMatrix.invMatrix.4] + nz * \[value inverseMatrix.invMatrix.5]"
  expr2 "nx * \[value inverseMatrix.invMatrix.6] + ny * \[value inverseMatrix.invMatrix.7] + nz * \[value inverseMatrix.invMatrix.8]"
  name Expression3
  label "position invert"
  xpos 724
  ypos 774
 }
 Switch {
  inputs 4
  which {{parent.data_type}}
  name Switch1
  xpos 724
  ypos 984
 }
 Dot {
  name Dot13
  xpos 758
  ypos 1113
 }
set N4a42c6c0 [stack 0]
 Dot {
  name sam_dot
  xpos 551
  ypos 1113
 }
 NoOp {
  inputs 0
  name menu1
  knobChanged "\nthisGRP = nuke.thisGroup()\nif thisGRP\['uv_stabilize'].getValue() == 1 :\n    thisGRP\['uv_ref_frame'].setEnabled(True)\n    thisGRP\['uv_set_frame'].setEnabled(True)\n    thisGRP\['black_outside'].setEnabled(True)\nelse :\n    thisGRP\['uv_ref_frame'].setEnabled(False)\n    thisGRP\['uv_set_frame'].setEnabled(False)\n    thisGRP\['black_outside'].setEnabled(False)\n"
  xpos -1085
  ypos -42
  addUserKnob {20 User}
  addUserKnob {6 uv_stabilize l "uv stabilize" +STARTLINE}
 }
 NoOp {
  inputs 0
  name menu2
  onCreate "\nthisGRP = nuke.thisGroup()\nfregion_knobs = \['focus_region','fregion_define_z','sample_z_toggle','sample_z_status','sample_point','fregion_ref_frame','fregion_set_frame','track_focus_region','grp_crop_preview','show_crop','crop_point_scale','crop_point_color']\n\nthisGRP\[fregion_knobs\[4]].setEnabled(True)\n\nif thisGRP\['use_focus_region'].getValue()  == 0 :\n    for i in fregion_knobs :\n        thisGRP\[i].setEnabled(False)\n    thisGRP\[fregion_knobs\[3]].setValue( '<font color=red>\[ OFF ]</font>' )\n    thisGRP\['updateUI'].setValue('')\n    nuke.toNode('material_switch')\['disable'].setValue(0)\nelse :\n    for i in fregion_knobs :\n        if i != 'sample_point' :\n            thisGRP\[i].setEnabled(True)\n        else :\n            thisGRP\[i].setEnabled(False)\n    nuke.toNode('material_switch')\['disable'].setValue(1)\n"
  knobChanged "\nthisGRP = nuke.thisGroup()\nfregion_knobs = \['focus_region','fregion_define_z','sample_z_toggle','sample_z_status','sample_point','fregion_ref_frame','fregion_set_frame','track_focus_region','grp_crop_preview','show_crop','crop_point_scale','crop_point_color']\n\nif thisGRP\['use_focus_region'].getValue()  == 0 :\n    for i in fregion_knobs :\n        thisGRP\[i].setEnabled(False)\n    thisGRP\[fregion_knobs\[3]].setValue( '<font color=red>\[ OFF ]</font>' )\n    thisGRP\['updateUI'].setValue('')\n    nuke.toNode('material_switch')\['disable'].setValue(0)\nelse :\n    for i in fregion_knobs :\n        if i != 'sample_point' :\n            thisGRP\[i].setEnabled(True)\n    nuke.toNode('material_switch')\['disable'].setValue(1)\n"
  xpos -1085
  ypos 25
  addUserKnob {20 User}
  addUserKnob {6 use_focus_region l "use focus region" +STARTLINE}
 }
 Camera {
  inputs 0
  display off
  selectable false
  useMatrix true
  matrix {
      {{Camera1.world_matrix} {Camera1.world_matrix} {Camera1.world_matrix} {Camera1.world_matrix}}
      {{Camera1.world_matrix} {Camera1.world_matrix} {Camera1.world_matrix} {Camera1.world_matrix}}
      {{Camera1.world_matrix} {Camera1.world_matrix} {Camera1.world_matrix} {Camera1.world_matrix}}
      {{Camera1.world_matrix} {Camera1.world_matrix} {Camera1.world_matrix} {Camera1.world_matrix}}
    }
  focal {{parent.cam_focal}}
  haperture {{cam_haperture}}
  name cam_data
  xpos -335
  ypos 2204
 }
push $N4a42c6c0
 Expression {
  temp_name0 unpremultA
  temp_expr0 "alpha * ( 1 / alpha )"
  temp_name1 max
  temp_expr1 blue
  expr3 "abs( max ) < \[value parent.drange_near] || abs( max ) > \[value parent.drange_far] ? 0 : isnan(unpremultA) ? 0 : unpremultA"
  name Expression1
  label "distance crop"
  xpos 724
  ypos 1244
 }
 Premult {
  name Premult1
  xpos 724
  ypos 1332
 }
 Dot {
  name Dot9
  xpos 758
  ypos 1640
 }
set N502bb410 [stack 0]
push $N4a7cfcf0
 Dot {
  name Dot10
  xpos -66
  ypos 1552
 }
set N501416a0 [stack 0]
 Unpremult {
  name Unpremult1
  xpos 48
  ypos 1549
 }
 Merge2 {
  inputs 2
  operation mask
  name Merge2
  xpos 48
  ypos 1637
 }
 Premult {
  name Premult3
  xpos 48
  ypos 1719
 }
push $N501416a0
 Switch {
  inputs 2
  which {{parent.clip_color}}
  name Switch2
  xpos -100
  ypos 1828
 }
 Project3D2 {
  inputs 2
  crop {{parent.black_outside}}
  name Project3D2
  xpos -100
  ypos 2224
 }
push $N4a7d21b0
 Dot {
  name Dot2
  xpos 1576
  ypos -84
 }
 Shuffle {
  red black
  green black
  blue black
  alpha black
  name Shuffle1
  label "\[value in]"
  xpos 1542
  ypos 30
 }
 Remove {
  name Remove1
  xpos 1542
  ypos 118
 }
 Reformat {
  type scale
  black_outside true
  name Reformat1
  xpos 1542
  ypos 212
 }
 Expression {
  temp_name0 xpos
  temp_expr0 "( ( x + 0.5 ) / input.width - 0.5) *  \[value global_math.hratio] * abs( \[value parent.drange_far] )"
  temp_name1 ypos
  temp_expr1 "( ( y + 0.5 ) / input.height -0.5 ) * ( \[value global_math.hratio] * abs( \[value parent.drange_far] ) * ( img_dot.height / img_dot.width ) ) * 1 / \[value format.pixel_aspect]"
  temp_name2 zpos
  temp_expr2 "-\[value parent.drange_far]"
  expr0 "( xpos * \[value fb_data.world_matrix.0] + ypos * \[value fb_data.world_matrix.1] ) * \[value fb_data.win_scale.u] + ( \[value global_math.hratio] * abs(zpos) * \[value fb_data.win_translate.u] / 2 )"
  expr1 "( xpos * \[value fb_data.world_matrix.4] + ypos * \[value fb_data.world_matrix.5] ) * \[value fb_data.win_scale.v] + ( \[value global_math.hratio] * abs(zpos) * \[value fb_data.win_translate.v] / 2 )"
  expr2 zpos
  name Expression8
  xpos 1542
  ypos 845
 }
 ColorMatrix {
  matrix {
      {{cam_data.world_matrix.0} {cam_data.world_matrix.1} {cam_data.world_matrix.2}}
      {{cam_data.world_matrix.4} {cam_data.world_matrix.5} {cam_data.world_matrix.6}}
      {{cam_data.world_matrix.8} {cam_data.world_matrix.9} {cam_data.world_matrix.10}}
    }
  name ColorMatrix1
  xpos 1542
  ypos 970
 }
 Add {
  channels rgb
  value {{cam_data.world_matrix.3} {cam_data.world_matrix.7} {cam_data.world_matrix.11} 0}
  name Add1
  xpos 1542
  ypos 1052
 }
 Crop {
  box {{store.fregion} {store.fregion} {store.fregion} {store.fregion}}
  reformat true
  crop false
  name Crop1
  xpos 1542
  ypos 1476
  disable {{!parent.use_focus_region}}
 }
 Dot {
  name Dot4
  xpos 1576
  ypos 2402
 }
push $N502bb410
 Crop {
  box {{store.fregion} {store.fregion} {store.fregion} {store.fregion}}
  reformat true
  crop false
  name Crop4
  selected true
  xpos 724
  ypos 1714
  disable {{!parent.use_focus_region}}
 }
 Unpremult {
  name Unpremult3
  xpos 724
  ypos 1851
 }
 Expression {
  temp_name0 nx
  temp_expr0 red
  temp_name1 ny
  temp_expr1 green
  temp_name2 nz
  temp_expr2 blue
  expr0 "( nx * \[value cam_data.world_matrix.0] + ny * \[value cam_data.world_matrix.1] + nz * \[value cam_data.world_matrix.2] ) + \[value cam_data.world_matrix.3]"
  expr1 "( nx * \[value cam_data.world_matrix.4] + ny * \[value cam_data.world_matrix.5] + nz * \[value cam_data.world_matrix.6] ) + \[value cam_data.world_matrix.7]"
  expr2 "( nx * \[value cam_data.world_matrix.8] + ny * \[value cam_data.world_matrix.9] + nz * \[value cam_data.world_matrix.10] ) + \[value cam_data.world_matrix.11]"
  name Expression4
  label "position revert"
  xpos 724
  ypos 1933
 }
 Premult {
  name Premult2
  xpos 724
  ypos 2027
 }
 Merge2 {
  inputs 2
  operation under
  name Merge1
  xpos 724
  ypos 2398
 }
 Card {
  inputs 0
  image_aspect false
  rows {{"img_dot.height * parent.lod"}}
  columns {{"img_dot.width * parent.lod"}}
  name ssmesh
  xpos 343
  ypos 2317
 }
 DisplaceGeo {
  inputs 2
  source "rgb absolute"
  scale 1
  filter_size 1
  name DisplaceGeo
  xpos 343
  ypos 2399
 }
 FrameHold {
  first_frame {{parent.uv_ref_frame}}
  name FrameHold
  xpos 343
  ypos 2479
  disable {{!parent.uv_stabilize}}
 }
 ApplyMaterial {
  inputs 2
  name ApplyMaterial1
  xpos -100
  ypos 2483
 }
 Scene {
  display {{parent.display}}
  name gl_scene
  xpos -90
  ypos 3072
 }
set N3a504b70 [stack 0]
 WriteGeo {
  file_type abc
  name WriteGeo
  xpos 120
  ypos 3093
 }
 Axis {
  inputs 0
  display off
  selectable false
  translate {{"( global_math.pt2.x * cam_data.world_matrix.0(parent.fregion_ref_frame) + global_math.pt2.y * cam_data.world_matrix.1(parent.fregion_ref_frame) + global_math.pt2.z * cam_data.world_matrix.2(parent.fregion_ref_frame) ) + cam_data.world_matrix.3(parent.fregion_ref_frame)"} {"( global_math.pt2.x * cam_data.world_matrix.4(parent.fregion_ref_frame) + global_math.pt2.y * cam_data.world_matrix.5(parent.fregion_ref_frame) + global_math.pt2.z * cam_data.world_matrix.6(parent.fregion_ref_frame) ) + cam_data.world_matrix.7(parent.fregion_ref_frame)"} {"( global_math.pt2.x * cam_data.world_matrix.8(parent.fregion_ref_frame) + global_math.pt2.y * cam_data.world_matrix.9(parent.fregion_ref_frame) + global_math.pt2.z * cam_data.world_matrix.10(parent.fregion_ref_frame) ) + cam_data.world_matrix.11(parent.fregion_ref_frame)"}}
  name right_pt
  xpos -600
  ypos 3218
 }
 CheckerBoard2 {
  inputs 0
  format "256 256 0 0 256 256 1 square_256"
  name CheckerBoard1
  xpos -789
  ypos 2694
 }
 Multiply {
  channels rgb
  value {{parent.crop_point_color.r} {parent.crop_point_color.g} {parent.crop_point_color.b} 1}
  name Multiply
  xpos -789
  ypos 2822
 }
 Clamp {
  channels rgba
  name Clamp1
  xpos -789
  ypos 2905
 }
 Sphere {
  selectable false
  cast_shadow false
  receive_shadow false
  rows 10
  columns 10
  uniform_scale {{parent.crop_point_scale}}
  name Sphere1
  xpos -789
  ypos 2987
  disable {{!show_crop}}
 }
 Dot {
  name Dot24
  xpos -755
  ypos 3065
 }
set N3a52e0e0 [stack 0]
 Dot {
  name Dot25
  xpos -456
  ypos 3065
 }
 TransformGeo {
  inputs 2
  selectable false
  name TransformGeo2
  xpos -490
  ypos 3238
 }
 Axis {
  inputs 0
  display off
  selectable false
  translate {{"( global_math.pt1.x * cam_data.world_matrix.0(parent.fregion_ref_frame) + global_math.pt1.y * cam_data.world_matrix.1(parent.fregion_ref_frame) + global_math.pt1.z * cam_data.world_matrix.2(parent.fregion_ref_frame) ) + cam_data.world_matrix.3(parent.fregion_ref_frame)"} {"( global_math.pt1.x * cam_data.world_matrix.4(parent.fregion_ref_frame) + global_math.pt1.y * cam_data.world_matrix.5(parent.fregion_ref_frame) + global_math.pt1.z * cam_data.world_matrix.6(parent.fregion_ref_frame) ) + cam_data.world_matrix.7(parent.fregion_ref_frame)"} {"( global_math.pt1.x * cam_data.world_matrix.8(parent.fregion_ref_frame) + global_math.pt1.y * cam_data.world_matrix.9(parent.fregion_ref_frame) + global_math.pt1.z * cam_data.world_matrix.10(parent.fregion_ref_frame) ) + cam_data.world_matrix.11(parent.fregion_ref_frame)"}}
  name left_pt
  xpos -899
  ypos 3220
 }
push $N3a52e0e0
 TransformGeo {
  inputs 2
  selectable false
  name TransformGeo1
  xpos -789
  ypos 3240
 }
 Scene {
  inputs 2
  selectable false
  name Scene1
  xpos -480
  ypos 3395
 }
 ApplyMaterial {
  display off
  selectable false
  render_mode off
  name material_switch
  xpos -490
  ypos 3523
 }
push $N3a504b70
 Scene {
  inputs 2
  name Scene2
  xpos -90
  ypos 3502
 }
 Output {
  name Output1
  xpos -100
  ypos 4030
 }
 Group {
  inputs 0
  name inverseMatrix
  tile_color 0x337f4cff
  xpos 576
  ypos 780
  addUserKnob {20 tab_general l General}
  addUserKnob {1 knob_path}
  knob_path cam_data.world_matrix
  addUserKnob {26 ""}
  addUserKnob {41 id T id_assign.matrix}
  addUserKnob {26 ""}
  addUserKnob {7 determinant}
  determinant {{"\[value \[value knob_path].\[value id.0]] * ((\[value \[value knob_path].\[value id.4]]*\[value \[value knob_path].\[value id.8]]) - (\[value \[value knob_path].\[value id.5]]*\[value \[value knob_path].\[value id.7]])) - \[value \[value knob_path].\[value id.1]] * ((\[value \[value knob_path].\[value id.3]]*\[value \[value knob_path].\[value id.8]]) - (\[value \[value knob_path].\[value id.5]]*\[value \[value knob_path].\[value id.6]])) + \[value \[value knob_path].\[value id.2]] * ((\[value \[value knob_path].\[value id.3]]*\[value \[value knob_path].\[value id.7]])-(\[value \[value knob_path].\[value id.4]]*\[value \[value knob_path].\[value id.6]]))"}}
  addUserKnob {26 ""}
  addUserKnob {41 cofactor T mtx_cofactor.matrix}
  addUserKnob {26 ""}
  addUserKnob {41 invMatrix T matrix_output.matrix}
  addUserKnob {20 t_VERSION l Version}
  addUserKnob {26 l_VERSION l Version T 1.0}
  addUserKnob {26 l_DATE l "Date Modified" T 2011-11-28}
  addUserKnob {26 l_CHANGELOG l Changelog T "v1.0\n- reveal the calculate output of \n  inverse matrix which is c44matrix\n  and colormatrix doesn't show\n  "}
  addUserKnob {26 l_DEV l "Developed by" T "Mark Joey Tang"}
 }
  Matrix {
   inputs 0
   matrix {
       {0 1 2}
       {4 5 6}
       {8 9 10}
     }
   name id_assign
   xpos -12
   ypos 33
  }
  Matrix {
   inputs 0
   matrix {
       {{"(\[value \[value knob_path].\[value id.4]]*\[value \[value knob_path].\[value id.8]]) - (\[value \[value knob_path].\[value id.5]]*\[value \[value knob_path].\[value id.7]])"} {"(\[value \[value knob_path].\[value id.7]]*\[value \[value knob_path].\[value id.2]]) - (\[value \[value knob_path].\[value id.8]]*\[value \[value knob_path].\[value id.1]])"} {"(\[value \[value knob_path].\[value id.1]]*\[value \[value knob_path].\[value id.5]]) - (\[value \[value knob_path].\[value id.2]]*\[value \[value knob_path].\[value id.4]])"}}
       {{"(\[value \[value knob_path].\[value id.5]]*\[value \[value knob_path].\[value id.6]]) - (\[value \[value knob_path].\[value id.3]]*\[value \[value knob_path].\[value id.8]])"} {"(\[value \[value knob_path].\[value id.8]]*\[value \[value knob_path].\[value id.0]]) - (\[value \[value knob_path].\[value id.6]]*\[value \[value knob_path].\[value id.2]])"} {"(\[value \[value knob_path].\[value id.2]]*\[value \[value knob_path].\[value id.3]]) - (\[value \[value knob_path].\[value id.0]]*\[value \[value knob_path].\[value id.5]])"}}
       {{"(\[value \[value knob_path].\[value id.3]]*\[value \[value knob_path].\[value id.7]]) - (\[value \[value knob_path].\[value id.4]]*\[value \[value knob_path].\[value id.6]])"} {"(\[value \[value knob_path].\[value id.6]]*\[value \[value knob_path].\[value id.1]]) - (\[value \[value knob_path].\[value id.7]]*\[value \[value knob_path].\[value id.0]])"} {"(\[value \[value knob_path].\[value id.0]]*\[value \[value knob_path].\[value id.4]]) - (\[value \[value knob_path].\[value id.1]]*\[value \[value knob_path].\[value id.3]])"}}
     }
   name mtx_cofactor
   xpos 86
   ypos 32
  }
  Matrix {
   inputs 0
   matrix {
       {{"cofactor.0 == 0 || determinant == 0 ? 0 : cofactor.0/determinant"} {"cofactor.1 == 0 || determinant == 0 ? 0 : cofactor.1/determinant"} {"cofactor.2 == 0 || determinant == 0 ? 0 : cofactor.2/determinant"}}
       {{"cofactor.3 == 0 || determinant == 0 ? 0 : cofactor.3/determinant"} {"cofactor.4 == 0 || determinant == 0 ? 0 : cofactor.4/determinant"} {"cofactor.5 == 0 || determinant == 0 ? 0 : cofactor.5/determinant"}}
       {{"cofactor.6 == 0 || determinant == 0 ? 0 : cofactor.6/determinant"} {"cofactor.7 == 0 || determinant == 0 ? 0 : cofactor.7/determinant"} {"cofactor.8 == 0 || determinant == 0 ? 0 : cofactor.8/determinant"}}
     }
   name matrix_output
   xpos 186
   ypos 33
  }
 end_group
 Camera {
  inputs 0
  rotate {0 0 {-parent.cam_winroll}}
  win_translate {{parent.cam_win_translate} {parent.cam_win_translate}}
  win_scale {{parent.cam_win_scale} {parent.cam_win_scale}}
  name fb_data
  xpos -340
  ypos 2087
 }
 NoOp {
  inputs 0
  name store
  xpos -843
  ypos 28
  addUserKnob {20 User}
  addUserKnob {22 fn T "### level define ###\n\ndef getLevel() :\n\tif len(nuke.thisNode().fullName().split('.')) == 1 :\n\t\tggLevel = nuke.root()\n\telse :\n\t\tnodePath = nuke.thisNode().fullName().split('.')\n\t\tnodePath.pop()\n\t\tggLevel = nuke.toNode('.'.join(nodePath))\n\treturn ggLevel\n\n### sample z in 2D ###\n\ndef sample2d() :\n\tthisGRP = nuke.thisGroup()\n\tif thisGRP\['sample_z_status'].value() == '<font color=cyan>\[ ON ]</font>' :\n\t\tsam_co = thisGRP\['sample_point'].getValue()\n\t\tzdata = nuke.toNode('sam_dot').sample('blue', sam_co\[0], sam_co\[1]) * -1\n\t\tthisGRP\['fregion_define_z'].setValue( zdata )" +STARTLINE}
  addUserKnob {15 fregion}
  fregion {{parent.focus_region} {parent.focus_region} {parent.focus_region} {parent.focus_region}}
 }
 NoOp {
  inputs 0
  name global_math
  xpos -842
  ypos -43
  addUserKnob {20 User}
  addUserKnob {7 hratio}
  hratio {{"cam_data.haperture / cam_data.focal"}}
  addUserKnob {7 maxwidth}
  maxwidth {{"hratio * parent.fregion_define_z"}}
  addUserKnob {7 maxheight}
  maxheight {{"hratio * parent.fregion_define_z * ( img_dot.height / img_dot.width )"}}
  addUserKnob {13 pt1}
  pt1 {{"( ( ( maxwidth * ( parent.focus_region.x(parent.fregion_ref_frame) / img_dot.width) ) - ( maxwidth / 2 ) ) * fb_data.world_matrix.0 + ( ( ( maxheight * ( parent.focus_region.y(parent.fregion_ref_frame) / img_dot.height ) ) - ( maxheight / 2 ) ) * 1 / \[value root.format.pixel_aspect] ) * fb_data.world_matrix.1 ) * fb_data.win_scale.u + ( hratio * abs(parent.fregion_define_z) * fb_data.win_translate.u /2 )"} {"( ( ( maxwidth * ( parent.focus_region.x(parent.fregion_ref_frame) / img_dot.width) ) - ( maxwidth / 2 ) ) * fb_data.world_matrix.4 + \n( ( ( maxheight * ( parent.focus_region.y(parent.fregion_ref_frame) / img_dot.height ) ) - ( maxheight / 2 ) ) * 1 / \[value root.format.pixel_aspect] ) * fb_data.world_matrix.5 ) * fb_data.win_scale.v + ( hratio * abs(parent.fregion_define_z) * fb_data.win_translate.v /2 )"} {-parent.fregion_define_z}}
  addUserKnob {13 pt2}
  pt2 {{"( ( ( maxwidth * ( parent.focus_region.r(parent.fregion_ref_frame) / img_dot.width) ) - ( maxwidth / 2 ) ) * fb_data.world_matrix.0 + ( ( ( maxheight * ( parent.focus_region.t(parent.fregion_ref_frame) / img_dot.height ) ) - ( maxheight / 2 ) ) * 1 / \[value root.format.pixel_aspect] ) * fb_data.world_matrix.1 ) * fb_data.win_scale.u + ( hratio * abs(parent.fregion_define_z) * fb_data.win_translate.u /2 )"} {"( ( ( maxwidth * ( parent.focus_region.r(parent.fregion_ref_frame) / img_dot.width) ) - ( maxwidth / 2 ) ) * fb_data.world_matrix.4 + ( ( ( maxheight * ( parent.focus_region.t(parent.fregion_ref_frame) / img_dot.height ) ) - ( maxheight / 2 ) ) * 1 / \[value root.format.pixel_aspect] ) * fb_data.world_matrix.5 ) * fb_data.win_scale.v + ( hratio * abs(parent.fregion_define_z) * fb_data.win_translate.v /2 )"} {-parent.fregion_define_z}}
 }
end_group
Camera2 {
 inputs 0
 translate {{curve x1 -23.73355293 x50 1.828465939 x100 10.79810143} {curve x1 6.752248287 x50 13.82691669 x100 25.23773003} {curve x1 -3.158116341 x50 5.475767136 x100 -12.79232216}}
 rotate {{curve x1 30.63627052 x50 14.22963619 x100 -23.22279344} {curve x1 -44.94124796 x50 19.70681696 x100 76.6501109} {curve x1 0 x50 27.42004885 x100 13.36756642}}
 focal 24
 name Camera1
 xpos -326
 ypos -217
}
Scene {
 inputs 2
 name Scene2
 xpos -147
 ypos -76
}
Dot {
 name Dot2
 xpos -123
 ypos 114
}
Group {
 inputs 0
 name render_with_zdepth_normalized
 xpos 512
 ypos -374
 postage_stamp true
}
 Camera2 {
  inputs 0
  translate {{curve x1 -23.73355293 x50 1.828465939 x100 10.79810143} {curve x1 6.752248287 x50 13.82691669 x100 25.23773003} {curve x1 -3.158116341 x50 5.475767136 x100 -12.79232216}}
  rotate {{curve x1 30.63627052 x50 14.22963619 x100 -23.22279344} {curve x1 -44.94124796 x50 19.70681696 x100 76.6501109} {curve x1 0 x50 27.42004885 x100 13.36756642}}
  focal 24
  name Camera1
  xpos 241
  ypos -567
 }
 Dot {
  name Dot2
  xpos 351
  ypos -543
 }
set N81a16c80 [stack 0]
 Dot {
  name Dot3
  xpos 351
  ypos -428
 }
push $N81a16c80
 CheckerBoard2 {
  inputs 0
  name CheckerBoard1
  xpos 406
  ypos -928
 }
 Dot {
  name Dot1
  xpos 440
  ypos -814
 }
set N81a1fb30 [stack 0]
 Dot {
  name Dot5
  xpos 553
  ypos -814
 }
set N81a21eb0 [stack 0]
 Dot {
  name Dot4
  xpos 693
  ypos -814
 }
 Multiply {
  channels rgb
  value {0 1 1 1}
  name Multiply3
  xpos 659
  ypos -756
 }
 Cube {
  rows 1
  columns 1
  separate_faces false
  translate {-7.849998951 18.14999962 -19.00000191}
  rotate {0 0 45.93192592}
  uniform_scale 7
  name Cube1
  xpos 659
  ypos -676
 }
push $N81a21eb0
 Multiply {
  channels rgb
  value {1 0 1 1}
  name Multiply2
  xpos 519
  ypos -750
 }
 Sphere {
  translate {-15.00000191 16.45000076 -17.79999924}
  scaling {3.183291435 1 2.618715286}
  uniform_scale 2
  name Sphere1
  xpos 519
  ypos -670
 }
push $N81a1fb30
 Multiply {
  channels rgb
  value {1 1 0 1}
  name Multiply1
  xpos 406
  ypos -754
 }
 Cylinder {
  rows 1
  close_top true
  close_bottom true
  translate {-3.149999619 19.64999962 -13.89999866}
  rotate {52.26493538 0 32.53306187}
  scaling {1 4.216488838 1}
  uniform_scale 2
  name Cylinder1
  xpos 406
  ypos -673
 }
 Scene {
  inputs 4
  name Scene1
  xpos 416
  ypos -567
 }
 Reformat {
  inputs 0
  type "to box"
  box_width 1280
  box_height 720
  box_fixed true
  name Reformat1
  xpos 530
  ypos -431
 }
 ScanlineRender {
  inputs 3
  conservative_shader_sampling false
  motion_vectors_type off
  MB_channel none
  name ScanlineRender1
  xpos 406
  ypos -431
 }
 Output {
  name Output1
  xpos 406
  ypos -296
 }
end_group
Group {
 name SSMesh2
 tile_color 0x5c9e83ff
 label "<font color=cyan>Geo Output</font>"
 xpos 512
 ypos -209
 addUserKnob {20 tab_general l General}
 addUserKnob {22 set_link l "link to selected camera" t "Click to link selected camera by expression. This tool will get the focal, haperture and world matrix from selected camera to generate" T "def getLevel() :\n\t### level define ###\n\tif len(nuke.thisNode().fullName().split('.')) == 1 :\n\t\t  ggLevel = nuke.root()\n\telse :\n\t\t  nodePath = nuke.thisNode().fullName().split('.')\n\t\t  nodePath.pop()\n\t\t  ggLevel = nuke.toNode('.'.join(nodePath))\n\treturn ggLevel\n\nroot = getLevel()\nthisGRP = nuke.thisGroup()\n\nmainKnobs = \['world_matrix','cam_focal','cam_haperture','cam_win_translate','cam_win_scale','cam_winroll']\ndefaultKnobs = \{\n\t\t\t'world matrix' : 'world_matrix',\n\t\t\t'focal length' : 'focal',\n\t\t\t'horiz aperture' : 'haperture',\n\t\t\t'window translate' : 'win_translate',\n\t\t\t'window scale' : 'win_scale',\n\t\t\t'window roll' : 'winroll'\n\t\t\t\}\nselNodeKnobs = \[]\nmissingKnob = \[]\n\ntry :\n\twith root :\n\t\tselNode = nuke.selectedNode()\n\n\tfor knob in selNode.knobs() :\n\t\tselNodeKnobs.append( knob )\n\n\tselNodeKnobs.sort()\n\n\tfor key,value in defaultKnobs.items() :\n\t\tif value not in selNodeKnobs :\n\t\t\tmissingKnob.append( key )\n\n\tif not len(missingKnob) :\n\t\twith root :\n\t\t\tCAMnode = selNode.name()\n\t\t\tthisGRP\[mainKnobs\[0]].setExpression('\{0\}.world_matrix'.format(CAMnode))\n\t\t\tthisGRP\[mainKnobs\[1]].setExpression('\{0\}.focal'.format(CAMnode))\n\t\t\tthisGRP\[mainKnobs\[2]].setExpression('\{0\}.haperture'.format(CAMnode))\n\t\t\tthisGRP\[mainKnobs\[3]].setExpression('\{0\}.win_translate'.format(CAMnode))\n\t\t\tthisGRP\[mainKnobs\[4]].setExpression('\{0\}.win_scale'.format(CAMnode))\n\t\t\tthisGRP\[mainKnobs\[5]].setExpression('\{0\}.winroll'.format(CAMnode))\n\telse :\n\t\tp = nuke.Panel('Select knobs :')\n\t\tp.addBooleanCheckBox( '<b>Unable to find the default knobs. Please use the pulldown menu below to define the knob manually.</b>' , False)\n\t\tfor rk in missingKnob :\n\t\t\tp.addEnumerationPulldown( rk, ' '.join( selNodeKnobs ) )\n\n\t\tif p.show() :\n\t\t\ttry :\n\t\t\t\tfor key,value in defaultKnobs.items() :\n\t\t\t\t\tif p.value( key ) != None :\n\t\t\t\t\t\tdefaultKnobs\[key] = p.value( key )\n\t\t\texcept :\n\t\t\t\tpass\n\n\t\t\twith root :\n\t\t\t\tCAMnode = selNode.name()\n\t\t\t\tthisGRP\[mainKnobs\[0]].setExpression('\{0\}.\{1\}'.format(CAMnode, defaultKnobs\['world matrix']))\n\t\t\t\tthisGRP\[mainKnobs\[1]].setExpression('\{0\}.\{1\}'.format(CAMnode, defaultKnobs\['focal length']))\n\t\t\t\tthisGRP\[mainKnobs\[2]].setExpression('\{0\}.\{1\}'.format(CAMnode, defaultKnobs\['horiz aperture']))\n\t\t\t\tthisGRP\[mainKnobs\[3]].setExpression('\{0\}.\{1\}'.format(CAMnode, defaultKnobs\['window translate']))\n\t\t\t\tthisGRP\[mainKnobs\[4]].setExpression('\{0\}.\{1\}'.format(CAMnode, defaultKnobs\['window scale']))\n\t\t\t\tthisGRP\[mainKnobs\[5]].setExpression('\{0\}.\{1\}'.format(CAMnode, defaultKnobs\['window roll']))\nexcept :\n\tnuke.message('no node selected.')" +STARTLINE}
 addUserKnob {22 remove_link l "remove linked expression" t "Remove the linked camera expression but won't reset any data." -STARTLINE T "thisGRP = nuke.thisGroup()\nmainKnobs = \['world_matrix','cam_focal','cam_haperture','cam_win_translate','cam_win_scale','cam_winroll']\n\nfor knob in thisGRP.knobs() :\n\tif mainKnobs.count(knob) != 0 :\n\t\t thisGRP\[knob].clearAnimated()"}
 addUserKnob {20 cam_data_grp l "CAMERA DATA" n 1}
 cam_data_grp 0
 addUserKnob {7 cam_focal l "focal length" R 5 100}
 cam_focal {{Camera3.focal}}
 addUserKnob {7 cam_haperture l "horiz aperture" R 0.1 50}
 cam_haperture {{Camera3.haperture}}
 addUserKnob {30 cam_win_translate l "window translate"}
 cam_win_translate {{Camera3.win_translate} {Camera3.win_translate}}
 addUserKnob {30 cam_win_scale l "window scale"}
 cam_win_scale {{Camera3.win_scale} {Camera3.win_scale}}
 addUserKnob {7 cam_winroll l "window roll" R -45 45}
 cam_winroll {{Camera3.winroll}}
 addUserKnob {41 world_matrix l "world matrix" T cam_data.matrix}
 addUserKnob {20 endGroup_1 l endGroup n -1}
 addUserKnob {26 spacer_5 l "" +STARTLINE T <br>}
 addUserKnob {26 title_basic l "<b>BASIC SETTING</b>"}
 addUserKnob {4 display l "3D display" t "How to draw in 3D preview. The viewer can override this setting." M {off wireframe soild solid+wireframe textured textured+wireframe "" "" ""}}
 display textured
 addUserKnob {4 data_type l "data type" t "data type\nUsing one of these data to convert into 3D mesh.\n\nPosition\nSupported world space or camera space position data.\n\nDepth (normalized far=0)\nNormalized depth data, which is same as depth data output by ScanlineRender.\n\nDeep / Depth (direct)\nRaw camera depth data. If using deep, need to convert DeepToImage first, and selected deep channel on 'channels' knob." M {"position (world space)" "position (camera space)" "depth (normalized far=0)" "deep / depth (direct)" "" "" ""}}
 data_type "depth (normalized far=0)"
 addUserKnob {41 channels t "Select which channel represented on selected data type." T shuffle_data.in}
 addUserKnob {6 unpm l unpremult t "3D data pass should be unpremult with alpha before process." -STARTLINE}
 unpm true
 addUserKnob {26 spacer_4 l "" +STARTLINE T <br>}
 addUserKnob {7 lod l "mesh LOD" t "Level of Details\n\nIf this value set to 1.0, subdivision of the mesh  1:1 to the data available in the resolution. Which mean 1 face of the mesh equal to 1 pixel.\n\nIf this value set to 1.0, it will slow down the render process.\n\nHighly recommend to use 0.1 - 0.5 if high resolution mesh details is not concern."}
 lod 0.1
 addUserKnob {41 filter_size l "filter size" T DisplaceGeo.filter_size}
 addUserKnob {41 filter T DisplaceGeo.filter}
 addUserKnob {26 spacer_2 l "" +STARTLINE T <br>}
 addUserKnob {26 title_drange l "" +STARTLINE T "distance range"}
 addUserKnob {7 drange_near l near t "clip the mesh in the min value in terms of depth." R 0 10000}
 addUserKnob {7 drange_far l far t "clip the mesh in the max value in terms of depth." R 0 10000}
 drange_far 30
 addUserKnob {6 clip_color l "distance clip on color" t "Apply the distance clip on colored texture." +STARTLINE}
 clip_color true
 addUserKnob {26 spacer_3 l "" +STARTLINE T <br>}
 addUserKnob {26 title_export l <b>EXPORT</b>}
 addUserKnob {41 file t "only support *.abc file extension (alembric) ." T WriteGeo.file}
 addUserKnob {22 export_geo l "Export Geo" T "def exportGeo() :\n\twgeo = nuke.toNode('WriteGeo')\n\twgeo\['Execute'].execute()\n\nthisGRP = nuke.thisGroup()\nfilepath = thisGRP\['file'].getValue()\n\nif not len(filepath) :\n\tnuke.message('file path is empty. Process denied.')\nelif not filepath.split('.')\[-1:]\[0].lower() == 'abc' :\n\tif nuke.ask('File extension invalue. Only support render <font color=orange>*.abc</font> . Do you want this tool to fix it and process ?') :\n\t\tthisGRP\['file'].setValue( thisGRP\['file'].getValue() + '.abc' )\n\t\texportGeo()\nelse :\n\texportGeo()" +STARTLINE}
 addUserKnob {22 import_geo l "Import Geo" -STARTLINE T "prefx = nuke.toNode('preferences')\['GridWidth'].value()\nthisGRP = nuke.thisGroup()\ngoStore = nuke.toNode('store')\ngoStore\['fn'].execute()\n\nroot = getLevel()\n\nwith root :\n\trgeo = nuke.nodes.ReadGeo2( file=thisGRP\['file'].getValue() )\n\trgeo.setXYpos( int( thisGRP\['xpos'].getValue() + prefx ) , int( thisGRP\['ypos'].getValue() ) )"}
 addUserKnob {20 tab_misc l Miscellaneous}
 addUserKnob {26 title_focus_region l "<b>FOCUS REGION</b>"}
 addUserKnob {41 use_focus_region l "use focus region" t "use focus region to generate SSMesh in specific area. Save resources and possible to work with high LOD mesh." T menu2.use_focus_region}
 addUserKnob {15 focus_region l "focus region" t "Set focus region in screen space. These values are 2D coordinate." +DISABLED}
 focus_region {0 0 1280 720}
 addUserKnob {26 spacer_1 l "" +STARTLINE T <br>}
 addUserKnob {3 fregion_ref_frame l "ref frame" t "set reference frame for tracking focus region. 'focus region' & 'define z' will apply on this reference frame and process the tracking." +DISABLED}
 fregion_ref_frame 1
 addUserKnob {22 fregion_set_frame l "set current frame" t "set current frame for focus region reference frame." -STARTLINE +DISABLED T "nuke.thisGroup()\['fregion_ref_frame'].setValue( nuke.frame() )"}
 addUserKnob {12 sample_point l "sample position" t "Toggle 'sample z' in 2D to enable this 2D sample coordinate." +DISABLED}
 addUserKnob {22 sample_z_toggle l "sample z in 2D" t "'sample z' is only works for sample value purpose. After sample is done, must turn off sample function." -STARTLINE +DISABLED T "thisGRP = nuke.thisGroup()\nszstatus = thisGRP\['sample_z_status'].value()\n\nstatus = \['<font color=red>\[ OFF ]</font>','<font color=cyan>\[ ON ]</font>']\n\nif szstatus == status\[0] :\n\tthisGRP\['sample_z_status'].setValue( status\[1] )\n\tthisGRP\['sample_point'].setEnabled(True)\n\tthisGRP\['updateUI'].setValue(\"goStore = nuke.toNode(\\'store\\')\\ngoStore\[\\'fn\\'].execute()\\nsample2d()\")\nelse :\n\tthisGRP\['sample_z_status'].setValue( status\[0] )\n\tthisGRP\['sample_point'].setEnabled(False)\n\tthisGRP\['updateUI'].setValue('')"}
 addUserKnob {26 sample_z_status l "" -STARTLINE +DISABLED T "<font color=red>\[ OFF ]</font>"}
 addUserKnob {7 fregion_define_z l "define z" t "Define the z value on reference frame. Can use 'sample z in 2D' to get this value." +DISABLED R 0 10000}
 addUserKnob {22 track_focus_region l "<b>\[ track focus region ]</b>" t "Use the set focus region on reference frame to track with camera in 3D space.\n\n* project setting need to be same as image resolution to get the correct result." +DISABLED T "rootST = int( nuke.root()\['first_frame'].getValue() )\nrootED = int( nuke.root()\['last_frame'].getValue() )\n\ngetFrame = nuke.getFramesAndViews( 'frame range', str( rootST ) + '-' + str( rootED ) )\n\ntry :\n\tframeST = int( getFrame\[0].replace( ' ' , '' ).split('-')\[0] )\n\tframeED = int( getFrame\[0].replace( ' ' , '' ).split('-')\[1] )\n\n\tthisGRP = nuke.thisGroup()\n\trefframe = int( thisGRP\['fregion_ref_frame'].getValue() )\n\tcam = nuke.toNode('cam_data')\n\tpt1 = nuke.toNode('left_pt')\['translate'].getValue()\n\tpt2 = nuke.toNode('right_pt')\['translate'].getValue()\n\n\tct_hack = nuke.nodes.CurveTool()\n\n\twith nuke.root() :\n\n\t\tif frameED - frameST != 0 :\n\t\t\tthisGRP\['focus_region'].clearAnimated()\n\t\t\ttempbuffer1 = thisGRP\['focus_region'].getValue()\n\t\t\tthisGRP\['focus_region'].setAnimated()\n\t\t\tthisGRP\['focus_region'].setValueAt( tempbuffer1\[0] , refframe , 0 )\n\t\t\tthisGRP\['focus_region'].setValueAt( tempbuffer1\[1] , refframe , 1 )\n\t\t\tthisGRP\['focus_region'].setValueAt( tempbuffer1\[2] , refframe , 2 )\n\t\t\tthisGRP\['focus_region'].setValueAt( tempbuffer1\[3] , refframe , 3 )\n\n\t\tfor trackframe in xrange( frameST, frameED+1 , 1 ) :\n\t\t\tnuke.execute( ct_hack, trackframe, trackframe )\n\t\t\tthisGRP\['focus_region'].setValueAt( nukescripts.snap3d.projectPoint( cam, pt1 )\[0] , trackframe , 0 )\n\t\t\tthisGRP\['focus_region'].setValueAt( nukescripts.snap3d.projectPoint( cam, pt1 )\[1] , trackframe , 1 )\n\t\t\tthisGRP\['focus_region'].setValueAt( nukescripts.snap3d.projectPoint( cam, pt2 )\[0] , trackframe , 2 )\n\t\t\tthisGRP\['focus_region'].setValueAt( nukescripts.snap3d.projectPoint( cam, pt2 )\[1] , trackframe , 3 )\n\n\tnuke.delete( ct_hack )\nexcept :\n    pass" +STARTLINE}
 addUserKnob {26 spacer_6 l "" +STARTLINE T <br>}
 addUserKnob {20 grp_crop_preview l "3D crop preview" +DISABLED n 1}
 grp_crop_preview 0
 addUserKnob {6 show_crop l "show crop point" t "It will show 2 spheres for the crop in 3D space. They set in the place which is where you set the focus region in screen space and defined by z." +DISABLED +STARTLINE}
 addUserKnob {7 crop_point_scale l scale t "Scale the preview crop points (spheres)." +DISABLED}
 crop_point_scale 0.3
 addUserKnob {18 crop_point_color l color t "change color of the crop points (spheres)." +DISABLED}
 crop_point_color 1
 addUserKnob {6 crop_point_color_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 crop_point_color_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 crop_point_color_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 crop_point_color_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 crop_point_color_panelDropped_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 crop_point_color_panelDropped_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 crop_point_color_panelDropped_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 crop_point_color_panelDropped_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 crop_point_color_panelDropped_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 crop_point_color_panelDropped_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 crop_point_color_panelDropped_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {20 endGroup n -1}
 addUserKnob {26 spacer l "" +STARTLINE T <br>}
 addUserKnob {26 title_uv l <b>UV</b>}
 addUserKnob {41 uv_stabilize l "uv stabilize" t "Turn this on if you need to stabilize in UV space. During UV stabilize on, the geo will not be animated. Set reference frame under 'mesh ref frame'." T menu1.uv_stabilize}
 addUserKnob {3 uv_ref_frame l "mesh ref frame" t "Select the frame number that will have identity geo shaped for UV texturing." +DISABLED}
 uv_ref_frame 1001
 addUserKnob {22 uv_set_frame l "set current frame" -STARTLINE +DISABLED T "nuke.thisGroup()\['uv_ref_frame'].setValue( nuke.frame() )"}
 addUserKnob {6 black_outside l "black outside" t "black outside the UV texture." +DISABLED +STARTLINE}
 black_outside true
 addUserKnob {20 t_VERSION l Version}
 addUserKnob {26 l_VERSION l Version T 1.3}
 addUserKnob {26 l_DATE l "Date Modified" T 2019-11-08}
 addUserKnob {26 l_CHANGELOG l Changelog T "1.3\n- camera window supported\n- anamophic project supported\n- fix the conflict of 'force region' and 'UV stabilize'.\n  can use both at the same time now.\n\n1.2\n- removed unuse camera link knobs\n- added focus region, so mesh can be\n  form in specific area/object to save\n  resources for higher LOD\n\n1.1\n- fix the missing line on 'Export Geo' \n  button\n\n1.0\n- create mesh/geo in screen space\n  using position/depth/deep data"}
 addUserKnob {26 l_DEV l "Developed by" T "<a href=\"https://facebook.com/MJTLab\"><font color=orange>Mark Joey Tang</font></a>"}
}
 BackdropNode {
  inputs 0
  name BackdropNode1
  tile_color 0xff
  label "don't touch"
  note_font_size 32
  xpos -1142
  ypos -169
  bdwidth 202
  bdheight 478
 }
 BackdropNode {
  inputs 0
  name BackdropNode2
  tile_color 0x4c4c4cff
  label bin
  note_font_size 32
  xpos -899
  ypos -170
  bdwidth 200
  bdheight 280
 }
 Input {
  inputs 0
  name img
  xpos -100
  ypos -184
 }
 Dot {
  name img_dot
  xpos -66
  ypos -83
 }
set N3a443300 [stack 0]
 Dot {
  name Dot3
  xpos 758
  ypos -83
 }
set N3a437660 [stack 0]
 Shuffle {
  in depth
  in2 alpha
  alpha red2
  name shuffle_data
  label "\[value in]"
  xpos 724
  ypos -32
 }
 Unpremult {
  name Unpremult_data
  xpos 724
  ypos 62
  disable {{!parent.unpm}}
 }
 Dot {
  name Dot5
  xpos 758
  ypos 700
 }
set N5029f720 [stack 0]
 Dot {
  name Dot6
  xpos 928
  ypos 700
 }
set N502a1be0 [stack 0]
 Dot {
  name Dot7
  xpos 1106
  ypos 700
 }
set N502cf910 [stack 0]
 Dot {
  name Dot8
  xpos 1260
  ypos 700
 }
 Expression {
  temp_name0 dvalue
  temp_expr0 red
  temp_name1 xpos
  temp_expr1 "( ( x + 0.5 ) / input.width - 0.5 ) * \[value global_math.hratio] * abs( dvalue )"
  temp_name2 ypos
  temp_expr2 "( ( y + 0.5 ) / input.height - 0.5 ) * ( \[value global_math.hratio] * abs( dvalue ) * ( img_dot.height / img_dot.width ) ) * 1 / \[value format.pixel_aspect]"
  temp_name3 zpos
  temp_expr3 "- dvalue"
  expr0 "( xpos * \[value fb_data.world_matrix.0] + ypos * \[value fb_data.world_matrix.1] ) * \[value fb_data.win_scale.u] + ( \[value global_math.hratio] * abs(zpos) * \[value fb_data.win_translate.u] / 2 )"
  expr1 "( xpos * \[value fb_data.world_matrix.4] + ypos * \[value fb_data.world_matrix.5] ) * \[value fb_data.win_scale.v] + ( \[value global_math.hratio] * abs(zpos) * \[value fb_data.win_translate.v] / 2 )"
  expr2 zpos
  name Expression9
  xpos 1226
  ypos 774
 }
 Dot {
  name Dot16
  xpos 1260
  ypos 889
 }
push $N502cf910
 Expression {
  temp_name0 dvalue
  temp_expr0 "1 / red"
  temp_name1 xpos
  temp_expr1 "( ( x + 0.5 ) / input.width - 0.5 ) * \[value global_math.hratio] * abs( dvalue )"
  temp_name2 ypos
  temp_expr2 "( ( y + 0.5 ) / input.height - 0.5 ) * ( \[value global_math.hratio] * abs( dvalue ) * ( img_dot.height / img_dot.width ) ) * 1 / \[value format.pixel_aspect]"
  temp_name3 zpos
  temp_expr3 "- dvalue"
  expr0 "( xpos * \[value fb_data.world_matrix.0] + ypos * \[value fb_data.world_matrix.1] ) * \[value fb_data.win_scale.u] + ( \[value global_math.hratio] * abs(zpos) * \[value fb_data.win_translate.u] / 2 )"
  expr1 "( xpos * \[value fb_data.world_matrix.4] + ypos * \[value fb_data.world_matrix.5] ) * \[value fb_data.win_scale.v] + ( \[value global_math.hratio] * abs(zpos) * \[value fb_data.win_translate.v] / 2 )"
  expr2 zpos
  name Expression6
  xpos 1072
  ypos 774
 }
 Dot {
  name Dot17
  xpos 1106
  ypos 863
 }
push $N502a1be0
 Expression {
  expr2 -blue
  name Expression7
  label "fix z"
  xpos 894
  ypos 774
 }
 Dot {
  name Dot18
  xpos 928
  ypos 876
 }
push $N5029f720
 Expression {
  temp_name0 nx
  temp_expr0 "red - cam_data.world_matrix.3"
  temp_name1 ny
  temp_expr1 "green - cam_data.world_matrix.7"
  temp_name2 nz
  temp_expr2 "blue - cam_data.world_matrix.11"
  expr0 "nx * \[value inverseMatrix.invMatrix.0] + ny * \[value inverseMatrix.invMatrix.1] + nz * \[value inverseMatrix.invMatrix.2]"
  expr1 "nx * \[value inverseMatrix.invMatrix.3] + ny * \[value inverseMatrix.invMatrix.4] + nz * \[value inverseMatrix.invMatrix.5]"
  expr2 "nx * \[value inverseMatrix.invMatrix.6] + ny * \[value inverseMatrix.invMatrix.7] + nz * \[value inverseMatrix.invMatrix.8]"
  name Expression3
  label "position invert"
  xpos 724
  ypos 774
 }
 Switch {
  inputs 4
  which {{parent.data_type}}
  name Switch1
  xpos 724
  ypos 984
 }
 Dot {
  name Dot13
  xpos 758
  ypos 1113
 }
set N3a46d740 [stack 0]
 Dot {
  name sam_dot
  xpos 551
  ypos 1113
 }
 NoOp {
  inputs 0
  name menu1
  knobChanged "\nthisGRP = nuke.thisGroup()\nif thisGRP\['uv_stabilize'].getValue() == 1 :\n    thisGRP\['uv_ref_frame'].setEnabled(True)\n    thisGRP\['uv_set_frame'].setEnabled(True)\n    thisGRP\['black_outside'].setEnabled(True)\nelse :\n    thisGRP\['uv_ref_frame'].setEnabled(False)\n    thisGRP\['uv_set_frame'].setEnabled(False)\n    thisGRP\['black_outside'].setEnabled(False)\n"
  xpos -1085
  ypos -42
  addUserKnob {20 User}
  addUserKnob {6 uv_stabilize l "uv stabilize" +STARTLINE}
 }
 NoOp {
  inputs 0
  name menu2
  onCreate "\nthisGRP = nuke.thisGroup()\nfregion_knobs = \['focus_region','fregion_define_z','sample_z_toggle','sample_z_status','sample_point','fregion_ref_frame','fregion_set_frame','track_focus_region','grp_crop_preview','show_crop','crop_point_scale','crop_point_color']\n\nthisGRP\[fregion_knobs\[4]].setEnabled(True)\n\nif thisGRP\['use_focus_region'].getValue()  == 0 :\n    for i in fregion_knobs :\n        thisGRP\[i].setEnabled(False)\n    thisGRP\[fregion_knobs\[3]].setValue( '<font color=red>\[ OFF ]</font>' )\n    thisGRP\['updateUI'].setValue('')\n    nuke.toNode('material_switch')\['disable'].setValue(0)\nelse :\n    for i in fregion_knobs :\n        if i != 'sample_point' :\n            thisGRP\[i].setEnabled(True)\n        else :\n            thisGRP\[i].setEnabled(False)\n    nuke.toNode('material_switch')\['disable'].setValue(1)\n"
  knobChanged "\nthisGRP = nuke.thisGroup()\nfregion_knobs = \['focus_region','fregion_define_z','sample_z_toggle','sample_z_status','sample_point','fregion_ref_frame','fregion_set_frame','track_focus_region','grp_crop_preview','show_crop','crop_point_scale','crop_point_color']\n\nif thisGRP\['use_focus_region'].getValue()  == 0 :\n    for i in fregion_knobs :\n        thisGRP\[i].setEnabled(False)\n    thisGRP\[fregion_knobs\[3]].setValue( '<font color=red>\[ OFF ]</font>' )\n    thisGRP\['updateUI'].setValue('')\n    nuke.toNode('material_switch')\['disable'].setValue(0)\nelse :\n    for i in fregion_knobs :\n        if i != 'sample_point' :\n            thisGRP\[i].setEnabled(True)\n    nuke.toNode('material_switch')\['disable'].setValue(1)\n"
  xpos -1085
  ypos 25
  addUserKnob {20 User}
  addUserKnob {6 use_focus_region l "use focus region" +STARTLINE}
 }
 Camera {
  inputs 0
  display off
  selectable false
  useMatrix true
  matrix {
      {{Camera3.world_matrix} {Camera3.world_matrix} {Camera3.world_matrix} {Camera3.world_matrix}}
      {{Camera3.world_matrix} {Camera3.world_matrix} {Camera3.world_matrix} {Camera3.world_matrix}}
      {{Camera3.world_matrix} {Camera3.world_matrix} {Camera3.world_matrix} {Camera3.world_matrix}}
      {{Camera3.world_matrix} {Camera3.world_matrix} {Camera3.world_matrix} {Camera3.world_matrix}}
    }
  focal {{parent.cam_focal}}
  haperture {{cam_haperture}}
  name cam_data
  xpos -335
  ypos 2204
 }
push $N3a46d740
 Expression {
  temp_name0 unpremultA
  temp_expr0 "alpha * ( 1 / alpha )"
  temp_name1 max
  temp_expr1 blue
  expr3 "abs( max ) < \[value parent.drange_near] || abs( max ) > \[value parent.drange_far] ? 0 : isnan(unpremultA) ? 0 : unpremultA"
  name Expression1
  label "distance crop"
  xpos 724
  ypos 1244
 }
 Premult {
  name Premult1
  xpos 724
  ypos 1332
 }
 Dot {
  name Dot9
  xpos 758
  ypos 1640
 }
set N3a5d9ce0 [stack 0]
push $N3a443300
 Dot {
  name Dot10
  xpos -66
  ypos 1552
 }
set N5a4d4730 [stack 0]
 Unpremult {
  name Unpremult1
  xpos 48
  ypos 1549
 }
 Merge2 {
  inputs 2
  operation mask
  name Merge2
  xpos 48
  ypos 1637
 }
 Premult {
  name Premult3
  xpos 48
  ypos 1719
 }
push $N5a4d4730
 Switch {
  inputs 2
  which {{parent.clip_color}}
  name Switch2
  xpos -100
  ypos 1828
 }
 Project3D2 {
  inputs 2
  crop {{parent.black_outside}}
  name Project3D2
  xpos -100
  ypos 2224
 }
push $N3a437660
 Dot {
  name Dot2
  xpos 1576
  ypos -84
 }
 Shuffle {
  red black
  green black
  blue black
  alpha black
  name Shuffle1
  label "\[value in]"
  xpos 1542
  ypos 30
 }
 Remove {
  name Remove1
  xpos 1542
  ypos 118
 }
 Reformat {
  type scale
  black_outside true
  name Reformat1
  xpos 1542
  ypos 212
 }
 Expression {
  temp_name0 xpos
  temp_expr0 "( ( x + 0.5 ) / input.width - 0.5) *  \[value global_math.hratio] * abs( \[value parent.drange_far] )"
  temp_name1 ypos
  temp_expr1 "( ( y + 0.5 ) / input.height -0.5 ) * ( \[value global_math.hratio] * abs( \[value parent.drange_far] ) * ( img_dot.height / img_dot.width ) ) * 1 / \[value format.pixel_aspect]"
  temp_name2 zpos
  temp_expr2 "-\[value parent.drange_far]"
  expr0 "( xpos * \[value fb_data.world_matrix.0] + ypos * \[value fb_data.world_matrix.1] ) * \[value fb_data.win_scale.u] + ( \[value global_math.hratio] * abs(zpos) * \[value fb_data.win_translate.u] / 2 )"
  expr1 "( xpos * \[value fb_data.world_matrix.4] + ypos * \[value fb_data.world_matrix.5] ) * \[value fb_data.win_scale.v] + ( \[value global_math.hratio] * abs(zpos) * \[value fb_data.win_translate.v] / 2 )"
  expr2 zpos
  name Expression8
  xpos 1542
  ypos 845
 }
 ColorMatrix {
  matrix {
      {{cam_data.world_matrix.0} {cam_data.world_matrix.1} {cam_data.world_matrix.2}}
      {{cam_data.world_matrix.4} {cam_data.world_matrix.5} {cam_data.world_matrix.6}}
      {{cam_data.world_matrix.8} {cam_data.world_matrix.9} {cam_data.world_matrix.10}}
    }
  name ColorMatrix1
  xpos 1542
  ypos 970
 }
 Add {
  channels rgb
  value {{cam_data.world_matrix.3} {cam_data.world_matrix.7} {cam_data.world_matrix.11} 0}
  name Add1
  xpos 1542
  ypos 1052
 }
 Crop {
  box {{store.fregion} {store.fregion} {store.fregion} {store.fregion}}
  reformat true
  crop false
  name Crop1
  xpos 1542
  ypos 1476
  disable {{!parent.use_focus_region}}
 }
 Dot {
  name Dot4
  xpos 1576
  ypos 2402
 }
push $N3a5d9ce0
 Crop {
  box {{store.fregion} {store.fregion} {store.fregion} {store.fregion}}
  reformat true
  crop false
  name Crop4
  selected true
  xpos 724
  ypos 1714
  disable {{!parent.use_focus_region}}
 }
 Unpremult {
  name Unpremult3
  xpos 724
  ypos 1851
 }
 Expression {
  temp_name0 nx
  temp_expr0 red
  temp_name1 ny
  temp_expr1 green
  temp_name2 nz
  temp_expr2 blue
  expr0 "( nx * \[value cam_data.world_matrix.0] + ny * \[value cam_data.world_matrix.1] + nz * \[value cam_data.world_matrix.2] ) + \[value cam_data.world_matrix.3]"
  expr1 "( nx * \[value cam_data.world_matrix.4] + ny * \[value cam_data.world_matrix.5] + nz * \[value cam_data.world_matrix.6] ) + \[value cam_data.world_matrix.7]"
  expr2 "( nx * \[value cam_data.world_matrix.8] + ny * \[value cam_data.world_matrix.9] + nz * \[value cam_data.world_matrix.10] ) + \[value cam_data.world_matrix.11]"
  name Expression4
  label "position revert"
  xpos 724
  ypos 1933
 }
 Premult {
  name Premult2
  xpos 724
  ypos 2027
 }
 Merge2 {
  inputs 2
  operation under
  name Merge1
  xpos 724
  ypos 2398
 }
 Card {
  inputs 0
  image_aspect false
  rows {{"img_dot.height * parent.lod"}}
  columns {{"img_dot.width * parent.lod"}}
  name ssmesh
  xpos 343
  ypos 2317
 }
 DisplaceGeo {
  inputs 2
  source "rgb absolute"
  scale 1
  filter_size 1
  name DisplaceGeo
  xpos 343
  ypos 2399
 }
 FrameHold {
  first_frame {{parent.uv_ref_frame}}
  name FrameHold
  xpos 343
  ypos 2479
  disable {{!parent.uv_stabilize}}
 }
 ApplyMaterial {
  inputs 2
  name ApplyMaterial1
  xpos -100
  ypos 2483
 }
 Scene {
  display {{parent.display}}
  name gl_scene
  xpos -90
  ypos 3072
 }
set N3a5b5740 [stack 0]
 WriteGeo {
  file_type abc
  name WriteGeo
  xpos 120
  ypos 3093
 }
 Axis {
  inputs 0
  display off
  selectable false
  translate {{"( global_math.pt2.x * cam_data.world_matrix.0(parent.fregion_ref_frame) + global_math.pt2.y * cam_data.world_matrix.1(parent.fregion_ref_frame) + global_math.pt2.z * cam_data.world_matrix.2(parent.fregion_ref_frame) ) + cam_data.world_matrix.3(parent.fregion_ref_frame)"} {"( global_math.pt2.x * cam_data.world_matrix.4(parent.fregion_ref_frame) + global_math.pt2.y * cam_data.world_matrix.5(parent.fregion_ref_frame) + global_math.pt2.z * cam_data.world_matrix.6(parent.fregion_ref_frame) ) + cam_data.world_matrix.7(parent.fregion_ref_frame)"} {"( global_math.pt2.x * cam_data.world_matrix.8(parent.fregion_ref_frame) + global_math.pt2.y * cam_data.world_matrix.9(parent.fregion_ref_frame) + global_math.pt2.z * cam_data.world_matrix.10(parent.fregion_ref_frame) ) + cam_data.world_matrix.11(parent.fregion_ref_frame)"}}
  name right_pt
  xpos -600
  ypos 3218
 }
 CheckerBoard2 {
  inputs 0
  format "256 256 0 0 256 256 1 square_256"
  name CheckerBoard1
  xpos -789
  ypos 2694
 }
 Multiply {
  channels rgb
  value {{parent.crop_point_color.r} {parent.crop_point_color.g} {parent.crop_point_color.b} 1}
  name Multiply
  xpos -789
  ypos 2822
 }
 Clamp {
  channels rgba
  name Clamp1
  xpos -789
  ypos 2905
 }
 Sphere {
  selectable false
  cast_shadow false
  receive_shadow false
  rows 10
  columns 10
  uniform_scale {{parent.crop_point_scale}}
  name Sphere1
  xpos -789
  ypos 2987
  disable {{!show_crop}}
 }
 Dot {
  name Dot24
  xpos -755
  ypos 3065
 }
set N3a5ed430 [stack 0]
 Dot {
  name Dot25
  xpos -456
  ypos 3065
 }
 TransformGeo {
  inputs 2
  selectable false
  name TransformGeo2
  xpos -490
  ypos 3238
 }
 Axis {
  inputs 0
  display off
  selectable false
  translate {{"( global_math.pt1.x * cam_data.world_matrix.0(parent.fregion_ref_frame) + global_math.pt1.y * cam_data.world_matrix.1(parent.fregion_ref_frame) + global_math.pt1.z * cam_data.world_matrix.2(parent.fregion_ref_frame) ) + cam_data.world_matrix.3(parent.fregion_ref_frame)"} {"( global_math.pt1.x * cam_data.world_matrix.4(parent.fregion_ref_frame) + global_math.pt1.y * cam_data.world_matrix.5(parent.fregion_ref_frame) + global_math.pt1.z * cam_data.world_matrix.6(parent.fregion_ref_frame) ) + cam_data.world_matrix.7(parent.fregion_ref_frame)"} {"( global_math.pt1.x * cam_data.world_matrix.8(parent.fregion_ref_frame) + global_math.pt1.y * cam_data.world_matrix.9(parent.fregion_ref_frame) + global_math.pt1.z * cam_data.world_matrix.10(parent.fregion_ref_frame) ) + cam_data.world_matrix.11(parent.fregion_ref_frame)"}}
  name left_pt
  xpos -899
  ypos 3220
 }
push $N3a5ed430
 TransformGeo {
  inputs 2
  selectable false
  name TransformGeo1
  xpos -789
  ypos 3240
 }
 Scene {
  inputs 2
  selectable false
  name Scene1
  xpos -480
  ypos 3395
 }
 ApplyMaterial {
  display off
  selectable false
  render_mode off
  name material_switch
  xpos -490
  ypos 3523
 }
push $N3a5b5740
 Scene {
  inputs 2
  name Scene2
  xpos -90
  ypos 3502
 }
 Output {
  name Output1
  xpos -100
  ypos 4030
 }
 Group {
  inputs 0
  name inverseMatrix
  tile_color 0x337f4cff
  xpos 576
  ypos 780
  addUserKnob {20 tab_general l General}
  addUserKnob {1 knob_path}
  knob_path cam_data.world_matrix
  addUserKnob {26 ""}
  addUserKnob {41 id T id_assign.matrix}
  addUserKnob {26 ""}
  addUserKnob {7 determinant}
  determinant {{"\[value \[value knob_path].\[value id.0]] * ((\[value \[value knob_path].\[value id.4]]*\[value \[value knob_path].\[value id.8]]) - (\[value \[value knob_path].\[value id.5]]*\[value \[value knob_path].\[value id.7]])) - \[value \[value knob_path].\[value id.1]] * ((\[value \[value knob_path].\[value id.3]]*\[value \[value knob_path].\[value id.8]]) - (\[value \[value knob_path].\[value id.5]]*\[value \[value knob_path].\[value id.6]])) + \[value \[value knob_path].\[value id.2]] * ((\[value \[value knob_path].\[value id.3]]*\[value \[value knob_path].\[value id.7]])-(\[value \[value knob_path].\[value id.4]]*\[value \[value knob_path].\[value id.6]]))"}}
  addUserKnob {26 ""}
  addUserKnob {41 cofactor T mtx_cofactor.matrix}
  addUserKnob {26 ""}
  addUserKnob {41 invMatrix T matrix_output.matrix}
  addUserKnob {20 t_VERSION l Version}
  addUserKnob {26 l_VERSION l Version T 1.0}
  addUserKnob {26 l_DATE l "Date Modified" T 2011-11-28}
  addUserKnob {26 l_CHANGELOG l Changelog T "v1.0\n- reveal the calculate output of \n  inverse matrix which is c44matrix\n  and colormatrix doesn't show\n  "}
  addUserKnob {26 l_DEV l "Developed by" T "Mark Joey Tang"}
 }
  Matrix {
   inputs 0
   matrix {
       {0 1 2}
       {4 5 6}
       {8 9 10}
     }
   name id_assign
   xpos -12
   ypos 33
  }
  Matrix {
   inputs 0
   matrix {
       {{"(\[value \[value knob_path].\[value id.4]]*\[value \[value knob_path].\[value id.8]]) - (\[value \[value knob_path].\[value id.5]]*\[value \[value knob_path].\[value id.7]])"} {"(\[value \[value knob_path].\[value id.7]]*\[value \[value knob_path].\[value id.2]]) - (\[value \[value knob_path].\[value id.8]]*\[value \[value knob_path].\[value id.1]])"} {"(\[value \[value knob_path].\[value id.1]]*\[value \[value knob_path].\[value id.5]]) - (\[value \[value knob_path].\[value id.2]]*\[value \[value knob_path].\[value id.4]])"}}
       {{"(\[value \[value knob_path].\[value id.5]]*\[value \[value knob_path].\[value id.6]]) - (\[value \[value knob_path].\[value id.3]]*\[value \[value knob_path].\[value id.8]])"} {"(\[value \[value knob_path].\[value id.8]]*\[value \[value knob_path].\[value id.0]]) - (\[value \[value knob_path].\[value id.6]]*\[value \[value knob_path].\[value id.2]])"} {"(\[value \[value knob_path].\[value id.2]]*\[value \[value knob_path].\[value id.3]]) - (\[value \[value knob_path].\[value id.0]]*\[value \[value knob_path].\[value id.5]])"}}
       {{"(\[value \[value knob_path].\[value id.3]]*\[value \[value knob_path].\[value id.7]]) - (\[value \[value knob_path].\[value id.4]]*\[value \[value knob_path].\[value id.6]])"} {"(\[value \[value knob_path].\[value id.6]]*\[value \[value knob_path].\[value id.1]]) - (\[value \[value knob_path].\[value id.7]]*\[value \[value knob_path].\[value id.0]])"} {"(\[value \[value knob_path].\[value id.0]]*\[value \[value knob_path].\[value id.4]]) - (\[value \[value knob_path].\[value id.1]]*\[value \[value knob_path].\[value id.3]])"}}
     }
   name mtx_cofactor
   xpos 86
   ypos 32
  }
  Matrix {
   inputs 0
   matrix {
       {{"cofactor.0 == 0 || determinant == 0 ? 0 : cofactor.0/determinant"} {"cofactor.1 == 0 || determinant == 0 ? 0 : cofactor.1/determinant"} {"cofactor.2 == 0 || determinant == 0 ? 0 : cofactor.2/determinant"}}
       {{"cofactor.3 == 0 || determinant == 0 ? 0 : cofactor.3/determinant"} {"cofactor.4 == 0 || determinant == 0 ? 0 : cofactor.4/determinant"} {"cofactor.5 == 0 || determinant == 0 ? 0 : cofactor.5/determinant"}}
       {{"cofactor.6 == 0 || determinant == 0 ? 0 : cofactor.6/determinant"} {"cofactor.7 == 0 || determinant == 0 ? 0 : cofactor.7/determinant"} {"cofactor.8 == 0 || determinant == 0 ? 0 : cofactor.8/determinant"}}
     }
   name matrix_output
   xpos 186
   ypos 33
  }
 end_group
 Camera {
  inputs 0
  rotate {0 0 {-parent.cam_winroll}}
  win_translate {{parent.cam_win_translate} {parent.cam_win_translate}}
  win_scale {{parent.cam_win_scale} {parent.cam_win_scale}}
  name fb_data
  xpos -340
  ypos 2087
 }
 NoOp {
  inputs 0
  name store
  xpos -843
  ypos 28
  addUserKnob {20 User}
  addUserKnob {22 fn T "### level define ###\n\ndef getLevel() :\n\tif len(nuke.thisNode().fullName().split('.')) == 1 :\n\t\tggLevel = nuke.root()\n\telse :\n\t\tnodePath = nuke.thisNode().fullName().split('.')\n\t\tnodePath.pop()\n\t\tggLevel = nuke.toNode('.'.join(nodePath))\n\treturn ggLevel\n\n### sample z in 2D ###\n\ndef sample2d() :\n\tthisGRP = nuke.thisGroup()\n\tif thisGRP\['sample_z_status'].value() == '<font color=cyan>\[ ON ]</font>' :\n\t\tsam_co = thisGRP\['sample_point'].getValue()\n\t\tzdata = nuke.toNode('sam_dot').sample('blue', sam_co\[0], sam_co\[1]) * -1\n\t\tthisGRP\['fregion_define_z'].setValue( zdata )" +STARTLINE}
  addUserKnob {15 fregion}
  fregion {{parent.focus_region} {parent.focus_region} {parent.focus_region} {parent.focus_region}}
 }
 NoOp {
  inputs 0
  name global_math
  xpos -842
  ypos -43
  addUserKnob {20 User}
  addUserKnob {7 hratio}
  hratio {{"cam_data.haperture / cam_data.focal"}}
  addUserKnob {7 maxwidth}
  maxwidth {{"hratio * parent.fregion_define_z"}}
  addUserKnob {7 maxheight}
  maxheight {{"hratio * parent.fregion_define_z * ( img_dot.height / img_dot.width )"}}
  addUserKnob {13 pt1}
  pt1 {{"( ( ( maxwidth * ( parent.focus_region.x(parent.fregion_ref_frame) / img_dot.width) ) - ( maxwidth / 2 ) ) * fb_data.world_matrix.0 + ( ( ( maxheight * ( parent.focus_region.y(parent.fregion_ref_frame) / img_dot.height ) ) - ( maxheight / 2 ) ) * 1 / \[value root.format.pixel_aspect] ) * fb_data.world_matrix.1 ) * fb_data.win_scale.u + ( hratio * abs(parent.fregion_define_z) * fb_data.win_translate.u /2 )"} {"( ( ( maxwidth * ( parent.focus_region.x(parent.fregion_ref_frame) / img_dot.width) ) - ( maxwidth / 2 ) ) * fb_data.world_matrix.4 + \n( ( ( maxheight * ( parent.focus_region.y(parent.fregion_ref_frame) / img_dot.height ) ) - ( maxheight / 2 ) ) * 1 / \[value root.format.pixel_aspect] ) * fb_data.world_matrix.5 ) * fb_data.win_scale.v + ( hratio * abs(parent.fregion_define_z) * fb_data.win_translate.v /2 )"} {-parent.fregion_define_z}}
  addUserKnob {13 pt2}
  pt2 {{"( ( ( maxwidth * ( parent.focus_region.r(parent.fregion_ref_frame) / img_dot.width) ) - ( maxwidth / 2 ) ) * fb_data.world_matrix.0 + ( ( ( maxheight * ( parent.focus_region.t(parent.fregion_ref_frame) / img_dot.height ) ) - ( maxheight / 2 ) ) * 1 / \[value root.format.pixel_aspect] ) * fb_data.world_matrix.1 ) * fb_data.win_scale.u + ( hratio * abs(parent.fregion_define_z) * fb_data.win_translate.u /2 )"} {"( ( ( maxwidth * ( parent.focus_region.r(parent.fregion_ref_frame) / img_dot.width) ) - ( maxwidth / 2 ) ) * fb_data.world_matrix.4 + ( ( ( maxheight * ( parent.focus_region.t(parent.fregion_ref_frame) / img_dot.height ) ) - ( maxheight / 2 ) ) * 1 / \[value root.format.pixel_aspect] ) * fb_data.world_matrix.5 ) * fb_data.win_scale.v + ( hratio * abs(parent.fregion_define_z) * fb_data.win_translate.v /2 )"} {-parent.fregion_define_z}}
 }
end_group
Camera2 {
 inputs 0
 translate {{curve x1 -23.73355293 x50 1.828465939 x100 10.79810143} {curve x1 6.752248287 x50 13.82691669 x100 25.23773003} {curve x1 -3.158116341 x50 5.475767136 x100 -12.79232216}}
 rotate {{curve x1 30.63627052 x50 14.22963619 x100 -23.22279344} {curve x1 -44.94124796 x50 19.70681696 x100 76.6501109} {curve x1 0 x50 27.42004885 x100 13.36756642}}
 focal 24
 name Camera3
 xpos 342
 ypos -217
}
Scene {
 inputs 2
 name Scene3
 xpos 522
 ypos -75
}
Dot {
 name Dot3
 xpos 546
 ypos 114
}
Group {
 inputs 0
 name render_with_deep
 xpos 1191
 ypos -374
 postage_stamp true
}
 Camera2 {
  inputs 0
  translate {{curve x1 -23.73355293 x50 1.828465939 x100 10.79810143} {curve x1 6.752248287 x50 13.82691669 x100 25.23773003} {curve x1 -3.158116341 x50 5.475767136 x100 -12.79232216}}
  rotate {{curve x1 30.63627052 x50 14.22963619 x100 -23.22279344} {curve x1 -44.94124796 x50 19.70681696 x100 76.6501109} {curve x1 0 x50 27.42004885 x100 13.36756642}}
  focal 24
  name Camera1
  xpos 241
  ypos -567
 }
 Dot {
  name Dot2
  xpos 351
  ypos -543
 }
set N81bc0180 [stack 0]
 Dot {
  name Dot3
  xpos 351
  ypos -428
 }
push $N81bc0180
 CheckerBoard2 {
  inputs 0
  name CheckerBoard1
  xpos 406
  ypos -928
 }
 Dot {
  name Dot1
  xpos 440
  ypos -814
 }
set N81bc9030 [stack 0]
 Dot {
  name Dot5
  xpos 553
  ypos -814
 }
set N81bcb3b0 [stack 0]
 Dot {
  name Dot4
  xpos 693
  ypos -814
 }
 Multiply {
  channels rgb
  value {0 1 1 1}
  name Multiply3
  xpos 659
  ypos -756
 }
 Cube {
  rows 1
  columns 1
  separate_faces false
  translate {-7.849998951 18.14999962 -19.00000191}
  rotate {0 0 45.93192592}
  uniform_scale 7
  name Cube1
  xpos 659
  ypos -676
 }
push $N81bcb3b0
 Multiply {
  channels rgb
  value {1 0 1 1}
  name Multiply2
  xpos 519
  ypos -750
 }
 Sphere {
  translate {-15.00000191 16.45000076 -17.79999924}
  scaling {3.183291435 1 2.618715286}
  uniform_scale 2
  name Sphere1
  xpos 519
  ypos -670
 }
push $N81bc9030
 Multiply {
  channels rgb
  value {1 1 0 1}
  name Multiply1
  xpos 406
  ypos -754
 }
 Cylinder {
  rows 1
  close_top true
  close_bottom true
  translate {-3.149999619 19.64999962 -13.89999866}
  rotate {52.26493538 0 32.53306187}
  scaling {1 4.216488838 1}
  uniform_scale 2
  name Cylinder1
  xpos 406
  ypos -673
 }
 Scene {
  inputs 4
  name Scene1
  xpos 416
  ypos -567
 }
 Reformat {
  inputs 0
  type "to box"
  box_width 1280
  box_height 720
  box_fixed true
  name Reformat1
  xpos 530
  ypos -431
 }
 ScanlineRender {
  inputs 3
  conservative_shader_sampling false
  motion_vectors_type off
  MB_channel none
  name ScanlineRender1
  xpos 406
  ypos -431
 }
 DeepFromImage {
  name DeepFromImage1
  selected true
  xpos 406
  ypos -351
 }
 Output {
  name Output1
  xpos 406
  ypos -215
 }
end_group
DeepToImage {
 name DeepToImage1
 xpos 1191
 ypos -265
}
Group {
 name SSMesh4
 tile_color 0x5c9e83ff
 label "<font color=cyan>Geo Output</font>"
 xpos 1191
 ypos -207
 addUserKnob {20 tab_general l General}
 addUserKnob {22 set_link l "link to selected camera" t "Click to link selected camera by expression. This tool will get the focal, haperture and world matrix from selected camera to generate" T "def getLevel() :\n\t### level define ###\n\tif len(nuke.thisNode().fullName().split('.')) == 1 :\n\t\t  ggLevel = nuke.root()\n\telse :\n\t\t  nodePath = nuke.thisNode().fullName().split('.')\n\t\t  nodePath.pop()\n\t\t  ggLevel = nuke.toNode('.'.join(nodePath))\n\treturn ggLevel\n\nroot = getLevel()\nthisGRP = nuke.thisGroup()\n\nmainKnobs = \['world_matrix','cam_focal','cam_haperture','cam_win_translate','cam_win_scale','cam_winroll']\ndefaultKnobs = \{\n\t\t\t'world matrix' : 'world_matrix',\n\t\t\t'focal length' : 'focal',\n\t\t\t'horiz aperture' : 'haperture',\n\t\t\t'window translate' : 'win_translate',\n\t\t\t'window scale' : 'win_scale',\n\t\t\t'window roll' : 'winroll'\n\t\t\t\}\nselNodeKnobs = \[]\nmissingKnob = \[]\n\ntry :\n\twith root :\n\t\tselNode = nuke.selectedNode()\n\n\tfor knob in selNode.knobs() :\n\t\tselNodeKnobs.append( knob )\n\n\tselNodeKnobs.sort()\n\n\tfor key,value in defaultKnobs.items() :\n\t\tif value not in selNodeKnobs :\n\t\t\tmissingKnob.append( key )\n\n\tif not len(missingKnob) :\n\t\twith root :\n\t\t\tCAMnode = selNode.name()\n\t\t\tthisGRP\[mainKnobs\[0]].setExpression('\{0\}.world_matrix'.format(CAMnode))\n\t\t\tthisGRP\[mainKnobs\[1]].setExpression('\{0\}.focal'.format(CAMnode))\n\t\t\tthisGRP\[mainKnobs\[2]].setExpression('\{0\}.haperture'.format(CAMnode))\n\t\t\tthisGRP\[mainKnobs\[3]].setExpression('\{0\}.win_translate'.format(CAMnode))\n\t\t\tthisGRP\[mainKnobs\[4]].setExpression('\{0\}.win_scale'.format(CAMnode))\n\t\t\tthisGRP\[mainKnobs\[5]].setExpression('\{0\}.winroll'.format(CAMnode))\n\telse :\n\t\tp = nuke.Panel('Select knobs :')\n\t\tp.addBooleanCheckBox( '<b>Unable to find the default knobs. Please use the pulldown menu below to define the knob manually.</b>' , False)\n\t\tfor rk in missingKnob :\n\t\t\tp.addEnumerationPulldown( rk, ' '.join( selNodeKnobs ) )\n\n\t\tif p.show() :\n\t\t\ttry :\n\t\t\t\tfor key,value in defaultKnobs.items() :\n\t\t\t\t\tif p.value( key ) != None :\n\t\t\t\t\t\tdefaultKnobs\[key] = p.value( key )\n\t\t\texcept :\n\t\t\t\tpass\n\n\t\t\twith root :\n\t\t\t\tCAMnode = selNode.name()\n\t\t\t\tthisGRP\[mainKnobs\[0]].setExpression('\{0\}.\{1\}'.format(CAMnode, defaultKnobs\['world matrix']))\n\t\t\t\tthisGRP\[mainKnobs\[1]].setExpression('\{0\}.\{1\}'.format(CAMnode, defaultKnobs\['focal length']))\n\t\t\t\tthisGRP\[mainKnobs\[2]].setExpression('\{0\}.\{1\}'.format(CAMnode, defaultKnobs\['horiz aperture']))\n\t\t\t\tthisGRP\[mainKnobs\[3]].setExpression('\{0\}.\{1\}'.format(CAMnode, defaultKnobs\['window translate']))\n\t\t\t\tthisGRP\[mainKnobs\[4]].setExpression('\{0\}.\{1\}'.format(CAMnode, defaultKnobs\['window scale']))\n\t\t\t\tthisGRP\[mainKnobs\[5]].setExpression('\{0\}.\{1\}'.format(CAMnode, defaultKnobs\['window roll']))\nexcept :\n\tnuke.message('no node selected.')" +STARTLINE}
 addUserKnob {22 remove_link l "remove linked expression" t "Remove the linked camera expression but won't reset any data." -STARTLINE T "thisGRP = nuke.thisGroup()\nmainKnobs = \['world_matrix','cam_focal','cam_haperture','cam_win_translate','cam_win_scale','cam_winroll']\n\nfor knob in thisGRP.knobs() :\n\tif mainKnobs.count(knob) != 0 :\n\t\t thisGRP\[knob].clearAnimated()"}
 addUserKnob {20 cam_data_grp l "CAMERA DATA" n 1}
 cam_data_grp 0
 addUserKnob {7 cam_focal l "focal length" R 5 100}
 cam_focal {{Camera4.focal}}
 addUserKnob {7 cam_haperture l "horiz aperture" R 0.1 50}
 cam_haperture {{Camera4.haperture}}
 addUserKnob {30 cam_win_translate l "window translate"}
 cam_win_translate {{Camera4.win_translate} {Camera4.win_translate}}
 addUserKnob {30 cam_win_scale l "window scale"}
 cam_win_scale {{Camera4.win_scale} {Camera4.win_scale}}
 addUserKnob {7 cam_winroll l "window roll" R -45 45}
 cam_winroll {{Camera4.winroll}}
 addUserKnob {41 world_matrix l "world matrix" T cam_data.matrix}
 addUserKnob {20 endGroup_1 l endGroup n -1}
 addUserKnob {26 spacer_5 l "" +STARTLINE T <br>}
 addUserKnob {26 title_basic l "<b>BASIC SETTING</b>"}
 addUserKnob {4 display l "3D display" t "How to draw in 3D preview. The viewer can override this setting." M {off wireframe soild solid+wireframe textured textured+wireframe "" "" ""}}
 display textured
 addUserKnob {4 data_type l "data type" t "data type\nUsing one of these data to convert into 3D mesh.\n\nPosition\nSupported world space or camera space position data.\n\nDepth (normalized far=0)\nNormalized depth data, which is same as depth data output by ScanlineRender.\n\nDeep / Depth (direct)\nRaw camera depth data. If using deep, need to convert DeepToImage first, and selected deep channel on 'channels' knob." M {"position (world space)" "position (camera space)" "depth (normalized far=0)" "deep / depth (direct)" "" "" ""}}
 data_type "deep / depth (direct)"
 addUserKnob {41 channels t "Select which channel represented on selected data type." T shuffle_data.in}
 addUserKnob {6 unpm l unpremult t "3D data pass should be unpremult with alpha before process." -STARTLINE}
 unpm true
 addUserKnob {26 spacer_4 l "" +STARTLINE T <br>}
 addUserKnob {7 lod l "mesh LOD" t "Level of Details\n\nIf this value set to 1.0, subdivision of the mesh  1:1 to the data available in the resolution. Which mean 1 face of the mesh equal to 1 pixel.\n\nIf this value set to 1.0, it will slow down the render process.\n\nHighly recommend to use 0.1 - 0.5 if high resolution mesh details is not concern."}
 lod 0.1
 addUserKnob {41 filter_size l "filter size" T DisplaceGeo.filter_size}
 addUserKnob {41 filter T DisplaceGeo.filter}
 addUserKnob {26 spacer_2 l "" +STARTLINE T <br>}
 addUserKnob {26 title_drange l "" +STARTLINE T "distance range"}
 addUserKnob {7 drange_near l near t "clip the mesh in the min value in terms of depth." R 0 10000}
 addUserKnob {7 drange_far l far t "clip the mesh in the max value in terms of depth." R 0 10000}
 drange_far 30
 addUserKnob {6 clip_color l "distance clip on color" t "Apply the distance clip on colored texture." +STARTLINE}
 clip_color true
 addUserKnob {26 spacer_3 l "" +STARTLINE T <br>}
 addUserKnob {26 title_export l <b>EXPORT</b>}
 addUserKnob {41 file t "only support *.abc file extension (alembric) ." T WriteGeo.file}
 addUserKnob {22 export_geo l "Export Geo" T "def exportGeo() :\n\twgeo = nuke.toNode('WriteGeo')\n\twgeo\['Execute'].execute()\n\nthisGRP = nuke.thisGroup()\nfilepath = thisGRP\['file'].getValue()\n\nif not len(filepath) :\n\tnuke.message('file path is empty. Process denied.')\nelif not filepath.split('.')\[-1:]\[0].lower() == 'abc' :\n\tif nuke.ask('File extension invalue. Only support render <font color=orange>*.abc</font> . Do you want this tool to fix it and process ?') :\n\t\tthisGRP\['file'].setValue( thisGRP\['file'].getValue() + '.abc' )\n\t\texportGeo()\nelse :\n\texportGeo()" +STARTLINE}
 addUserKnob {22 import_geo l "Import Geo" -STARTLINE T "prefx = nuke.toNode('preferences')\['GridWidth'].value()\nthisGRP = nuke.thisGroup()\ngoStore = nuke.toNode('store')\ngoStore\['fn'].execute()\n\nroot = getLevel()\n\nwith root :\n\trgeo = nuke.nodes.ReadGeo2( file=thisGRP\['file'].getValue() )\n\trgeo.setXYpos( int( thisGRP\['xpos'].getValue() + prefx ) , int( thisGRP\['ypos'].getValue() ) )"}
 addUserKnob {20 tab_misc l Miscellaneous}
 addUserKnob {26 title_focus_region l "<b>FOCUS REGION</b>"}
 addUserKnob {41 use_focus_region l "use focus region" t "use focus region to generate SSMesh in specific area. Save resources and possible to work with high LOD mesh." T menu2.use_focus_region}
 addUserKnob {15 focus_region l "focus region" t "Set focus region in screen space. These values are 2D coordinate." +DISABLED}
 focus_region {0 0 1280 720}
 addUserKnob {26 spacer_1 l "" +STARTLINE T <br>}
 addUserKnob {3 fregion_ref_frame l "ref frame" t "set reference frame for tracking focus region. 'focus region' & 'define z' will apply on this reference frame and process the tracking." +DISABLED}
 fregion_ref_frame 1
 addUserKnob {22 fregion_set_frame l "set current frame" t "set current frame for focus region reference frame." -STARTLINE +DISABLED T "nuke.thisGroup()\['fregion_ref_frame'].setValue( nuke.frame() )"}
 addUserKnob {12 sample_point l "sample position" t "Toggle 'sample z' in 2D to enable this 2D sample coordinate." +DISABLED}
 addUserKnob {22 sample_z_toggle l "sample z in 2D" t "'sample z' is only works for sample value purpose. After sample is done, must turn off sample function." -STARTLINE +DISABLED T "thisGRP = nuke.thisGroup()\nszstatus = thisGRP\['sample_z_status'].value()\n\nstatus = \['<font color=red>\[ OFF ]</font>','<font color=cyan>\[ ON ]</font>']\n\nif szstatus == status\[0] :\n\tthisGRP\['sample_z_status'].setValue( status\[1] )\n\tthisGRP\['sample_point'].setEnabled(True)\n\tthisGRP\['updateUI'].setValue(\"goStore = nuke.toNode(\\'store\\')\\ngoStore\[\\'fn\\'].execute()\\nsample2d()\")\nelse :\n\tthisGRP\['sample_z_status'].setValue( status\[0] )\n\tthisGRP\['sample_point'].setEnabled(False)\n\tthisGRP\['updateUI'].setValue('')"}
 addUserKnob {26 sample_z_status l "" -STARTLINE +DISABLED T "<font color=red>\[ OFF ]</font>"}
 addUserKnob {7 fregion_define_z l "define z" t "Define the z value on reference frame. Can use 'sample z in 2D' to get this value." +DISABLED R 0 10000}
 addUserKnob {22 track_focus_region l "<b>\[ track focus region ]</b>" t "Use the set focus region on reference frame to track with camera in 3D space.\n\n* project setting need to be same as image resolution to get the correct result." +DISABLED T "rootST = int( nuke.root()\['first_frame'].getValue() )\nrootED = int( nuke.root()\['last_frame'].getValue() )\n\ngetFrame = nuke.getFramesAndViews( 'frame range', str( rootST ) + '-' + str( rootED ) )\n\ntry :\n\tframeST = int( getFrame\[0].replace( ' ' , '' ).split('-')\[0] )\n\tframeED = int( getFrame\[0].replace( ' ' , '' ).split('-')\[1] )\n\n\tthisGRP = nuke.thisGroup()\n\trefframe = int( thisGRP\['fregion_ref_frame'].getValue() )\n\tcam = nuke.toNode('cam_data')\n\tpt1 = nuke.toNode('left_pt')\['translate'].getValue()\n\tpt2 = nuke.toNode('right_pt')\['translate'].getValue()\n\n\tct_hack = nuke.nodes.CurveTool()\n\n\twith nuke.root() :\n\n\t\tif frameED - frameST != 0 :\n\t\t\tthisGRP\['focus_region'].clearAnimated()\n\t\t\ttempbuffer1 = thisGRP\['focus_region'].getValue()\n\t\t\tthisGRP\['focus_region'].setAnimated()\n\t\t\tthisGRP\['focus_region'].setValueAt( tempbuffer1\[0] , refframe , 0 )\n\t\t\tthisGRP\['focus_region'].setValueAt( tempbuffer1\[1] , refframe , 1 )\n\t\t\tthisGRP\['focus_region'].setValueAt( tempbuffer1\[2] , refframe , 2 )\n\t\t\tthisGRP\['focus_region'].setValueAt( tempbuffer1\[3] , refframe , 3 )\n\n\t\tfor trackframe in xrange( frameST, frameED+1 , 1 ) :\n\t\t\tnuke.execute( ct_hack, trackframe, trackframe )\n\t\t\tthisGRP\['focus_region'].setValueAt( nukescripts.snap3d.projectPoint( cam, pt1 )\[0] , trackframe , 0 )\n\t\t\tthisGRP\['focus_region'].setValueAt( nukescripts.snap3d.projectPoint( cam, pt1 )\[1] , trackframe , 1 )\n\t\t\tthisGRP\['focus_region'].setValueAt( nukescripts.snap3d.projectPoint( cam, pt2 )\[0] , trackframe , 2 )\n\t\t\tthisGRP\['focus_region'].setValueAt( nukescripts.snap3d.projectPoint( cam, pt2 )\[1] , trackframe , 3 )\n\n\tnuke.delete( ct_hack )\nexcept :\n    pass" +STARTLINE}
 addUserKnob {26 spacer_6 l "" +STARTLINE T <br>}
 addUserKnob {20 grp_crop_preview l "3D crop preview" +DISABLED n 1}
 grp_crop_preview 0
 addUserKnob {6 show_crop l "show crop point" t "It will show 2 spheres for the crop in 3D space. They set in the place which is where you set the focus region in screen space and defined by z." +DISABLED +STARTLINE}
 addUserKnob {7 crop_point_scale l scale t "Scale the preview crop points (spheres)." +DISABLED}
 crop_point_scale 0.3
 addUserKnob {18 crop_point_color l color t "change color of the crop points (spheres)." +DISABLED}
 crop_point_color 1
 addUserKnob {6 crop_point_color_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 crop_point_color_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 crop_point_color_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 crop_point_color_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 crop_point_color_panelDropped_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 crop_point_color_panelDropped_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 crop_point_color_panelDropped_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 crop_point_color_panelDropped_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 crop_point_color_panelDropped_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 crop_point_color_panelDropped_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 crop_point_color_panelDropped_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 crop_point_color_panelDropped_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {20 endGroup n -1}
 addUserKnob {26 spacer l "" +STARTLINE T <br>}
 addUserKnob {26 title_uv l <b>UV</b>}
 addUserKnob {41 uv_stabilize l "uv stabilize" t "Turn this on if you need to stabilize in UV space. During UV stabilize on, the geo will not be animated. Set reference frame under 'mesh ref frame'." T menu1.uv_stabilize}
 addUserKnob {3 uv_ref_frame l "mesh ref frame" t "Select the frame number that will have identity geo shaped for UV texturing." +DISABLED}
 uv_ref_frame 1001
 addUserKnob {22 uv_set_frame l "set current frame" -STARTLINE +DISABLED T "nuke.thisGroup()\['uv_ref_frame'].setValue( nuke.frame() )"}
 addUserKnob {6 black_outside l "black outside" t "black outside the UV texture." +DISABLED +STARTLINE}
 black_outside true
 addUserKnob {20 t_VERSION l Version}
 addUserKnob {26 l_VERSION l Version T 1.3}
 addUserKnob {26 l_DATE l "Date Modified" T 2019-11-08}
 addUserKnob {26 l_CHANGELOG l Changelog T "1.3\n- camera window supported\n- anamophic project supported\n- fix the conflict of 'force region' and 'UV stabilize'.\n  can use both at the same time now.\n\n1.2\n- removed unuse camera link knobs\n- added focus region, so mesh can be\n  form in specific area/object to save\n  resources for higher LOD\n\n1.1\n- fix the missing line on 'Export Geo' \n  button\n\n1.0\n- create mesh/geo in screen space\n  using position/depth/deep data"}
 addUserKnob {26 l_DEV l "Developed by" T "<a href=\"https://facebook.com/MJTLab\"><font color=orange>Mark Joey Tang</font></a>"}
}
 BackdropNode {
  inputs 0
  name BackdropNode1
  tile_color 0xff
  label "don't touch"
  note_font_size 32
  xpos -1142
  ypos -169
  bdwidth 202
  bdheight 478
 }
 BackdropNode {
  inputs 0
  name BackdropNode2
  tile_color 0x4c4c4cff
  label bin
  note_font_size 32
  xpos -899
  ypos -170
  bdwidth 200
  bdheight 280
 }
 Input {
  inputs 0
  name img
  xpos -100
  ypos -184
 }
 Dot {
  name img_dot
  xpos -66
  ypos -83
 }
set N3e819330 [stack 0]
 Dot {
  name Dot3
  xpos 758
  ypos -83
 }
set N3e81b8f0 [stack 0]
 Shuffle {
  in deep
  in2 alpha
  alpha red2
  name shuffle_data
  label "\[value in]"
  xpos 724
  ypos -32
 }
 Unpremult {
  name Unpremult_data
  xpos 724
  ypos 62
  disable {{!parent.unpm}}
 }
 Dot {
  name Dot5
  xpos 758
  ypos 700
 }
set N3e82a040 [stack 0]
 Dot {
  name Dot6
  xpos 928
  ypos 700
 }
set N3e82c500 [stack 0]
 Dot {
  name Dot7
  xpos 1106
  ypos 700
 }
set N3e82e9c0 [stack 0]
 Dot {
  name Dot8
  xpos 1260
  ypos 700
 }
 Expression {
  temp_name0 dvalue
  temp_expr0 red
  temp_name1 xpos
  temp_expr1 "( ( x + 0.5 ) / input.width - 0.5 ) * \[value global_math.hratio] * abs( dvalue )"
  temp_name2 ypos
  temp_expr2 "( ( y + 0.5 ) / input.height - 0.5 ) * ( \[value global_math.hratio] * abs( dvalue ) * ( img_dot.height / img_dot.width ) ) * 1 / \[value format.pixel_aspect]"
  temp_name3 zpos
  temp_expr3 "- dvalue"
  expr0 "( xpos * \[value fb_data.world_matrix.0] + ypos * \[value fb_data.world_matrix.1] ) * \[value fb_data.win_scale.u] + ( \[value global_math.hratio] * abs(zpos) * \[value fb_data.win_translate.u] / 2 )"
  expr1 "( xpos * \[value fb_data.world_matrix.4] + ypos * \[value fb_data.world_matrix.5] ) * \[value fb_data.win_scale.v] + ( \[value global_math.hratio] * abs(zpos) * \[value fb_data.win_translate.v] / 2 )"
  expr2 zpos
  name Expression9
  xpos 1226
  ypos 774
 }
 Dot {
  name Dot16
  xpos 1260
  ypos 889
 }
push $N3e82e9c0
 Expression {
  temp_name0 dvalue
  temp_expr0 "1 / red"
  temp_name1 xpos
  temp_expr1 "( ( x + 0.5 ) / input.width - 0.5 ) * \[value global_math.hratio] * abs( dvalue )"
  temp_name2 ypos
  temp_expr2 "( ( y + 0.5 ) / input.height - 0.5 ) * ( \[value global_math.hratio] * abs( dvalue ) * ( img_dot.height / img_dot.width ) ) * 1 / \[value format.pixel_aspect]"
  temp_name3 zpos
  temp_expr3 "- dvalue"
  expr0 "( xpos * \[value fb_data.world_matrix.0] + ypos * \[value fb_data.world_matrix.1] ) * \[value fb_data.win_scale.u] + ( \[value global_math.hratio] * abs(zpos) * \[value fb_data.win_translate.u] / 2 )"
  expr1 "( xpos * \[value fb_data.world_matrix.4] + ypos * \[value fb_data.world_matrix.5] ) * \[value fb_data.win_scale.v] + ( \[value global_math.hratio] * abs(zpos) * \[value fb_data.win_translate.v] / 2 )"
  expr2 zpos
  name Expression6
  xpos 1072
  ypos 774
 }
 Dot {
  name Dot17
  xpos 1106
  ypos 863
 }
push $N3e82c500
 Expression {
  expr2 -blue
  name Expression7
  label "fix z"
  xpos 894
  ypos 774
 }
 Dot {
  name Dot18
  xpos 928
  ypos 876
 }
push $N3e82a040
 Expression {
  temp_name0 nx
  temp_expr0 "red - cam_data.world_matrix.3"
  temp_name1 ny
  temp_expr1 "green - cam_data.world_matrix.7"
  temp_name2 nz
  temp_expr2 "blue - cam_data.world_matrix.11"
  expr0 "nx * \[value inverseMatrix.invMatrix.0] + ny * \[value inverseMatrix.invMatrix.1] + nz * \[value inverseMatrix.invMatrix.2]"
  expr1 "nx * \[value inverseMatrix.invMatrix.3] + ny * \[value inverseMatrix.invMatrix.4] + nz * \[value inverseMatrix.invMatrix.5]"
  expr2 "nx * \[value inverseMatrix.invMatrix.6] + ny * \[value inverseMatrix.invMatrix.7] + nz * \[value inverseMatrix.invMatrix.8]"
  name Expression3
  label "position invert"
  xpos 724
  ypos 774
 }
 Switch {
  inputs 4
  which {{parent.data_type}}
  name Switch1
  xpos 724
  ypos 984
 }
 Dot {
  name Dot13
  xpos 758
  ypos 1113
 }
set N3a63aad0 [stack 0]
 Dot {
  name sam_dot
  xpos 551
  ypos 1113
 }
 NoOp {
  inputs 0
  name menu1
  knobChanged "\nthisGRP = nuke.thisGroup()\nif thisGRP\['uv_stabilize'].getValue() == 1 :\n    thisGRP\['uv_ref_frame'].setEnabled(True)\n    thisGRP\['uv_set_frame'].setEnabled(True)\n    thisGRP\['black_outside'].setEnabled(True)\nelse :\n    thisGRP\['uv_ref_frame'].setEnabled(False)\n    thisGRP\['uv_set_frame'].setEnabled(False)\n    thisGRP\['black_outside'].setEnabled(False)\n"
  xpos -1085
  ypos -42
  addUserKnob {20 User}
  addUserKnob {6 uv_stabilize l "uv stabilize" +STARTLINE}
 }
 NoOp {
  inputs 0
  name menu2
  onCreate "\nthisGRP = nuke.thisGroup()\nfregion_knobs = \['focus_region','fregion_define_z','sample_z_toggle','sample_z_status','sample_point','fregion_ref_frame','fregion_set_frame','track_focus_region','grp_crop_preview','show_crop','crop_point_scale','crop_point_color']\n\nthisGRP\[fregion_knobs\[4]].setEnabled(True)\n\nif thisGRP\['use_focus_region'].getValue()  == 0 :\n    for i in fregion_knobs :\n        thisGRP\[i].setEnabled(False)\n    thisGRP\[fregion_knobs\[3]].setValue( '<font color=red>\[ OFF ]</font>' )\n    thisGRP\['updateUI'].setValue('')\n    nuke.toNode('material_switch')\['disable'].setValue(0)\nelse :\n    for i in fregion_knobs :\n        if i != 'sample_point' :\n            thisGRP\[i].setEnabled(True)\n        else :\n            thisGRP\[i].setEnabled(False)\n    nuke.toNode('material_switch')\['disable'].setValue(1)\n"
  knobChanged "\nthisGRP = nuke.thisGroup()\nfregion_knobs = \['focus_region','fregion_define_z','sample_z_toggle','sample_z_status','sample_point','fregion_ref_frame','fregion_set_frame','track_focus_region','grp_crop_preview','show_crop','crop_point_scale','crop_point_color']\n\nif thisGRP\['use_focus_region'].getValue()  == 0 :\n    for i in fregion_knobs :\n        thisGRP\[i].setEnabled(False)\n    thisGRP\[fregion_knobs\[3]].setValue( '<font color=red>\[ OFF ]</font>' )\n    thisGRP\['updateUI'].setValue('')\n    nuke.toNode('material_switch')\['disable'].setValue(0)\nelse :\n    for i in fregion_knobs :\n        if i != 'sample_point' :\n            thisGRP\[i].setEnabled(True)\n    nuke.toNode('material_switch')\['disable'].setValue(1)\n"
  xpos -1085
  ypos 25
  addUserKnob {20 User}
  addUserKnob {6 use_focus_region l "use focus region" +STARTLINE}
 }
 Camera {
  inputs 0
  display off
  selectable false
  useMatrix true
  matrix {
      {{Camera4.world_matrix} {Camera4.world_matrix} {Camera4.world_matrix} {Camera4.world_matrix}}
      {{Camera4.world_matrix} {Camera4.world_matrix} {Camera4.world_matrix} {Camera4.world_matrix}}
      {{Camera4.world_matrix} {Camera4.world_matrix} {Camera4.world_matrix} {Camera4.world_matrix}}
      {{Camera4.world_matrix} {Camera4.world_matrix} {Camera4.world_matrix} {Camera4.world_matrix}}
    }
  focal {{parent.cam_focal}}
  haperture {{cam_haperture}}
  name cam_data
  xpos -335
  ypos 2204
 }
push $N3a63aad0
 Expression {
  temp_name0 unpremultA
  temp_expr0 "alpha * ( 1 / alpha )"
  temp_name1 max
  temp_expr1 blue
  expr3 "abs( max ) < \[value parent.drange_near] || abs( max ) > \[value parent.drange_far] ? 0 : isnan(unpremultA) ? 0 : unpremultA"
  name Expression1
  label "distance crop"
  xpos 724
  ypos 1244
 }
 Premult {
  name Premult1
  xpos 724
  ypos 1332
 }
 Dot {
  name Dot9
  xpos 758
  ypos 1640
 }
set N3a669ca0 [stack 0]
push $N3e819330
 Dot {
  name Dot10
  xpos -66
  ypos 1552
 }
set N3a66c160 [stack 0]
 Unpremult {
  name Unpremult1
  xpos 48
  ypos 1549
 }
 Merge2 {
  inputs 2
  operation mask
  name Merge2
  xpos 48
  ypos 1637
 }
 Premult {
  name Premult3
  xpos 48
  ypos 1719
 }
push $N3a66c160
 Switch {
  inputs 2
  which {{parent.clip_color}}
  name Switch2
  xpos -100
  ypos 1828
 }
 Project3D2 {
  inputs 2
  crop {{parent.black_outside}}
  name Project3D2
  xpos -100
  ypos 2224
 }
push $N3e81b8f0
 Dot {
  name Dot2
  xpos 1576
  ypos -84
 }
 Shuffle {
  red black
  green black
  blue black
  alpha black
  name Shuffle1
  label "\[value in]"
  xpos 1542
  ypos 30
 }
 Remove {
  name Remove1
  xpos 1542
  ypos 118
 }
 Reformat {
  type scale
  black_outside true
  name Reformat1
  xpos 1542
  ypos 212
 }
 Expression {
  temp_name0 xpos
  temp_expr0 "( ( x + 0.5 ) / input.width - 0.5) *  \[value global_math.hratio] * abs( \[value parent.drange_far] )"
  temp_name1 ypos
  temp_expr1 "( ( y + 0.5 ) / input.height -0.5 ) * ( \[value global_math.hratio] * abs( \[value parent.drange_far] ) * ( img_dot.height / img_dot.width ) ) * 1 / \[value format.pixel_aspect]"
  temp_name2 zpos
  temp_expr2 "-\[value parent.drange_far]"
  expr0 "( xpos * \[value fb_data.world_matrix.0] + ypos * \[value fb_data.world_matrix.1] ) * \[value fb_data.win_scale.u] + ( \[value global_math.hratio] * abs(zpos) * \[value fb_data.win_translate.u] / 2 )"
  expr1 "( xpos * \[value fb_data.world_matrix.4] + ypos * \[value fb_data.world_matrix.5] ) * \[value fb_data.win_scale.v] + ( \[value global_math.hratio] * abs(zpos) * \[value fb_data.win_translate.v] / 2 )"
  expr2 zpos
  name Expression8
  xpos 1542
  ypos 845
 }
 ColorMatrix {
  matrix {
      {{cam_data.world_matrix.0} {cam_data.world_matrix.1} {cam_data.world_matrix.2}}
      {{cam_data.world_matrix.4} {cam_data.world_matrix.5} {cam_data.world_matrix.6}}
      {{cam_data.world_matrix.8} {cam_data.world_matrix.9} {cam_data.world_matrix.10}}
    }
  name ColorMatrix1
  xpos 1542
  ypos 970
 }
 Add {
  channels rgb
  value {{cam_data.world_matrix.3} {cam_data.world_matrix.7} {cam_data.world_matrix.11} 0}
  name Add1
  xpos 1542
  ypos 1052
 }
 Crop {
  box {{store.fregion} {store.fregion} {store.fregion} {store.fregion}}
  reformat true
  crop false
  name Crop1
  xpos 1542
  ypos 1476
  disable {{!parent.use_focus_region}}
 }
 Dot {
  name Dot4
  xpos 1576
  ypos 2402
 }
push $N3a669ca0
 Crop {
  box {{store.fregion} {store.fregion} {store.fregion} {store.fregion}}
  reformat true
  crop false
  name Crop4
  selected true
  xpos 724
  ypos 1714
  disable {{!parent.use_focus_region}}
 }
 Unpremult {
  name Unpremult3
  xpos 724
  ypos 1851
 }
 Expression {
  temp_name0 nx
  temp_expr0 red
  temp_name1 ny
  temp_expr1 green
  temp_name2 nz
  temp_expr2 blue
  expr0 "( nx * \[value cam_data.world_matrix.0] + ny * \[value cam_data.world_matrix.1] + nz * \[value cam_data.world_matrix.2] ) + \[value cam_data.world_matrix.3]"
  expr1 "( nx * \[value cam_data.world_matrix.4] + ny * \[value cam_data.world_matrix.5] + nz * \[value cam_data.world_matrix.6] ) + \[value cam_data.world_matrix.7]"
  expr2 "( nx * \[value cam_data.world_matrix.8] + ny * \[value cam_data.world_matrix.9] + nz * \[value cam_data.world_matrix.10] ) + \[value cam_data.world_matrix.11]"
  name Expression4
  label "position revert"
  xpos 724
  ypos 1933
 }
 Premult {
  name Premult2
  xpos 724
  ypos 2027
 }
 Merge2 {
  inputs 2
  operation under
  name Merge1
  xpos 724
  ypos 2398
 }
 Card {
  inputs 0
  image_aspect false
  rows {{"img_dot.height * parent.lod"}}
  columns {{"img_dot.width * parent.lod"}}
  name ssmesh
  xpos 343
  ypos 2317
 }
 DisplaceGeo {
  inputs 2
  source "rgb absolute"
  scale 1
  filter_size 1
  name DisplaceGeo
  xpos 343
  ypos 2399
 }
 FrameHold {
  first_frame {{parent.uv_ref_frame}}
  name FrameHold
  xpos 343
  ypos 2479
  disable {{!parent.uv_stabilize}}
 }
 ApplyMaterial {
  inputs 2
  name ApplyMaterial1
  xpos -100
  ypos 2483
 }
 Scene {
  display {{parent.display}}
  name gl_scene
  xpos -90
  ypos 3072
 }
set N3a6ec9e0 [stack 0]
 WriteGeo {
  file_type abc
  name WriteGeo
  xpos 120
  ypos 3093
 }
 Axis {
  inputs 0
  display off
  selectable false
  translate {{"( global_math.pt2.x * cam_data.world_matrix.0(parent.fregion_ref_frame) + global_math.pt2.y * cam_data.world_matrix.1(parent.fregion_ref_frame) + global_math.pt2.z * cam_data.world_matrix.2(parent.fregion_ref_frame) ) + cam_data.world_matrix.3(parent.fregion_ref_frame)"} {"( global_math.pt2.x * cam_data.world_matrix.4(parent.fregion_ref_frame) + global_math.pt2.y * cam_data.world_matrix.5(parent.fregion_ref_frame) + global_math.pt2.z * cam_data.world_matrix.6(parent.fregion_ref_frame) ) + cam_data.world_matrix.7(parent.fregion_ref_frame)"} {"( global_math.pt2.x * cam_data.world_matrix.8(parent.fregion_ref_frame) + global_math.pt2.y * cam_data.world_matrix.9(parent.fregion_ref_frame) + global_math.pt2.z * cam_data.world_matrix.10(parent.fregion_ref_frame) ) + cam_data.world_matrix.11(parent.fregion_ref_frame)"}}
  name right_pt
  xpos -600
  ypos 3218
 }
 CheckerBoard2 {
  inputs 0
  format "256 256 0 0 256 256 1 square_256"
  name CheckerBoard1
  xpos -789
  ypos 2694
 }
 Multiply {
  channels rgb
  value {{parent.crop_point_color.r} {parent.crop_point_color.g} {parent.crop_point_color.b} 1}
  name Multiply
  xpos -789
  ypos 2822
 }
 Clamp {
  channels rgba
  name Clamp1
  xpos -789
  ypos 2905
 }
 Sphere {
  selectable false
  cast_shadow false
  receive_shadow false
  rows 10
  columns 10
  uniform_scale {{parent.crop_point_scale}}
  name Sphere1
  xpos -789
  ypos 2987
  disable {{!show_crop}}
 }
 Dot {
  name Dot24
  xpos -755
  ypos 3065
 }
set N3e919d00 [stack 0]
 Dot {
  name Dot25
  xpos -456
  ypos 3065
 }
 TransformGeo {
  inputs 2
  selectable false
  name TransformGeo2
  xpos -490
  ypos 3238
 }
 Axis {
  inputs 0
  display off
  selectable false
  translate {{"( global_math.pt1.x * cam_data.world_matrix.0(parent.fregion_ref_frame) + global_math.pt1.y * cam_data.world_matrix.1(parent.fregion_ref_frame) + global_math.pt1.z * cam_data.world_matrix.2(parent.fregion_ref_frame) ) + cam_data.world_matrix.3(parent.fregion_ref_frame)"} {"( global_math.pt1.x * cam_data.world_matrix.4(parent.fregion_ref_frame) + global_math.pt1.y * cam_data.world_matrix.5(parent.fregion_ref_frame) + global_math.pt1.z * cam_data.world_matrix.6(parent.fregion_ref_frame) ) + cam_data.world_matrix.7(parent.fregion_ref_frame)"} {"( global_math.pt1.x * cam_data.world_matrix.8(parent.fregion_ref_frame) + global_math.pt1.y * cam_data.world_matrix.9(parent.fregion_ref_frame) + global_math.pt1.z * cam_data.world_matrix.10(parent.fregion_ref_frame) ) + cam_data.world_matrix.11(parent.fregion_ref_frame)"}}
  name left_pt
  xpos -899
  ypos 3220
 }
push $N3e919d00
 TransformGeo {
  inputs 2
  selectable false
  name TransformGeo1
  xpos -789
  ypos 3240
 }
 Scene {
  inputs 2
  selectable false
  name Scene1
  xpos -480
  ypos 3395
 }
 ApplyMaterial {
  display off
  selectable false
  render_mode off
  name material_switch
  xpos -490
  ypos 3523
 }
push $N3a6ec9e0
 Scene {
  inputs 2
  name Scene2
  xpos -90
  ypos 3502
 }
 Output {
  name Output1
  xpos -100
  ypos 4030
 }
 Group {
  inputs 0
  name inverseMatrix
  tile_color 0x337f4cff
  xpos 576
  ypos 780
  addUserKnob {20 tab_general l General}
  addUserKnob {1 knob_path}
  knob_path cam_data.world_matrix
  addUserKnob {26 ""}
  addUserKnob {41 id T id_assign.matrix}
  addUserKnob {26 ""}
  addUserKnob {7 determinant}
  determinant {{"\[value \[value knob_path].\[value id.0]] * ((\[value \[value knob_path].\[value id.4]]*\[value \[value knob_path].\[value id.8]]) - (\[value \[value knob_path].\[value id.5]]*\[value \[value knob_path].\[value id.7]])) - \[value \[value knob_path].\[value id.1]] * ((\[value \[value knob_path].\[value id.3]]*\[value \[value knob_path].\[value id.8]]) - (\[value \[value knob_path].\[value id.5]]*\[value \[value knob_path].\[value id.6]])) + \[value \[value knob_path].\[value id.2]] * ((\[value \[value knob_path].\[value id.3]]*\[value \[value knob_path].\[value id.7]])-(\[value \[value knob_path].\[value id.4]]*\[value \[value knob_path].\[value id.6]]))"}}
  addUserKnob {26 ""}
  addUserKnob {41 cofactor T mtx_cofactor.matrix}
  addUserKnob {26 ""}
  addUserKnob {41 invMatrix T matrix_output.matrix}
  addUserKnob {20 t_VERSION l Version}
  addUserKnob {26 l_VERSION l Version T 1.0}
  addUserKnob {26 l_DATE l "Date Modified" T 2011-11-28}
  addUserKnob {26 l_CHANGELOG l Changelog T "v1.0\n- reveal the calculate output of \n  inverse matrix which is c44matrix\n  and colormatrix doesn't show\n  "}
  addUserKnob {26 l_DEV l "Developed by" T "Mark Joey Tang"}
 }
  Matrix {
   inputs 0
   matrix {
       {0 1 2}
       {4 5 6}
       {8 9 10}
     }
   name id_assign
   xpos -12
   ypos 33
  }
  Matrix {
   inputs 0
   matrix {
       {{"(\[value \[value knob_path].\[value id.4]]*\[value \[value knob_path].\[value id.8]]) - (\[value \[value knob_path].\[value id.5]]*\[value \[value knob_path].\[value id.7]])"} {"(\[value \[value knob_path].\[value id.7]]*\[value \[value knob_path].\[value id.2]]) - (\[value \[value knob_path].\[value id.8]]*\[value \[value knob_path].\[value id.1]])"} {"(\[value \[value knob_path].\[value id.1]]*\[value \[value knob_path].\[value id.5]]) - (\[value \[value knob_path].\[value id.2]]*\[value \[value knob_path].\[value id.4]])"}}
       {{"(\[value \[value knob_path].\[value id.5]]*\[value \[value knob_path].\[value id.6]]) - (\[value \[value knob_path].\[value id.3]]*\[value \[value knob_path].\[value id.8]])"} {"(\[value \[value knob_path].\[value id.8]]*\[value \[value knob_path].\[value id.0]]) - (\[value \[value knob_path].\[value id.6]]*\[value \[value knob_path].\[value id.2]])"} {"(\[value \[value knob_path].\[value id.2]]*\[value \[value knob_path].\[value id.3]]) - (\[value \[value knob_path].\[value id.0]]*\[value \[value knob_path].\[value id.5]])"}}
       {{"(\[value \[value knob_path].\[value id.3]]*\[value \[value knob_path].\[value id.7]]) - (\[value \[value knob_path].\[value id.4]]*\[value \[value knob_path].\[value id.6]])"} {"(\[value \[value knob_path].\[value id.6]]*\[value \[value knob_path].\[value id.1]]) - (\[value \[value knob_path].\[value id.7]]*\[value \[value knob_path].\[value id.0]])"} {"(\[value \[value knob_path].\[value id.0]]*\[value \[value knob_path].\[value id.4]]) - (\[value \[value knob_path].\[value id.1]]*\[value \[value knob_path].\[value id.3]])"}}
     }
   name mtx_cofactor
   xpos 86
   ypos 32
  }
  Matrix {
   inputs 0
   matrix {
       {{"cofactor.0 == 0 || determinant == 0 ? 0 : cofactor.0/determinant"} {"cofactor.1 == 0 || determinant == 0 ? 0 : cofactor.1/determinant"} {"cofactor.2 == 0 || determinant == 0 ? 0 : cofactor.2/determinant"}}
       {{"cofactor.3 == 0 || determinant == 0 ? 0 : cofactor.3/determinant"} {"cofactor.4 == 0 || determinant == 0 ? 0 : cofactor.4/determinant"} {"cofactor.5 == 0 || determinant == 0 ? 0 : cofactor.5/determinant"}}
       {{"cofactor.6 == 0 || determinant == 0 ? 0 : cofactor.6/determinant"} {"cofactor.7 == 0 || determinant == 0 ? 0 : cofactor.7/determinant"} {"cofactor.8 == 0 || determinant == 0 ? 0 : cofactor.8/determinant"}}
     }
   name matrix_output
   xpos 186
   ypos 33
  }
 end_group
 Camera {
  inputs 0
  rotate {0 0 {-parent.cam_winroll}}
  win_translate {{parent.cam_win_translate} {parent.cam_win_translate}}
  win_scale {{parent.cam_win_scale} {parent.cam_win_scale}}
  name fb_data
  xpos -340
  ypos 2087
 }
 NoOp {
  inputs 0
  name store
  xpos -843
  ypos 28
  addUserKnob {20 User}
  addUserKnob {22 fn T "### level define ###\n\ndef getLevel() :\n\tif len(nuke.thisNode().fullName().split('.')) == 1 :\n\t\tggLevel = nuke.root()\n\telse :\n\t\tnodePath = nuke.thisNode().fullName().split('.')\n\t\tnodePath.pop()\n\t\tggLevel = nuke.toNode('.'.join(nodePath))\n\treturn ggLevel\n\n### sample z in 2D ###\n\ndef sample2d() :\n\tthisGRP = nuke.thisGroup()\n\tif thisGRP\['sample_z_status'].value() == '<font color=cyan>\[ ON ]</font>' :\n\t\tsam_co = thisGRP\['sample_point'].getValue()\n\t\tzdata = nuke.toNode('sam_dot').sample('blue', sam_co\[0], sam_co\[1]) * -1\n\t\tthisGRP\['fregion_define_z'].setValue( zdata )" +STARTLINE}
  addUserKnob {15 fregion}
  fregion {{parent.focus_region} {parent.focus_region} {parent.focus_region} {parent.focus_region}}
 }
 NoOp {
  inputs 0
  name global_math
  xpos -842
  ypos -43
  addUserKnob {20 User}
  addUserKnob {7 hratio}
  hratio {{"cam_data.haperture / cam_data.focal"}}
  addUserKnob {7 maxwidth}
  maxwidth {{"hratio * parent.fregion_define_z"}}
  addUserKnob {7 maxheight}
  maxheight {{"hratio * parent.fregion_define_z * ( img_dot.height / img_dot.width )"}}
  addUserKnob {13 pt1}
  pt1 {{"( ( ( maxwidth * ( parent.focus_region.x(parent.fregion_ref_frame) / img_dot.width) ) - ( maxwidth / 2 ) ) * fb_data.world_matrix.0 + ( ( ( maxheight * ( parent.focus_region.y(parent.fregion_ref_frame) / img_dot.height ) ) - ( maxheight / 2 ) ) * 1 / \[value root.format.pixel_aspect] ) * fb_data.world_matrix.1 ) * fb_data.win_scale.u + ( hratio * abs(parent.fregion_define_z) * fb_data.win_translate.u /2 )"} {"( ( ( maxwidth * ( parent.focus_region.x(parent.fregion_ref_frame) / img_dot.width) ) - ( maxwidth / 2 ) ) * fb_data.world_matrix.4 + \n( ( ( maxheight * ( parent.focus_region.y(parent.fregion_ref_frame) / img_dot.height ) ) - ( maxheight / 2 ) ) * 1 / \[value root.format.pixel_aspect] ) * fb_data.world_matrix.5 ) * fb_data.win_scale.v + ( hratio * abs(parent.fregion_define_z) * fb_data.win_translate.v /2 )"} {-parent.fregion_define_z}}
  addUserKnob {13 pt2}
  pt2 {{"( ( ( maxwidth * ( parent.focus_region.r(parent.fregion_ref_frame) / img_dot.width) ) - ( maxwidth / 2 ) ) * fb_data.world_matrix.0 + ( ( ( maxheight * ( parent.focus_region.t(parent.fregion_ref_frame) / img_dot.height ) ) - ( maxheight / 2 ) ) * 1 / \[value root.format.pixel_aspect] ) * fb_data.world_matrix.1 ) * fb_data.win_scale.u + ( hratio * abs(parent.fregion_define_z) * fb_data.win_translate.u /2 )"} {"( ( ( maxwidth * ( parent.focus_region.r(parent.fregion_ref_frame) / img_dot.width) ) - ( maxwidth / 2 ) ) * fb_data.world_matrix.4 + ( ( ( maxheight * ( parent.focus_region.t(parent.fregion_ref_frame) / img_dot.height ) ) - ( maxheight / 2 ) ) * 1 / \[value root.format.pixel_aspect] ) * fb_data.world_matrix.5 ) * fb_data.win_scale.v + ( hratio * abs(parent.fregion_define_z) * fb_data.win_translate.v /2 )"} {-parent.fregion_define_z}}
 }
end_group
Camera2 {
 inputs 0
 translate {{curve x1 -23.73355293 x50 1.828465939 x100 10.79810143} {curve x1 6.752248287 x50 13.82691669 x100 25.23773003} {curve x1 -3.158116341 x50 5.475767136 x100 -12.79232216}}
 rotate {{curve x1 30.63627052 x50 14.22963619 x100 -23.22279344} {curve x1 -44.94124796 x50 19.70681696 x100 76.6501109} {curve x1 0 x50 27.42004885 x100 13.36756642}}
 focal 24
 name Camera4
 xpos 1021
 ypos -217
}
Scene {
 inputs 2
 name Scene4
 xpos 1201
 ypos -75
}
Dot {
 name Dot4
 xpos 1225
 ypos 114
}
Group {
 inputs 0
 name render_with_pworld1
 xpos -824
 ypos 836
 postage_stamp true
}
 Camera2 {
  inputs 0
  translate {{curve x1 -23.73355293 x50 1.828465939 x100 10.79810143} {curve x1 6.752248287 x50 13.82691669 x100 25.23773003} {curve x1 -3.158116341 x50 5.475767136 x100 -12.79232216}}
  rotate {{curve x1 30.63627052 x50 14.22963619 x100 -23.22279344} {curve x1 -44.94124796 x50 19.70681696 x100 76.6501109} {curve x1 0 x50 27.42004885 x100 13.36756642}}
  focal 24
  name Camera1
  xpos 241
  ypos -567
 }
 Dot {
  name Dot2
  xpos 351
  ypos -543
 }
set N81f00770 [stack 0]
 Dot {
  name Dot3
  xpos 351
  ypos -428
 }
push $N81f00770
 CheckerBoard2 {
  inputs 0
  name CheckerBoard1
  xpos 406
  ypos -928
 }
 Dot {
  name Dot1
  xpos 440
  ypos -814
 }
set N81f09620 [stack 0]
 Dot {
  name Dot5
  xpos 553
  ypos -814
 }
set N81f0b9a0 [stack 0]
 Dot {
  name Dot4
  xpos 693
  ypos -814
 }
 Multiply {
  channels rgb
  value {0 1 1 1}
  name Multiply3
  xpos 659
  ypos -756
 }
 Cube {
  rows 1
  columns 1
  separate_faces false
  translate {-7.849998951 18.14999962 -19.00000191}
  rotate {0 0 45.93192592}
  uniform_scale 7
  name Cube1
  xpos 659
  ypos -676
 }
push $N81f0b9a0
 Multiply {
  channels rgb
  value {1 0 1 1}
  name Multiply2
  xpos 519
  ypos -750
 }
 Sphere {
  translate {-15.00000191 16.45000076 -17.79999924}
  scaling {3.183291435 1 2.618715286}
  uniform_scale 2
  name Sphere1
  xpos 519
  ypos -670
 }
push $N81f09620
 Multiply {
  channels rgb
  value {1 1 0 1}
  name Multiply1
  xpos 406
  ypos -754
 }
 Cylinder {
  rows 1
  close_top true
  close_bottom true
  translate {-3.149999619 19.64999962 -13.89999866}
  rotate {52.26493538 0 32.53306187}
  scaling {1 4.216488838 1}
  uniform_scale 2
  name Cylinder1
  xpos 406
  ypos -673
 }
 Scene {
  inputs 4
  name Scene1
  xpos 416
  ypos -567
 }
 Reformat {
  inputs 0
  type "to box"
  box_width 1280
  box_height 720
  box_fixed true
  name Reformat1
  xpos 530
  ypos -431
 }
 ScanlineRender {
  inputs 3
  conservative_shader_sampling false
  motion_vectors_type off
  MB_channel none
  output_shader_vectors true
  P_channel pworld
  name ScanlineRender1
  xpos 406
  ypos -431
 }
 Output {
  name Output1
  xpos 406
  ypos -331
 }
end_group
Group {
 name SSMesh1
 tile_color 0x5c9e83ff
 label "<font color=cyan>Geo Output</font>"
 xpos -824
 ypos 1008
 addUserKnob {20 tab_general l General}
 addUserKnob {22 set_link l "link to selected camera" t "Click to link selected camera by expression. This tool will get the focal, haperture and world matrix from selected camera to generate" T "def getLevel() :\n\t### level define ###\n\tif len(nuke.thisNode().fullName().split('.')) == 1 :\n\t\t  ggLevel = nuke.root()\n\telse :\n\t\t  nodePath = nuke.thisNode().fullName().split('.')\n\t\t  nodePath.pop()\n\t\t  ggLevel = nuke.toNode('.'.join(nodePath))\n\treturn ggLevel\n\nroot = getLevel()\nthisGRP = nuke.thisGroup()\n\nmainKnobs = \['world_matrix','cam_focal','cam_haperture','cam_win_translate','cam_win_scale','cam_winroll']\ndefaultKnobs = \{\n\t\t\t'world matrix' : 'world_matrix',\n\t\t\t'focal length' : 'focal',\n\t\t\t'horiz aperture' : 'haperture',\n\t\t\t'window translate' : 'win_translate',\n\t\t\t'window scale' : 'win_scale',\n\t\t\t'window roll' : 'winroll'\n\t\t\t\}\nselNodeKnobs = \[]\nmissingKnob = \[]\n\ntry :\n\twith root :\n\t\tselNode = nuke.selectedNode()\n\n\tfor knob in selNode.knobs() :\n\t\tselNodeKnobs.append( knob )\n\n\tselNodeKnobs.sort()\n\n\tfor key,value in defaultKnobs.items() :\n\t\tif value not in selNodeKnobs :\n\t\t\tmissingKnob.append( key )\n\n\tif not len(missingKnob) :\n\t\twith root :\n\t\t\tCAMnode = selNode.name()\n\t\t\tthisGRP\[mainKnobs\[0]].setExpression('\{0\}.world_matrix'.format(CAMnode))\n\t\t\tthisGRP\[mainKnobs\[1]].setExpression('\{0\}.focal'.format(CAMnode))\n\t\t\tthisGRP\[mainKnobs\[2]].setExpression('\{0\}.haperture'.format(CAMnode))\n\t\t\tthisGRP\[mainKnobs\[3]].setExpression('\{0\}.win_translate'.format(CAMnode))\n\t\t\tthisGRP\[mainKnobs\[4]].setExpression('\{0\}.win_scale'.format(CAMnode))\n\t\t\tthisGRP\[mainKnobs\[5]].setExpression('\{0\}.winroll'.format(CAMnode))\n\telse :\n\t\tp = nuke.Panel('Select knobs :')\n\t\tp.addBooleanCheckBox( '<b>Unable to find the default knobs. Please use the pulldown menu below to define the knob manually.</b>' , False)\n\t\tfor rk in missingKnob :\n\t\t\tp.addEnumerationPulldown( rk, ' '.join( selNodeKnobs ) )\n\n\t\tif p.show() :\n\t\t\ttry :\n\t\t\t\tfor key,value in defaultKnobs.items() :\n\t\t\t\t\tif p.value( key ) != None :\n\t\t\t\t\t\tdefaultKnobs\[key] = p.value( key )\n\t\t\texcept :\n\t\t\t\tpass\n\n\t\t\twith root :\n\t\t\t\tCAMnode = selNode.name()\n\t\t\t\tthisGRP\[mainKnobs\[0]].setExpression('\{0\}.\{1\}'.format(CAMnode, defaultKnobs\['world matrix']))\n\t\t\t\tthisGRP\[mainKnobs\[1]].setExpression('\{0\}.\{1\}'.format(CAMnode, defaultKnobs\['focal length']))\n\t\t\t\tthisGRP\[mainKnobs\[2]].setExpression('\{0\}.\{1\}'.format(CAMnode, defaultKnobs\['horiz aperture']))\n\t\t\t\tthisGRP\[mainKnobs\[3]].setExpression('\{0\}.\{1\}'.format(CAMnode, defaultKnobs\['window translate']))\n\t\t\t\tthisGRP\[mainKnobs\[4]].setExpression('\{0\}.\{1\}'.format(CAMnode, defaultKnobs\['window scale']))\n\t\t\t\tthisGRP\[mainKnobs\[5]].setExpression('\{0\}.\{1\}'.format(CAMnode, defaultKnobs\['window roll']))\nexcept :\n\tnuke.message('no node selected.')" +STARTLINE}
 addUserKnob {22 remove_link l "remove linked expression" t "Remove the linked camera expression but won't reset any data." -STARTLINE T "thisGRP = nuke.thisGroup()\nmainKnobs = \['world_matrix','cam_focal','cam_haperture','cam_win_translate','cam_win_scale','cam_winroll']\n\nfor knob in thisGRP.knobs() :\n\tif mainKnobs.count(knob) != 0 :\n\t\t thisGRP\[knob].clearAnimated()"}
 addUserKnob {20 cam_data_grp l "CAMERA DATA" n 1}
 cam_data_grp 0
 addUserKnob {7 cam_focal l "focal length" R 5 100}
 cam_focal {{Camera5.focal}}
 addUserKnob {7 cam_haperture l "horiz aperture" R 0.1 50}
 cam_haperture {{Camera5.haperture}}
 addUserKnob {30 cam_win_translate l "window translate"}
 cam_win_translate {{Camera5.win_translate} {Camera5.win_translate}}
 addUserKnob {30 cam_win_scale l "window scale"}
 cam_win_scale {{Camera5.win_scale} {Camera5.win_scale}}
 addUserKnob {7 cam_winroll l "window roll" R -45 45}
 cam_winroll {{Camera5.winroll}}
 addUserKnob {41 world_matrix l "world matrix" T cam_data.matrix}
 addUserKnob {20 endGroup_1 l endGroup n -1}
 addUserKnob {26 spacer_5 l "" +STARTLINE T <br>}
 addUserKnob {26 title_basic l "<b>BASIC SETTING</b>"}
 addUserKnob {4 display l "3D display" t "How to draw in 3D preview. The viewer can override this setting." M {off wireframe soild solid+wireframe textured textured+wireframe "" "" ""}}
 display textured
 addUserKnob {4 data_type l "data type" t "data type\nUsing one of these data to convert into 3D mesh.\n\nPosition\nSupported world space or camera space position data.\n\nDepth (normalized far=0)\nNormalized depth data, which is same as depth data output by ScanlineRender.\n\nDeep / Depth (direct)\nRaw camera depth data. If using deep, need to convert DeepToImage first, and selected deep channel on 'channels' knob." M {"position (world space)" "position (camera space)" "depth (normalized far=0)" "deep / depth (direct)" "" "" ""}}
 addUserKnob {41 channels t "Select which channel represented on selected data type." T shuffle_data.in}
 addUserKnob {6 unpm l unpremult t "3D data pass should be unpremult with alpha before process." -STARTLINE}
 unpm true
 addUserKnob {26 spacer_4 l "" +STARTLINE T <br>}
 addUserKnob {7 lod l "mesh LOD" t "Level of Details\n\nIf this value set to 1.0, subdivision of the mesh  1:1 to the data available in the resolution. Which mean 1 face of the mesh equal to 1 pixel.\n\nIf this value set to 1.0, it will slow down the render process.\n\nHighly recommend to use 0.1 - 0.5 if high resolution mesh details is not concern."}
 lod 0.1
 addUserKnob {41 filter_size l "filter size" T DisplaceGeo.filter_size}
 addUserKnob {41 filter T DisplaceGeo.filter}
 addUserKnob {26 spacer_2 l "" +STARTLINE T <br>}
 addUserKnob {26 title_drange l "" +STARTLINE T "distance range"}
 addUserKnob {7 drange_near l near t "clip the mesh in the min value in terms of depth." R 0 10000}
 drange_near 14
 addUserKnob {7 drange_far l far t "clip the mesh in the max value in terms of depth." R 0 10000}
 drange_far 17
 addUserKnob {6 clip_color l "distance clip on color" t "Apply the distance clip on colored texture." +STARTLINE}
 clip_color true
 addUserKnob {26 spacer_3 l "" +STARTLINE T <br>}
 addUserKnob {26 title_export l <b>EXPORT</b>}
 addUserKnob {41 file t "only support *.abc file extension (alembric) ." T WriteGeo.file}
 addUserKnob {22 export_geo l "Export Geo" T "def exportGeo() :\n\twgeo = nuke.toNode('WriteGeo')\n\twgeo\['Execute'].execute()\n\nthisGRP = nuke.thisGroup()\nfilepath = thisGRP\['file'].getValue()\n\nif not len(filepath) :\n\tnuke.message('file path is empty. Process denied.')\nelif not filepath.split('.')\[-1:]\[0].lower() == 'abc' :\n\tif nuke.ask('File extension invalue. Only support render <font color=orange>*.abc</font> . Do you want this tool to fix it and process ?') :\n\t\tthisGRP\['file'].setValue( thisGRP\['file'].getValue() + '.abc' )\n\t\texportGeo()\nelse :\n\texportGeo()" +STARTLINE}
 addUserKnob {22 import_geo l "Import Geo" -STARTLINE T "prefx = nuke.toNode('preferences')\['GridWidth'].value()\nthisGRP = nuke.thisGroup()\ngoStore = nuke.toNode('store')\ngoStore\['fn'].execute()\n\nroot = getLevel()\n\nwith root :\n\trgeo = nuke.nodes.ReadGeo2( file=thisGRP\['file'].getValue() )\n\trgeo.setXYpos( int( thisGRP\['xpos'].getValue() + prefx ) , int( thisGRP\['ypos'].getValue() ) )"}
 addUserKnob {20 tab_misc l Miscellaneous}
 addUserKnob {26 title_focus_region l "<b>FOCUS REGION</b>"}
 addUserKnob {41 use_focus_region l "use focus region" t "use focus region to generate SSMesh in specific area. Save resources and possible to work with high LOD mesh." T menu2.use_focus_region}
 addUserKnob {15 focus_region l "focus region" t "Set focus region in screen space. These values are 2D coordinate." +DISABLED}
 focus_region {0 0 1280 720}
 addUserKnob {26 spacer_1 l "" +STARTLINE T <br>}
 addUserKnob {3 fregion_ref_frame l "ref frame" t "set reference frame for tracking focus region. 'focus region' & 'define z' will apply on this reference frame and process the tracking." +DISABLED}
 fregion_ref_frame 1
 addUserKnob {22 fregion_set_frame l "set current frame" t "set current frame for focus region reference frame." -STARTLINE +DISABLED T "nuke.thisGroup()\['fregion_ref_frame'].setValue( nuke.frame() )"}
 addUserKnob {12 sample_point l "sample position" t "Toggle 'sample z' in 2D to enable this 2D sample coordinate." +DISABLED}
 addUserKnob {22 sample_z_toggle l "sample z in 2D" t "'sample z' is only works for sample value purpose. After sample is done, must turn off sample function." -STARTLINE +DISABLED T "thisGRP = nuke.thisGroup()\nszstatus = thisGRP\['sample_z_status'].value()\n\nstatus = \['<font color=red>\[ OFF ]</font>','<font color=cyan>\[ ON ]</font>']\n\nif szstatus == status\[0] :\n\tthisGRP\['sample_z_status'].setValue( status\[1] )\n\tthisGRP\['sample_point'].setEnabled(True)\n\tthisGRP\['updateUI'].setValue(\"goStore = nuke.toNode(\\'store\\')\\ngoStore\[\\'fn\\'].execute()\\nsample2d()\")\nelse :\n\tthisGRP\['sample_z_status'].setValue( status\[0] )\n\tthisGRP\['sample_point'].setEnabled(False)\n\tthisGRP\['updateUI'].setValue('')"}
 addUserKnob {26 sample_z_status l "" -STARTLINE +DISABLED T "<font color=red>\[ OFF ]</font>"}
 addUserKnob {7 fregion_define_z l "define z" t "Define the z value on reference frame. Can use 'sample z in 2D' to get this value." +DISABLED R 0 10000}
 addUserKnob {22 track_focus_region l "<b>\[ track focus region ]</b>" t "Use the set focus region on reference frame to track with camera in 3D space.\n\n* project setting need to be same as image resolution to get the correct result." +DISABLED T "rootST = int( nuke.root()\['first_frame'].getValue() )\nrootED = int( nuke.root()\['last_frame'].getValue() )\n\ngetFrame = nuke.getFramesAndViews( 'frame range', str( rootST ) + '-' + str( rootED ) )\n\ntry :\n\tframeST = int( getFrame\[0].replace( ' ' , '' ).split('-')\[0] )\n\tframeED = int( getFrame\[0].replace( ' ' , '' ).split('-')\[1] )\n\n\tthisGRP = nuke.thisGroup()\n\trefframe = int( thisGRP\['fregion_ref_frame'].getValue() )\n\tcam = nuke.toNode('cam_data')\n\tpt1 = nuke.toNode('left_pt')\['translate'].getValue()\n\tpt2 = nuke.toNode('right_pt')\['translate'].getValue()\n\n\tct_hack = nuke.nodes.CurveTool()\n\n\twith nuke.root() :\n\n\t\tif frameED - frameST != 0 :\n\t\t\tthisGRP\['focus_region'].clearAnimated()\n\t\t\ttempbuffer1 = thisGRP\['focus_region'].getValue()\n\t\t\tthisGRP\['focus_region'].setAnimated()\n\t\t\tthisGRP\['focus_region'].setValueAt( tempbuffer1\[0] , refframe , 0 )\n\t\t\tthisGRP\['focus_region'].setValueAt( tempbuffer1\[1] , refframe , 1 )\n\t\t\tthisGRP\['focus_region'].setValueAt( tempbuffer1\[2] , refframe , 2 )\n\t\t\tthisGRP\['focus_region'].setValueAt( tempbuffer1\[3] , refframe , 3 )\n\n\t\tfor trackframe in xrange( frameST, frameED+1 , 1 ) :\n\t\t\tnuke.execute( ct_hack, trackframe, trackframe )\n\t\t\tthisGRP\['focus_region'].setValueAt( nukescripts.snap3d.projectPoint( cam, pt1 )\[0] , trackframe , 0 )\n\t\t\tthisGRP\['focus_region'].setValueAt( nukescripts.snap3d.projectPoint( cam, pt1 )\[1] , trackframe , 1 )\n\t\t\tthisGRP\['focus_region'].setValueAt( nukescripts.snap3d.projectPoint( cam, pt2 )\[0] , trackframe , 2 )\n\t\t\tthisGRP\['focus_region'].setValueAt( nukescripts.snap3d.projectPoint( cam, pt2 )\[1] , trackframe , 3 )\n\n\tnuke.delete( ct_hack )\nexcept :\n    pass" +STARTLINE}
 addUserKnob {26 spacer_6 l "" +STARTLINE T <br>}
 addUserKnob {20 grp_crop_preview l "3D crop preview" +DISABLED n 1}
 grp_crop_preview 0
 addUserKnob {6 show_crop l "show crop point" t "It will show 2 spheres for the crop in 3D space. They set in the place which is where you set the focus region in screen space and defined by z." +DISABLED +STARTLINE}
 addUserKnob {7 crop_point_scale l scale t "Scale the preview crop points (spheres)." +DISABLED}
 crop_point_scale 0.3
 addUserKnob {18 crop_point_color l color t "change color of the crop points (spheres)." +DISABLED}
 crop_point_color 1
 addUserKnob {6 crop_point_color_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 crop_point_color_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 crop_point_color_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 crop_point_color_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 crop_point_color_panelDropped_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 crop_point_color_panelDropped_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 crop_point_color_panelDropped_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {20 endGroup n -1}
 addUserKnob {26 spacer l "" +STARTLINE T <br>}
 addUserKnob {26 title_uv l <b>UV</b>}
 addUserKnob {41 uv_stabilize l "uv stabilize" t "Turn this on if you need to stabilize in UV space. During UV stabilize on, the geo will not be animated. Set reference frame under 'mesh ref frame'." T menu1.uv_stabilize}
 addUserKnob {3 uv_ref_frame l "mesh ref frame" t "Select the frame number that will have identity geo shaped for UV texturing." +DISABLED}
 uv_ref_frame 1001
 addUserKnob {22 uv_set_frame l "set current frame" -STARTLINE +DISABLED T "nuke.thisGroup()\['uv_ref_frame'].setValue( nuke.frame() )"}
 addUserKnob {6 black_outside l "black outside" t "black outside the UV texture." +DISABLED +STARTLINE}
 black_outside true
 addUserKnob {20 t_VERSION l Version}
 addUserKnob {26 l_VERSION l Version T 1.3}
 addUserKnob {26 l_DATE l "Date Modified" T 2019-11-08}
 addUserKnob {26 l_CHANGELOG l Changelog T "1.3\n- camera window supported\n- anamophic project supported\n- fix the conflict of 'force region' and 'UV stabilize'.\n  can use both at the same time now.\n\n1.2\n- removed unuse camera link knobs\n- added focus region, so mesh can be\n  form in specific area/object to save\n  resources for higher LOD\n\n1.1\n- fix the missing line on 'Export Geo' \n  button\n\n1.0\n- create mesh/geo in screen space\n  using position/depth/deep data"}
 addUserKnob {26 l_DEV l "Developed by" T "<a href=\"https://facebook.com/MJTLab\"><font color=orange>Mark Joey Tang</font></a>"}
}
 BackdropNode {
  inputs 0
  name BackdropNode1
  tile_color 0xff
  label "don't touch"
  note_font_size 32
  xpos -1142
  ypos -169
  bdwidth 202
  bdheight 478
 }
 BackdropNode {
  inputs 0
  name BackdropNode2
  tile_color 0x4c4c4cff
  label bin
  note_font_size 32
  xpos -899
  ypos -170
  bdwidth 200
  bdheight 280
 }
 Input {
  inputs 0
  name img
  xpos -100
  ypos -184
 }
 Dot {
  name img_dot
  xpos -66
  ypos -83
 }
set N5a5ad900 [stack 0]
 Dot {
  name Dot3
  xpos 758
  ypos -83
 }
set N5a5afdc0 [stack 0]
 Shuffle {
  in pworld
  in2 alpha
  alpha red2
  name shuffle_data
  label "\[value in]"
  xpos 724
  ypos -32
 }
 Unpremult {
  name Unpremult_data
  xpos 724
  ypos 62
  disable {{!parent.unpm}}
 }
 Dot {
  name Dot5
  xpos 758
  ypos 700
 }
set N5a6112f0 [stack 0]
 Dot {
  name Dot6
  xpos 928
  ypos 700
 }
set N5a613520 [stack 0]
 Dot {
  name Dot7
  xpos 1106
  ypos 700
 }
set N5a6159e0 [stack 0]
 Dot {
  name Dot8
  xpos 1260
  ypos 700
 }
 Expression {
  temp_name0 dvalue
  temp_expr0 red
  temp_name1 xpos
  temp_expr1 "( ( x + 0.5 ) / input.width - 0.5 ) * \[value global_math.hratio] * abs( dvalue )"
  temp_name2 ypos
  temp_expr2 "( ( y + 0.5 ) / input.height - 0.5 ) * ( \[value global_math.hratio] * abs( dvalue ) * ( img_dot.height / img_dot.width ) ) * 1 / \[value format.pixel_aspect]"
  temp_name3 zpos
  temp_expr3 "- dvalue"
  expr0 "( xpos * \[value fb_data.world_matrix.0] + ypos * \[value fb_data.world_matrix.1] ) * \[value fb_data.win_scale.u] + ( \[value global_math.hratio] * abs(zpos) * \[value fb_data.win_translate.u] / 2 )"
  expr1 "( xpos * \[value fb_data.world_matrix.4] + ypos * \[value fb_data.world_matrix.5] ) * \[value fb_data.win_scale.v] + ( \[value global_math.hratio] * abs(zpos) * \[value fb_data.win_translate.v] / 2 )"
  expr2 zpos
  name Expression9
  xpos 1226
  ypos 774
 }
 Dot {
  name Dot16
  xpos 1260
  ypos 889
 }
push $N5a6159e0
 Expression {
  temp_name0 dvalue
  temp_expr0 "1 / red"
  temp_name1 xpos
  temp_expr1 "( ( x + 0.5 ) / input.width - 0.5 ) * \[value global_math.hratio] * abs( dvalue )"
  temp_name2 ypos
  temp_expr2 "( ( y + 0.5 ) / input.height - 0.5 ) * ( \[value global_math.hratio] * abs( dvalue ) * ( img_dot.height / img_dot.width ) ) * 1 / \[value format.pixel_aspect]"
  temp_name3 zpos
  temp_expr3 "- dvalue"
  expr0 "( xpos * \[value fb_data.world_matrix.0] + ypos * \[value fb_data.world_matrix.1] ) * \[value fb_data.win_scale.u] + ( \[value global_math.hratio] * abs(zpos) * \[value fb_data.win_translate.u] / 2 )"
  expr1 "( xpos * \[value fb_data.world_matrix.4] + ypos * \[value fb_data.world_matrix.5] ) * \[value fb_data.win_scale.v] + ( \[value global_math.hratio] * abs(zpos) * \[value fb_data.win_translate.v] / 2 )"
  expr2 zpos
  name Expression6
  xpos 1072
  ypos 774
 }
 Dot {
  name Dot17
  xpos 1106
  ypos 863
 }
push $N5a613520
 Expression {
  expr2 -blue
  name Expression7
  label "fix z"
  xpos 894
  ypos 774
 }
 Dot {
  name Dot18
  xpos 928
  ypos 876
 }
push $N5a6112f0
 Expression {
  temp_name0 nx
  temp_expr0 "red - cam_data.world_matrix.3"
  temp_name1 ny
  temp_expr1 "green - cam_data.world_matrix.7"
  temp_name2 nz
  temp_expr2 "blue - cam_data.world_matrix.11"
  expr0 "nx * \[value inverseMatrix.invMatrix.0] + ny * \[value inverseMatrix.invMatrix.1] + nz * \[value inverseMatrix.invMatrix.2]"
  expr1 "nx * \[value inverseMatrix.invMatrix.3] + ny * \[value inverseMatrix.invMatrix.4] + nz * \[value inverseMatrix.invMatrix.5]"
  expr2 "nx * \[value inverseMatrix.invMatrix.6] + ny * \[value inverseMatrix.invMatrix.7] + nz * \[value inverseMatrix.invMatrix.8]"
  name Expression3
  label "position invert"
  xpos 724
  ypos 774
 }
 Switch {
  inputs 4
  which {{parent.data_type}}
  name Switch1
  xpos 724
  ypos 984
 }
 Dot {
  name Dot13
  xpos 758
  ypos 1113
 }
set N6a7cda20 [stack 0]
 Dot {
  name sam_dot
  xpos 551
  ypos 1113
 }
 NoOp {
  inputs 0
  name menu1
  knobChanged "\nthisGRP = nuke.thisGroup()\nif thisGRP\['uv_stabilize'].getValue() == 1 :\n    thisGRP\['uv_ref_frame'].setEnabled(True)\n    thisGRP\['uv_set_frame'].setEnabled(True)\n    thisGRP\['black_outside'].setEnabled(True)\nelse :\n    thisGRP\['uv_ref_frame'].setEnabled(False)\n    thisGRP\['uv_set_frame'].setEnabled(False)\n    thisGRP\['black_outside'].setEnabled(False)\n"
  xpos -1085
  ypos -42
  addUserKnob {20 User}
  addUserKnob {6 uv_stabilize l "uv stabilize" +STARTLINE}
 }
 NoOp {
  inputs 0
  name menu2
  onCreate "\nthisGRP = nuke.thisGroup()\nfregion_knobs = \['focus_region','fregion_define_z','sample_z_toggle','sample_z_status','sample_point','fregion_ref_frame','fregion_set_frame','track_focus_region','grp_crop_preview','show_crop','crop_point_scale','crop_point_color']\n\nthisGRP\[fregion_knobs\[4]].setEnabled(True)\n\nif thisGRP\['use_focus_region'].getValue()  == 0 :\n    for i in fregion_knobs :\n        thisGRP\[i].setEnabled(False)\n    thisGRP\[fregion_knobs\[3]].setValue( '<font color=red>\[ OFF ]</font>' )\n    thisGRP\['updateUI'].setValue('')\n    nuke.toNode('material_switch')\['disable'].setValue(0)\nelse :\n    for i in fregion_knobs :\n        if i != 'sample_point' :\n            thisGRP\[i].setEnabled(True)\n        else :\n            thisGRP\[i].setEnabled(False)\n    nuke.toNode('material_switch')\['disable'].setValue(1)\n"
  knobChanged "\nthisGRP = nuke.thisGroup()\nfregion_knobs = \['focus_region','fregion_define_z','sample_z_toggle','sample_z_status','sample_point','fregion_ref_frame','fregion_set_frame','track_focus_region','grp_crop_preview','show_crop','crop_point_scale','crop_point_color']\n\nif thisGRP\['use_focus_region'].getValue()  == 0 :\n    for i in fregion_knobs :\n        thisGRP\[i].setEnabled(False)\n    thisGRP\[fregion_knobs\[3]].setValue( '<font color=red>\[ OFF ]</font>' )\n    thisGRP\['updateUI'].setValue('')\n    nuke.toNode('material_switch')\['disable'].setValue(0)\nelse :\n    for i in fregion_knobs :\n        if i != 'sample_point' :\n            thisGRP\[i].setEnabled(True)\n    nuke.toNode('material_switch')\['disable'].setValue(1)\n"
  xpos -1085
  ypos 25
  addUserKnob {20 User}
  addUserKnob {6 use_focus_region l "use focus region" +STARTLINE}
 }
 Camera {
  inputs 0
  display off
  selectable false
  useMatrix true
  matrix {
      {{Camera5.world_matrix} {Camera5.world_matrix} {Camera5.world_matrix} {Camera5.world_matrix}}
      {{Camera5.world_matrix} {Camera5.world_matrix} {Camera5.world_matrix} {Camera5.world_matrix}}
      {{Camera5.world_matrix} {Camera5.world_matrix} {Camera5.world_matrix} {Camera5.world_matrix}}
      {{Camera5.world_matrix} {Camera5.world_matrix} {Camera5.world_matrix} {Camera5.world_matrix}}
    }
  focal {{parent.cam_focal}}
  haperture {{cam_haperture}}
  name cam_data
  xpos -335
  ypos 2204
 }
push $N6a7cda20
 Expression {
  temp_name0 unpremultA
  temp_expr0 "alpha * ( 1 / alpha )"
  temp_name1 max
  temp_expr1 blue
  expr3 "abs( max ) < \[value parent.drange_near] || abs( max ) > \[value parent.drange_far] ? 0 : isnan(unpremultA) ? 0 : unpremultA"
  name Expression1
  label "distance crop"
  xpos 724
  ypos 1244
 }
 Premult {
  name Premult1
  xpos 724
  ypos 1332
 }
 Dot {
  name Dot9
  xpos 758
  ypos 1640
 }
set N50059f30 [stack 0]
push $N5a5ad900
 Dot {
  name Dot10
  xpos -66
  ypos 1552
 }
set N5a5d2510 [stack 0]
 Unpremult {
  name Unpremult1
  xpos 48
  ypos 1549
 }
 Merge2 {
  inputs 2
  operation mask
  name Merge2
  xpos 48
  ypos 1637
 }
 Premult {
  name Premult3
  xpos 48
  ypos 1719
 }
push $N5a5d2510
 Switch {
  inputs 2
  which {{parent.clip_color}}
  name Switch2
  xpos -100
  ypos 1828
 }
 Project3D2 {
  inputs 2
  crop {{parent.black_outside}}
  name Project3D2
  xpos -100
  ypos 2224
 }
push $N5a5afdc0
 Dot {
  name Dot2
  xpos 1576
  ypos -84
 }
 Shuffle {
  red black
  green black
  blue black
  alpha black
  name Shuffle1
  label "\[value in]"
  xpos 1542
  ypos 30
 }
 Remove {
  name Remove1
  xpos 1542
  ypos 118
 }
 Reformat {
  type scale
  black_outside true
  name Reformat1
  xpos 1542
  ypos 212
 }
 Expression {
  temp_name0 xpos
  temp_expr0 "( ( x + 0.5 ) / input.width - 0.5) *  \[value global_math.hratio] * abs( \[value parent.drange_far] )"
  temp_name1 ypos
  temp_expr1 "( ( y + 0.5 ) / input.height -0.5 ) * ( \[value global_math.hratio] * abs( \[value parent.drange_far] ) * ( img_dot.height / img_dot.width ) ) * 1 / \[value format.pixel_aspect]"
  temp_name2 zpos
  temp_expr2 "-\[value parent.drange_far]"
  expr0 "( xpos * \[value fb_data.world_matrix.0] + ypos * \[value fb_data.world_matrix.1] ) * \[value fb_data.win_scale.u] + ( \[value global_math.hratio] * abs(zpos) * \[value fb_data.win_translate.u] / 2 )"
  expr1 "( xpos * \[value fb_data.world_matrix.4] + ypos * \[value fb_data.world_matrix.5] ) * \[value fb_data.win_scale.v] + ( \[value global_math.hratio] * abs(zpos) * \[value fb_data.win_translate.v] / 2 )"
  expr2 zpos
  name Expression8
  xpos 1542
  ypos 845
 }
 ColorMatrix {
  matrix {
      {{cam_data.world_matrix.0} {cam_data.world_matrix.1} {cam_data.world_matrix.2}}
      {{cam_data.world_matrix.4} {cam_data.world_matrix.5} {cam_data.world_matrix.6}}
      {{cam_data.world_matrix.8} {cam_data.world_matrix.9} {cam_data.world_matrix.10}}
    }
  name ColorMatrix1
  xpos 1542
  ypos 970
 }
 Add {
  channels rgb
  value {{cam_data.world_matrix.3} {cam_data.world_matrix.7} {cam_data.world_matrix.11} 0}
  name Add1
  xpos 1542
  ypos 1052
 }
 Crop {
  box {{store.fregion} {store.fregion} {store.fregion} {store.fregion}}
  reformat true
  crop false
  name Crop1
  xpos 1542
  ypos 1476
  disable {{!parent.use_focus_region}}
 }
 Dot {
  name Dot4
  xpos 1576
  ypos 2402
 }
push $N50059f30
 Crop {
  box {{store.fregion} {store.fregion} {store.fregion} {store.fregion}}
  reformat true
  crop false
  name Crop4
  selected true
  xpos 724
  ypos 1714
  disable {{!parent.use_focus_region}}
 }
 Unpremult {
  name Unpremult3
  xpos 724
  ypos 1851
 }
 Expression {
  temp_name0 nx
  temp_expr0 red
  temp_name1 ny
  temp_expr1 green
  temp_name2 nz
  temp_expr2 blue
  expr0 "( nx * \[value cam_data.world_matrix.0] + ny * \[value cam_data.world_matrix.1] + nz * \[value cam_data.world_matrix.2] ) + \[value cam_data.world_matrix.3]"
  expr1 "( nx * \[value cam_data.world_matrix.4] + ny * \[value cam_data.world_matrix.5] + nz * \[value cam_data.world_matrix.6] ) + \[value cam_data.world_matrix.7]"
  expr2 "( nx * \[value cam_data.world_matrix.8] + ny * \[value cam_data.world_matrix.9] + nz * \[value cam_data.world_matrix.10] ) + \[value cam_data.world_matrix.11]"
  name Expression4
  label "position revert"
  xpos 724
  ypos 1933
 }
 Premult {
  name Premult2
  xpos 724
  ypos 2027
 }
 Merge2 {
  inputs 2
  operation under
  name Merge1
  xpos 724
  ypos 2398
 }
 Card {
  inputs 0
  image_aspect false
  rows {{"img_dot.height * parent.lod"}}
  columns {{"img_dot.width * parent.lod"}}
  name ssmesh
  xpos 343
  ypos 2317
 }
 DisplaceGeo {
  inputs 2
  source "rgb absolute"
  scale 1
  filter_size 1
  name DisplaceGeo
  xpos 343
  ypos 2399
 }
 FrameHold {
  first_frame {{parent.uv_ref_frame}}
  name FrameHold
  xpos 343
  ypos 2479
  disable {{!parent.uv_stabilize}}
 }
 ApplyMaterial {
  inputs 2
  name ApplyMaterial1
  xpos -100
  ypos 2483
 }
 Scene {
  display {{parent.display}}
  name gl_scene
  xpos -90
  ypos 3072
 }
set N5a6c1bb0 [stack 0]
 WriteGeo {
  file_type abc
  name WriteGeo
  xpos 120
  ypos 3093
 }
 Axis {
  inputs 0
  display off
  selectable false
  translate {{"( global_math.pt2.x * cam_data.world_matrix.0(parent.fregion_ref_frame) + global_math.pt2.y * cam_data.world_matrix.1(parent.fregion_ref_frame) + global_math.pt2.z * cam_data.world_matrix.2(parent.fregion_ref_frame) ) + cam_data.world_matrix.3(parent.fregion_ref_frame)"} {"( global_math.pt2.x * cam_data.world_matrix.4(parent.fregion_ref_frame) + global_math.pt2.y * cam_data.world_matrix.5(parent.fregion_ref_frame) + global_math.pt2.z * cam_data.world_matrix.6(parent.fregion_ref_frame) ) + cam_data.world_matrix.7(parent.fregion_ref_frame)"} {"( global_math.pt2.x * cam_data.world_matrix.8(parent.fregion_ref_frame) + global_math.pt2.y * cam_data.world_matrix.9(parent.fregion_ref_frame) + global_math.pt2.z * cam_data.world_matrix.10(parent.fregion_ref_frame) ) + cam_data.world_matrix.11(parent.fregion_ref_frame)"}}
  name right_pt
  xpos -600
  ypos 3218
 }
 CheckerBoard2 {
  inputs 0
  format "256 256 0 0 256 256 1 square_256"
  name CheckerBoard1
  xpos -789
  ypos 2694
 }
 Multiply {
  channels rgb
  value {{parent.crop_point_color.r} {parent.crop_point_color.g} {parent.crop_point_color.b} 1}
  name Multiply
  xpos -789
  ypos 2822
 }
 Clamp {
  channels rgba
  name Clamp1
  xpos -789
  ypos 2905
 }
 Sphere {
  selectable false
  cast_shadow false
  receive_shadow false
  rows 10
  columns 10
  uniform_scale {{parent.crop_point_scale}}
  name Sphere1
  xpos -789
  ypos 2987
  disable {{!show_crop}}
 }
 Dot {
  name Dot24
  xpos -755
  ypos 3065
 }
set N5a6dc200 [stack 0]
 Dot {
  name Dot25
  xpos -456
  ypos 3065
 }
 TransformGeo {
  inputs 2
  selectable false
  name TransformGeo2
  xpos -490
  ypos 3238
 }
 Axis {
  inputs 0
  display off
  selectable false
  translate {{"( global_math.pt1.x * cam_data.world_matrix.0(parent.fregion_ref_frame) + global_math.pt1.y * cam_data.world_matrix.1(parent.fregion_ref_frame) + global_math.pt1.z * cam_data.world_matrix.2(parent.fregion_ref_frame) ) + cam_data.world_matrix.3(parent.fregion_ref_frame)"} {"( global_math.pt1.x * cam_data.world_matrix.4(parent.fregion_ref_frame) + global_math.pt1.y * cam_data.world_matrix.5(parent.fregion_ref_frame) + global_math.pt1.z * cam_data.world_matrix.6(parent.fregion_ref_frame) ) + cam_data.world_matrix.7(parent.fregion_ref_frame)"} {"( global_math.pt1.x * cam_data.world_matrix.8(parent.fregion_ref_frame) + global_math.pt1.y * cam_data.world_matrix.9(parent.fregion_ref_frame) + global_math.pt1.z * cam_data.world_matrix.10(parent.fregion_ref_frame) ) + cam_data.world_matrix.11(parent.fregion_ref_frame)"}}
  name left_pt
  xpos -899
  ypos 3220
 }
push $N5a6dc200
 TransformGeo {
  inputs 2
  selectable false
  name TransformGeo1
  xpos -789
  ypos 3240
 }
 Scene {
  inputs 2
  selectable false
  name Scene1
  xpos -480
  ypos 3395
 }
 ApplyMaterial {
  display off
  selectable false
  render_mode off
  name material_switch
  xpos -490
  ypos 3523
 }
push $N5a6c1bb0
 Scene {
  inputs 2
  name Scene2
  xpos -90
  ypos 3502
 }
 Output {
  name Output1
  xpos -100
  ypos 4030
 }
 Group {
  inputs 0
  name inverseMatrix
  tile_color 0x337f4cff
  xpos 576
  ypos 780
  addUserKnob {20 tab_general l General}
  addUserKnob {1 knob_path}
  knob_path cam_data.world_matrix
  addUserKnob {26 ""}
  addUserKnob {41 id T id_assign.matrix}
  addUserKnob {26 ""}
  addUserKnob {7 determinant}
  determinant {{"\[value \[value knob_path].\[value id.0]] * ((\[value \[value knob_path].\[value id.4]]*\[value \[value knob_path].\[value id.8]]) - (\[value \[value knob_path].\[value id.5]]*\[value \[value knob_path].\[value id.7]])) - \[value \[value knob_path].\[value id.1]] * ((\[value \[value knob_path].\[value id.3]]*\[value \[value knob_path].\[value id.8]]) - (\[value \[value knob_path].\[value id.5]]*\[value \[value knob_path].\[value id.6]])) + \[value \[value knob_path].\[value id.2]] * ((\[value \[value knob_path].\[value id.3]]*\[value \[value knob_path].\[value id.7]])-(\[value \[value knob_path].\[value id.4]]*\[value \[value knob_path].\[value id.6]]))"}}
  addUserKnob {26 ""}
  addUserKnob {41 cofactor T mtx_cofactor.matrix}
  addUserKnob {26 ""}
  addUserKnob {41 invMatrix T matrix_output.matrix}
  addUserKnob {20 t_VERSION l Version}
  addUserKnob {26 l_VERSION l Version T 1.0}
  addUserKnob {26 l_DATE l "Date Modified" T 2011-11-28}
  addUserKnob {26 l_CHANGELOG l Changelog T "v1.0\n- reveal the calculate output of \n  inverse matrix which is c44matrix\n  and colormatrix doesn't show\n  "}
  addUserKnob {26 l_DEV l "Developed by" T "Mark Joey Tang"}
 }
  Matrix {
   inputs 0
   matrix {
       {0 1 2}
       {4 5 6}
       {8 9 10}
     }
   name id_assign
   xpos -12
   ypos 33
  }
  Matrix {
   inputs 0
   matrix {
       {{"(\[value \[value knob_path].\[value id.4]]*\[value \[value knob_path].\[value id.8]]) - (\[value \[value knob_path].\[value id.5]]*\[value \[value knob_path].\[value id.7]])"} {"(\[value \[value knob_path].\[value id.7]]*\[value \[value knob_path].\[value id.2]]) - (\[value \[value knob_path].\[value id.8]]*\[value \[value knob_path].\[value id.1]])"} {"(\[value \[value knob_path].\[value id.1]]*\[value \[value knob_path].\[value id.5]]) - (\[value \[value knob_path].\[value id.2]]*\[value \[value knob_path].\[value id.4]])"}}
       {{"(\[value \[value knob_path].\[value id.5]]*\[value \[value knob_path].\[value id.6]]) - (\[value \[value knob_path].\[value id.3]]*\[value \[value knob_path].\[value id.8]])"} {"(\[value \[value knob_path].\[value id.8]]*\[value \[value knob_path].\[value id.0]]) - (\[value \[value knob_path].\[value id.6]]*\[value \[value knob_path].\[value id.2]])"} {"(\[value \[value knob_path].\[value id.2]]*\[value \[value knob_path].\[value id.3]]) - (\[value \[value knob_path].\[value id.0]]*\[value \[value knob_path].\[value id.5]])"}}
       {{"(\[value \[value knob_path].\[value id.3]]*\[value \[value knob_path].\[value id.7]]) - (\[value \[value knob_path].\[value id.4]]*\[value \[value knob_path].\[value id.6]])"} {"(\[value \[value knob_path].\[value id.6]]*\[value \[value knob_path].\[value id.1]]) - (\[value \[value knob_path].\[value id.7]]*\[value \[value knob_path].\[value id.0]])"} {"(\[value \[value knob_path].\[value id.0]]*\[value \[value knob_path].\[value id.4]]) - (\[value \[value knob_path].\[value id.1]]*\[value \[value knob_path].\[value id.3]])"}}
     }
   name mtx_cofactor
   xpos 86
   ypos 32
  }
  Matrix {
   inputs 0
   matrix {
       {{"cofactor.0 == 0 || determinant == 0 ? 0 : cofactor.0/determinant"} {"cofactor.1 == 0 || determinant == 0 ? 0 : cofactor.1/determinant"} {"cofactor.2 == 0 || determinant == 0 ? 0 : cofactor.2/determinant"}}
       {{"cofactor.3 == 0 || determinant == 0 ? 0 : cofactor.3/determinant"} {"cofactor.4 == 0 || determinant == 0 ? 0 : cofactor.4/determinant"} {"cofactor.5 == 0 || determinant == 0 ? 0 : cofactor.5/determinant"}}
       {{"cofactor.6 == 0 || determinant == 0 ? 0 : cofactor.6/determinant"} {"cofactor.7 == 0 || determinant == 0 ? 0 : cofactor.7/determinant"} {"cofactor.8 == 0 || determinant == 0 ? 0 : cofactor.8/determinant"}}
     }
   name matrix_output
   xpos 186
   ypos 33
  }
 end_group
 Camera {
  inputs 0
  rotate {0 0 {-parent.cam_winroll}}
  win_translate {{parent.cam_win_translate} {parent.cam_win_translate}}
  win_scale {{parent.cam_win_scale} {parent.cam_win_scale}}
  name fb_data
  xpos -340
  ypos 2087
 }
 NoOp {
  inputs 0
  name store
  xpos -843
  ypos 28
  addUserKnob {20 User}
  addUserKnob {22 fn T "### level define ###\n\ndef getLevel() :\n\tif len(nuke.thisNode().fullName().split('.')) == 1 :\n\t\tggLevel = nuke.root()\n\telse :\n\t\tnodePath = nuke.thisNode().fullName().split('.')\n\t\tnodePath.pop()\n\t\tggLevel = nuke.toNode('.'.join(nodePath))\n\treturn ggLevel\n\n### sample z in 2D ###\n\ndef sample2d() :\n\tthisGRP = nuke.thisGroup()\n\tif thisGRP\['sample_z_status'].value() == '<font color=cyan>\[ ON ]</font>' :\n\t\tsam_co = thisGRP\['sample_point'].getValue()\n\t\tzdata = nuke.toNode('sam_dot').sample('blue', sam_co\[0], sam_co\[1]) * -1\n\t\tthisGRP\['fregion_define_z'].setValue( zdata )" +STARTLINE}
  addUserKnob {15 fregion}
  fregion {{parent.focus_region} {parent.focus_region} {parent.focus_region} {parent.focus_region}}
 }
 NoOp {
  inputs 0
  name global_math
  xpos -842
  ypos -43
  addUserKnob {20 User}
  addUserKnob {7 hratio}
  hratio {{"cam_data.haperture / cam_data.focal"}}
  addUserKnob {7 maxwidth}
  maxwidth {{"hratio * parent.fregion_define_z"}}
  addUserKnob {7 maxheight}
  maxheight {{"hratio * parent.fregion_define_z * ( img_dot.height / img_dot.width )"}}
  addUserKnob {13 pt1}
  pt1 {{"( ( ( maxwidth * ( parent.focus_region.x(parent.fregion_ref_frame) / img_dot.width) ) - ( maxwidth / 2 ) ) * fb_data.world_matrix.0 + ( ( ( maxheight * ( parent.focus_region.y(parent.fregion_ref_frame) / img_dot.height ) ) - ( maxheight / 2 ) ) * 1 / \[value root.format.pixel_aspect] ) * fb_data.world_matrix.1 ) * fb_data.win_scale.u + ( hratio * abs(parent.fregion_define_z) * fb_data.win_translate.u /2 )"} {"( ( ( maxwidth * ( parent.focus_region.x(parent.fregion_ref_frame) / img_dot.width) ) - ( maxwidth / 2 ) ) * fb_data.world_matrix.4 + \n( ( ( maxheight * ( parent.focus_region.y(parent.fregion_ref_frame) / img_dot.height ) ) - ( maxheight / 2 ) ) * 1 / \[value root.format.pixel_aspect] ) * fb_data.world_matrix.5 ) * fb_data.win_scale.v + ( hratio * abs(parent.fregion_define_z) * fb_data.win_translate.v /2 )"} {-parent.fregion_define_z}}
  addUserKnob {13 pt2}
  pt2 {{"( ( ( maxwidth * ( parent.focus_region.r(parent.fregion_ref_frame) / img_dot.width) ) - ( maxwidth / 2 ) ) * fb_data.world_matrix.0 + ( ( ( maxheight * ( parent.focus_region.t(parent.fregion_ref_frame) / img_dot.height ) ) - ( maxheight / 2 ) ) * 1 / \[value root.format.pixel_aspect] ) * fb_data.world_matrix.1 ) * fb_data.win_scale.u + ( hratio * abs(parent.fregion_define_z) * fb_data.win_translate.u /2 )"} {"( ( ( maxwidth * ( parent.focus_region.r(parent.fregion_ref_frame) / img_dot.width) ) - ( maxwidth / 2 ) ) * fb_data.world_matrix.4 + ( ( ( maxheight * ( parent.focus_region.t(parent.fregion_ref_frame) / img_dot.height ) ) - ( maxheight / 2 ) ) * 1 / \[value root.format.pixel_aspect] ) * fb_data.world_matrix.5 ) * fb_data.win_scale.v + ( hratio * abs(parent.fregion_define_z) * fb_data.win_translate.v /2 )"} {-parent.fregion_define_z}}
 }
end_group
Camera2 {
 inputs 0
 translate {-23.73355293 6.752248287 -3.158116341}
 rotate {30.63627052 -44.94124796 0}
 focal 24
 name Camera5
 xpos -993
 ypos 999
}
Scene {
 inputs 2
 name Scene5
 xpos -814
 ypos 1141
}
Dot {
 name Dot5
 xpos -790
 ypos 1328
}
Group {
 inputs 0
 name render_with_pworld2
 xpos -119
 ypos 837
 postage_stamp true
}
 Camera2 {
  inputs 0
  translate {{curve x1 -23.73355293 x50 1.828465939 x100 10.79810143} {curve x1 6.752248287 x50 13.82691669 x100 25.23773003} {curve x1 -3.158116341 x50 5.475767136 x100 -12.79232216}}
  rotate {{curve x1 30.63627052 x50 14.22963619 x100 -23.22279344} {curve x1 -44.94124796 x50 19.70681696 x100 76.6501109} {curve x1 0 x50 27.42004885 x100 13.36756642}}
  focal 24
  name Camera1
  xpos 241
  ypos -567
 }
 Dot {
  name Dot2
  xpos 351
  ypos -543
 }
set N7ee71cb0 [stack 0]
 Dot {
  name Dot3
  xpos 351
  ypos -428
 }
push $N7ee71cb0
 CheckerBoard2 {
  inputs 0
  name CheckerBoard1
  xpos 406
  ypos -928
 }
 Dot {
  name Dot1
  xpos 440
  ypos -814
 }
set N7ee7ab60 [stack 0]
 Dot {
  name Dot5
  xpos 553
  ypos -814
 }
set N7ee7cee0 [stack 0]
 Dot {
  name Dot4
  xpos 693
  ypos -814
 }
 Multiply {
  channels rgb
  value {0 1 1 1}
  name Multiply3
  xpos 659
  ypos -756
 }
 Cube {
  rows 1
  columns 1
  separate_faces false
  translate {-7.849998951 18.14999962 -19.00000191}
  rotate {0 0 45.93192592}
  uniform_scale 7
  name Cube1
  xpos 659
  ypos -676
 }
push $N7ee7cee0
 Multiply {
  channels rgb
  value {1 0 1 1}
  name Multiply2
  xpos 519
  ypos -750
 }
 Sphere {
  translate {-15.00000191 16.45000076 -17.79999924}
  scaling {3.183291435 1 2.618715286}
  uniform_scale 2
  name Sphere1
  xpos 519
  ypos -670
 }
push $N7ee7ab60
 Multiply {
  channels rgb
  value {1 1 0 1}
  name Multiply1
  xpos 406
  ypos -754
 }
 Cylinder {
  rows 1
  close_top true
  close_bottom true
  translate {-3.149999619 19.64999962 -13.89999866}
  rotate {52.26493538 0 32.53306187}
  scaling {1 4.216488838 1}
  uniform_scale 2
  name Cylinder1
  xpos 406
  ypos -673
 }
 Scene {
  inputs 4
  name Scene1
  xpos 416
  ypos -567
 }
 Reformat {
  inputs 0
  type "to box"
  box_width 1280
  box_height 720
  box_fixed true
  name Reformat1
  xpos 530
  ypos -431
 }
 ScanlineRender {
  inputs 3
  conservative_shader_sampling false
  motion_vectors_type off
  MB_channel none
  output_shader_vectors true
  P_channel pworld
  name ScanlineRender1
  xpos 406
  ypos -431
 }
 Output {
  name Output1
  xpos 406
  ypos -331
 }
end_group
Group {
 name SSMesh6
 tile_color 0x5c9e83ff
 label "<font color=cyan>Geo Output</font>"
 xpos -119
 ypos 1004
 addUserKnob {20 tab_general l General}
 addUserKnob {22 set_link l "link to selected camera" t "Click to link selected camera by expression. This tool will get the focal, haperture and world matrix from selected camera to generate" T "def getLevel() :\n\t### level define ###\n\tif len(nuke.thisNode().fullName().split('.')) == 1 :\n\t\t  ggLevel = nuke.root()\n\telse :\n\t\t  nodePath = nuke.thisNode().fullName().split('.')\n\t\t  nodePath.pop()\n\t\t  ggLevel = nuke.toNode('.'.join(nodePath))\n\treturn ggLevel\n\nroot = getLevel()\nthisGRP = nuke.thisGroup()\n\nmainKnobs = \['world_matrix','cam_focal','cam_haperture','cam_win_translate','cam_win_scale','cam_winroll']\ndefaultKnobs = \{\n\t\t\t'world matrix' : 'world_matrix',\n\t\t\t'focal length' : 'focal',\n\t\t\t'horiz aperture' : 'haperture',\n\t\t\t'window translate' : 'win_translate',\n\t\t\t'window scale' : 'win_scale',\n\t\t\t'window roll' : 'winroll'\n\t\t\t\}\nselNodeKnobs = \[]\nmissingKnob = \[]\n\ntry :\n\twith root :\n\t\tselNode = nuke.selectedNode()\n\n\tfor knob in selNode.knobs() :\n\t\tselNodeKnobs.append( knob )\n\n\tselNodeKnobs.sort()\n\n\tfor key,value in defaultKnobs.items() :\n\t\tif value not in selNodeKnobs :\n\t\t\tmissingKnob.append( key )\n\n\tif not len(missingKnob) :\n\t\twith root :\n\t\t\tCAMnode = selNode.name()\n\t\t\tthisGRP\[mainKnobs\[0]].setExpression('\{0\}.world_matrix'.format(CAMnode))\n\t\t\tthisGRP\[mainKnobs\[1]].setExpression('\{0\}.focal'.format(CAMnode))\n\t\t\tthisGRP\[mainKnobs\[2]].setExpression('\{0\}.haperture'.format(CAMnode))\n\t\t\tthisGRP\[mainKnobs\[3]].setExpression('\{0\}.win_translate'.format(CAMnode))\n\t\t\tthisGRP\[mainKnobs\[4]].setExpression('\{0\}.win_scale'.format(CAMnode))\n\t\t\tthisGRP\[mainKnobs\[5]].setExpression('\{0\}.winroll'.format(CAMnode))\n\telse :\n\t\tp = nuke.Panel('Select knobs :')\n\t\tp.addBooleanCheckBox( '<b>Unable to find the default knobs. Please use the pulldown menu below to define the knob manually.</b>' , False)\n\t\tfor rk in missingKnob :\n\t\t\tp.addEnumerationPulldown( rk, ' '.join( selNodeKnobs ) )\n\n\t\tif p.show() :\n\t\t\ttry :\n\t\t\t\tfor key,value in defaultKnobs.items() :\n\t\t\t\t\tif p.value( key ) != None :\n\t\t\t\t\t\tdefaultKnobs\[key] = p.value( key )\n\t\t\texcept :\n\t\t\t\tpass\n\n\t\t\twith root :\n\t\t\t\tCAMnode = selNode.name()\n\t\t\t\tthisGRP\[mainKnobs\[0]].setExpression('\{0\}.\{1\}'.format(CAMnode, defaultKnobs\['world matrix']))\n\t\t\t\tthisGRP\[mainKnobs\[1]].setExpression('\{0\}.\{1\}'.format(CAMnode, defaultKnobs\['focal length']))\n\t\t\t\tthisGRP\[mainKnobs\[2]].setExpression('\{0\}.\{1\}'.format(CAMnode, defaultKnobs\['horiz aperture']))\n\t\t\t\tthisGRP\[mainKnobs\[3]].setExpression('\{0\}.\{1\}'.format(CAMnode, defaultKnobs\['window translate']))\n\t\t\t\tthisGRP\[mainKnobs\[4]].setExpression('\{0\}.\{1\}'.format(CAMnode, defaultKnobs\['window scale']))\n\t\t\t\tthisGRP\[mainKnobs\[5]].setExpression('\{0\}.\{1\}'.format(CAMnode, defaultKnobs\['window roll']))\nexcept :\n\tnuke.message('no node selected.')" +STARTLINE}
 addUserKnob {22 remove_link l "remove linked expression" t "Remove the linked camera expression but won't reset any data." -STARTLINE T "thisGRP = nuke.thisGroup()\nmainKnobs = \['world_matrix','cam_focal','cam_haperture','cam_win_translate','cam_win_scale','cam_winroll']\n\nfor knob in thisGRP.knobs() :\n\tif mainKnobs.count(knob) != 0 :\n\t\t thisGRP\[knob].clearAnimated()"}
 addUserKnob {20 cam_data_grp l "CAMERA DATA" n 1}
 cam_data_grp 0
 addUserKnob {7 cam_focal l "focal length" R 5 100}
 cam_focal {{Camera6.focal}}
 addUserKnob {7 cam_haperture l "horiz aperture" R 0.1 50}
 cam_haperture {{Camera6.haperture}}
 addUserKnob {30 cam_win_translate l "window translate"}
 cam_win_translate {{Camera6.win_translate} {Camera6.win_translate}}
 addUserKnob {30 cam_win_scale l "window scale"}
 cam_win_scale {{Camera6.win_scale} {Camera6.win_scale}}
 addUserKnob {7 cam_winroll l "window roll" R -45 45}
 cam_winroll {{Camera6.winroll}}
 addUserKnob {41 world_matrix l "world matrix" T cam_data.matrix}
 addUserKnob {20 endGroup_1 l endGroup n -1}
 addUserKnob {26 spacer_5 l "" +STARTLINE T <br>}
 addUserKnob {26 title_basic l "<b>BASIC SETTING</b>"}
 addUserKnob {4 display l "3D display" t "How to draw in 3D preview. The viewer can override this setting." M {off wireframe soild solid+wireframe textured textured+wireframe "" "" ""}}
 display textured
 addUserKnob {4 data_type l "data type" t "data type\nUsing one of these data to convert into 3D mesh.\n\nPosition\nSupported world space or camera space position data.\n\nDepth (normalized far=0)\nNormalized depth data, which is same as depth data output by ScanlineRender.\n\nDeep / Depth (direct)\nRaw camera depth data. If using deep, need to convert DeepToImage first, and selected deep channel on 'channels' knob." M {"position (world space)" "position (camera space)" "depth (normalized far=0)" "deep / depth (direct)" "" "" ""}}
 addUserKnob {41 channels t "Select which channel represented on selected data type." T shuffle_data.in}
 addUserKnob {6 unpm l unpremult t "3D data pass should be unpremult with alpha before process." -STARTLINE}
 unpm true
 addUserKnob {26 spacer_4 l "" +STARTLINE T <br>}
 addUserKnob {7 lod l "mesh LOD" t "Level of Details\n\nIf this value set to 1.0, subdivision of the mesh  1:1 to the data available in the resolution. Which mean 1 face of the mesh equal to 1 pixel.\n\nIf this value set to 1.0, it will slow down the render process.\n\nHighly recommend to use 0.1 - 0.5 if high resolution mesh details is not concern."}
 lod 0.1
 addUserKnob {41 filter_size l "filter size" T DisplaceGeo.filter_size}
 addUserKnob {41 filter T DisplaceGeo.filter}
 addUserKnob {26 spacer_2 l "" +STARTLINE T <br>}
 addUserKnob {26 title_drange l "" +STARTLINE T "distance range"}
 addUserKnob {7 drange_near l near t "clip the mesh in the min value in terms of depth." R 0 10000}
 drange_near 14
 addUserKnob {7 drange_far l far t "clip the mesh in the max value in terms of depth." R 0 10000}
 drange_far 17
 addUserKnob {6 clip_color l "distance clip on color" t "Apply the distance clip on colored texture." +STARTLINE}
 addUserKnob {26 spacer_3 l "" +STARTLINE T <br>}
 addUserKnob {26 title_export l <b>EXPORT</b>}
 addUserKnob {41 file t "only support *.abc file extension (alembric) ." T WriteGeo.file}
 addUserKnob {22 export_geo l "Export Geo" T "def exportGeo() :\n\twgeo = nuke.toNode('WriteGeo')\n\twgeo\['Execute'].execute()\n\nthisGRP = nuke.thisGroup()\nfilepath = thisGRP\['file'].getValue()\n\nif not len(filepath) :\n\tnuke.message('file path is empty. Process denied.')\nelif not filepath.split('.')\[-1:]\[0].lower() == 'abc' :\n\tif nuke.ask('File extension invalue. Only support render <font color=orange>*.abc</font> . Do you want this tool to fix it and process ?') :\n\t\tthisGRP\['file'].setValue( thisGRP\['file'].getValue() + '.abc' )\n\t\texportGeo()\nelse :\n\texportGeo()" +STARTLINE}
 addUserKnob {22 import_geo l "Import Geo" -STARTLINE T "prefx = nuke.toNode('preferences')\['GridWidth'].value()\nthisGRP = nuke.thisGroup()\ngoStore = nuke.toNode('store')\ngoStore\['fn'].execute()\n\nroot = getLevel()\n\nwith root :\n\trgeo = nuke.nodes.ReadGeo2( file=thisGRP\['file'].getValue() )\n\trgeo.setXYpos( int( thisGRP\['xpos'].getValue() + prefx ) , int( thisGRP\['ypos'].getValue() ) )"}
 addUserKnob {20 tab_misc l Miscellaneous}
 addUserKnob {26 title_focus_region l "<b>FOCUS REGION</b>"}
 addUserKnob {41 use_focus_region l "use focus region" t "use focus region to generate SSMesh in specific area. Save resources and possible to work with high LOD mesh." T menu2.use_focus_region}
 addUserKnob {15 focus_region l "focus region" t "Set focus region in screen space. These values are 2D coordinate." +DISABLED}
 focus_region {0 0 1280 720}
 addUserKnob {26 spacer_1 l "" +STARTLINE T <br>}
 addUserKnob {3 fregion_ref_frame l "ref frame" t "set reference frame for tracking focus region. 'focus region' & 'define z' will apply on this reference frame and process the tracking." +DISABLED}
 fregion_ref_frame 1
 addUserKnob {22 fregion_set_frame l "set current frame" t "set current frame for focus region reference frame." -STARTLINE +DISABLED T "nuke.thisGroup()\['fregion_ref_frame'].setValue( nuke.frame() )"}
 addUserKnob {12 sample_point l "sample position" t "Toggle 'sample z' in 2D to enable this 2D sample coordinate." +DISABLED}
 addUserKnob {22 sample_z_toggle l "sample z in 2D" t "'sample z' is only works for sample value purpose. After sample is done, must turn off sample function." -STARTLINE +DISABLED T "thisGRP = nuke.thisGroup()\nszstatus = thisGRP\['sample_z_status'].value()\n\nstatus = \['<font color=red>\[ OFF ]</font>','<font color=cyan>\[ ON ]</font>']\n\nif szstatus == status\[0] :\n\tthisGRP\['sample_z_status'].setValue( status\[1] )\n\tthisGRP\['sample_point'].setEnabled(True)\n\tthisGRP\['updateUI'].setValue(\"goStore = nuke.toNode(\\'store\\')\\ngoStore\[\\'fn\\'].execute()\\nsample2d()\")\nelse :\n\tthisGRP\['sample_z_status'].setValue( status\[0] )\n\tthisGRP\['sample_point'].setEnabled(False)\n\tthisGRP\['updateUI'].setValue('')"}
 addUserKnob {26 sample_z_status l "" -STARTLINE +DISABLED T "<font color=red>\[ OFF ]</font>"}
 addUserKnob {7 fregion_define_z l "define z" t "Define the z value on reference frame. Can use 'sample z in 2D' to get this value." +DISABLED R 0 10000}
 addUserKnob {22 track_focus_region l "<b>\[ track focus region ]</b>" t "Use the set focus region on reference frame to track with camera in 3D space.\n\n* project setting need to be same as image resolution to get the correct result." +DISABLED T "rootST = int( nuke.root()\['first_frame'].getValue() )\nrootED = int( nuke.root()\['last_frame'].getValue() )\n\ngetFrame = nuke.getFramesAndViews( 'frame range', str( rootST ) + '-' + str( rootED ) )\n\ntry :\n\tframeST = int( getFrame\[0].replace( ' ' , '' ).split('-')\[0] )\n\tframeED = int( getFrame\[0].replace( ' ' , '' ).split('-')\[1] )\n\n\tthisGRP = nuke.thisGroup()\n\trefframe = int( thisGRP\['fregion_ref_frame'].getValue() )\n\tcam = nuke.toNode('cam_data')\n\tpt1 = nuke.toNode('left_pt')\['translate'].getValue()\n\tpt2 = nuke.toNode('right_pt')\['translate'].getValue()\n\n\tct_hack = nuke.nodes.CurveTool()\n\n\twith nuke.root() :\n\n\t\tif frameED - frameST != 0 :\n\t\t\tthisGRP\['focus_region'].clearAnimated()\n\t\t\ttempbuffer1 = thisGRP\['focus_region'].getValue()\n\t\t\tthisGRP\['focus_region'].setAnimated()\n\t\t\tthisGRP\['focus_region'].setValueAt( tempbuffer1\[0] , refframe , 0 )\n\t\t\tthisGRP\['focus_region'].setValueAt( tempbuffer1\[1] , refframe , 1 )\n\t\t\tthisGRP\['focus_region'].setValueAt( tempbuffer1\[2] , refframe , 2 )\n\t\t\tthisGRP\['focus_region'].setValueAt( tempbuffer1\[3] , refframe , 3 )\n\n\t\tfor trackframe in xrange( frameST, frameED+1 , 1 ) :\n\t\t\tnuke.execute( ct_hack, trackframe, trackframe )\n\t\t\tthisGRP\['focus_region'].setValueAt( nukescripts.snap3d.projectPoint( cam, pt1 )\[0] , trackframe , 0 )\n\t\t\tthisGRP\['focus_region'].setValueAt( nukescripts.snap3d.projectPoint( cam, pt1 )\[1] , trackframe , 1 )\n\t\t\tthisGRP\['focus_region'].setValueAt( nukescripts.snap3d.projectPoint( cam, pt2 )\[0] , trackframe , 2 )\n\t\t\tthisGRP\['focus_region'].setValueAt( nukescripts.snap3d.projectPoint( cam, pt2 )\[1] , trackframe , 3 )\n\n\tnuke.delete( ct_hack )\nexcept :\n    pass" +STARTLINE}
 addUserKnob {26 spacer_6 l "" +STARTLINE T <br>}
 addUserKnob {20 grp_crop_preview l "3D crop preview" +DISABLED n 1}
 grp_crop_preview 0
 addUserKnob {6 show_crop l "show crop point" t "It will show 2 spheres for the crop in 3D space. They set in the place which is where you set the focus region in screen space and defined by z." +DISABLED +STARTLINE}
 addUserKnob {7 crop_point_scale l scale t "Scale the preview crop points (spheres)." +DISABLED}
 crop_point_scale 0.3
 addUserKnob {18 crop_point_color l color t "change color of the crop points (spheres)." +DISABLED}
 crop_point_color 1
 addUserKnob {6 crop_point_color_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 crop_point_color_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 crop_point_color_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 crop_point_color_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 crop_point_color_panelDropped_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 crop_point_color_panelDropped_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 crop_point_color_panelDropped_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 crop_point_color_panelDropped_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {20 endGroup n -1}
 addUserKnob {26 spacer l "" +STARTLINE T <br>}
 addUserKnob {26 title_uv l <b>UV</b>}
 addUserKnob {41 uv_stabilize l "uv stabilize" t "Turn this on if you need to stabilize in UV space. During UV stabilize on, the geo will not be animated. Set reference frame under 'mesh ref frame'." T menu1.uv_stabilize}
 addUserKnob {3 uv_ref_frame l "mesh ref frame" t "Select the frame number that will have identity geo shaped for UV texturing." +DISABLED}
 uv_ref_frame 1001
 addUserKnob {22 uv_set_frame l "set current frame" -STARTLINE +DISABLED T "nuke.thisGroup()\['uv_ref_frame'].setValue( nuke.frame() )"}
 addUserKnob {6 black_outside l "black outside" t "black outside the UV texture." +DISABLED +STARTLINE}
 black_outside true
 addUserKnob {20 t_VERSION l Version}
 addUserKnob {26 l_VERSION l Version T 1.3}
 addUserKnob {26 l_DATE l "Date Modified" T 2019-11-08}
 addUserKnob {26 l_CHANGELOG l Changelog T "1.3\n- camera window supported\n- anamophic project supported\n- fix the conflict of 'force region' and 'UV stabilize'.\n  can use both at the same time now.\n\n1.2\n- removed unuse camera link knobs\n- added focus region, so mesh can be\n  form in specific area/object to save\n  resources for higher LOD\n\n1.1\n- fix the missing line on 'Export Geo' \n  button\n\n1.0\n- create mesh/geo in screen space\n  using position/depth/deep data"}
 addUserKnob {26 l_DEV l "Developed by" T "<a href=\"https://facebook.com/MJTLab\"><font color=orange>Mark Joey Tang</font></a>"}
}
 BackdropNode {
  inputs 0
  name BackdropNode1
  tile_color 0xff
  label "don't touch"
  note_font_size 32
  xpos -1142
  ypos -169
  bdwidth 202
  bdheight 478
 }
 BackdropNode {
  inputs 0
  name BackdropNode2
  tile_color 0x4c4c4cff
  label bin
  note_font_size 32
  xpos -899
  ypos -170
  bdwidth 200
  bdheight 280
 }
 Input {
  inputs 0
  name img
  xpos -100
  ypos -184
 }
 Dot {
  name img_dot
  xpos -66
  ypos -83
 }
set N82af5df0 [stack 0]
 Dot {
  name Dot3
  xpos 758
  ypos -83
 }
set N5a449eb0 [stack 0]
 Shuffle {
  in pworld
  in2 alpha
  alpha red2
  name shuffle_data
  label "\[value in]"
  xpos 724
  ypos -32
 }
 Unpremult {
  name Unpremult_data
  xpos 724
  ypos 62
  disable {{!parent.unpm}}
 }
 Dot {
  name Dot5
  xpos 758
  ypos 700
 }
set N4a722520 [stack 0]
 Dot {
  name Dot6
  xpos 928
  ypos 700
 }
set N5a74dc00 [stack 0]
 Dot {
  name Dot7
  xpos 1106
  ypos 700
 }
set N4a753940 [stack 0]
 Dot {
  name Dot8
  xpos 1260
  ypos 700
 }
 Expression {
  temp_name0 dvalue
  temp_expr0 red
  temp_name1 xpos
  temp_expr1 "( ( x + 0.5 ) / input.width - 0.5 ) * \[value global_math.hratio] * abs( dvalue )"
  temp_name2 ypos
  temp_expr2 "( ( y + 0.5 ) / input.height - 0.5 ) * ( \[value global_math.hratio] * abs( dvalue ) * ( img_dot.height / img_dot.width ) ) * 1 / \[value format.pixel_aspect]"
  temp_name3 zpos
  temp_expr3 "- dvalue"
  expr0 "( xpos * \[value fb_data.world_matrix.0] + ypos * \[value fb_data.world_matrix.1] ) * \[value fb_data.win_scale.u] + ( \[value global_math.hratio] * abs(zpos) * \[value fb_data.win_translate.u] / 2 )"
  expr1 "( xpos * \[value fb_data.world_matrix.4] + ypos * \[value fb_data.world_matrix.5] ) * \[value fb_data.win_scale.v] + ( \[value global_math.hratio] * abs(zpos) * \[value fb_data.win_translate.v] / 2 )"
  expr2 zpos
  name Expression9
  xpos 1226
  ypos 774
 }
 Dot {
  name Dot16
  xpos 1260
  ypos 889
 }
push $N4a753940
 Expression {
  temp_name0 dvalue
  temp_expr0 "1 / red"
  temp_name1 xpos
  temp_expr1 "( ( x + 0.5 ) / input.width - 0.5 ) * \[value global_math.hratio] * abs( dvalue )"
  temp_name2 ypos
  temp_expr2 "( ( y + 0.5 ) / input.height - 0.5 ) * ( \[value global_math.hratio] * abs( dvalue ) * ( img_dot.height / img_dot.width ) ) * 1 / \[value format.pixel_aspect]"
  temp_name3 zpos
  temp_expr3 "- dvalue"
  expr0 "( xpos * \[value fb_data.world_matrix.0] + ypos * \[value fb_data.world_matrix.1] ) * \[value fb_data.win_scale.u] + ( \[value global_math.hratio] * abs(zpos) * \[value fb_data.win_translate.u] / 2 )"
  expr1 "( xpos * \[value fb_data.world_matrix.4] + ypos * \[value fb_data.world_matrix.5] ) * \[value fb_data.win_scale.v] + ( \[value global_math.hratio] * abs(zpos) * \[value fb_data.win_translate.v] / 2 )"
  expr2 zpos
  name Expression6
  xpos 1072
  ypos 774
 }
 Dot {
  name Dot17
  xpos 1106
  ypos 863
 }
push $N5a74dc00
 Expression {
  expr2 -blue
  name Expression7
  label "fix z"
  xpos 894
  ypos 774
 }
 Dot {
  name Dot18
  xpos 928
  ypos 876
 }
push $N4a722520
 Expression {
  temp_name0 nx
  temp_expr0 "red - cam_data.world_matrix.3"
  temp_name1 ny
  temp_expr1 "green - cam_data.world_matrix.7"
  temp_name2 nz
  temp_expr2 "blue - cam_data.world_matrix.11"
  expr0 "nx * \[value inverseMatrix.invMatrix.0] + ny * \[value inverseMatrix.invMatrix.1] + nz * \[value inverseMatrix.invMatrix.2]"
  expr1 "nx * \[value inverseMatrix.invMatrix.3] + ny * \[value inverseMatrix.invMatrix.4] + nz * \[value inverseMatrix.invMatrix.5]"
  expr2 "nx * \[value inverseMatrix.invMatrix.6] + ny * \[value inverseMatrix.invMatrix.7] + nz * \[value inverseMatrix.invMatrix.8]"
  name Expression3
  label "position invert"
  xpos 724
  ypos 774
 }
 Switch {
  inputs 4
  which {{parent.data_type}}
  name Switch1
  xpos 724
  ypos 984
 }
 Dot {
  name Dot13
  xpos 758
  ypos 1113
 }
set N50100680 [stack 0]
 Dot {
  name sam_dot
  xpos 551
  ypos 1113
 }
 NoOp {
  inputs 0
  name menu1
  knobChanged "\nthisGRP = nuke.thisGroup()\nif thisGRP\['uv_stabilize'].getValue() == 1 :\n    thisGRP\['uv_ref_frame'].setEnabled(True)\n    thisGRP\['uv_set_frame'].setEnabled(True)\n    thisGRP\['black_outside'].setEnabled(True)\nelse :\n    thisGRP\['uv_ref_frame'].setEnabled(False)\n    thisGRP\['uv_set_frame'].setEnabled(False)\n    thisGRP\['black_outside'].setEnabled(False)\n"
  xpos -1085
  ypos -42
  addUserKnob {20 User}
  addUserKnob {6 uv_stabilize l "uv stabilize" +STARTLINE}
 }
 NoOp {
  inputs 0
  name menu2
  onCreate "\nthisGRP = nuke.thisGroup()\nfregion_knobs = \['focus_region','fregion_define_z','sample_z_toggle','sample_z_status','sample_point','fregion_ref_frame','fregion_set_frame','track_focus_region','grp_crop_preview','show_crop','crop_point_scale','crop_point_color']\n\nthisGRP\[fregion_knobs\[4]].setEnabled(True)\n\nif thisGRP\['use_focus_region'].getValue()  == 0 :\n    for i in fregion_knobs :\n        thisGRP\[i].setEnabled(False)\n    thisGRP\[fregion_knobs\[3]].setValue( '<font color=red>\[ OFF ]</font>' )\n    thisGRP\['updateUI'].setValue('')\n    nuke.toNode('material_switch')\['disable'].setValue(0)\nelse :\n    for i in fregion_knobs :\n        if i != 'sample_point' :\n            thisGRP\[i].setEnabled(True)\n        else :\n            thisGRP\[i].setEnabled(False)\n    nuke.toNode('material_switch')\['disable'].setValue(1)\n"
  knobChanged "\nthisGRP = nuke.thisGroup()\nfregion_knobs = \['focus_region','fregion_define_z','sample_z_toggle','sample_z_status','sample_point','fregion_ref_frame','fregion_set_frame','track_focus_region','grp_crop_preview','show_crop','crop_point_scale','crop_point_color']\n\nif thisGRP\['use_focus_region'].getValue()  == 0 :\n    for i in fregion_knobs :\n        thisGRP\[i].setEnabled(False)\n    thisGRP\[fregion_knobs\[3]].setValue( '<font color=red>\[ OFF ]</font>' )\n    thisGRP\['updateUI'].setValue('')\n    nuke.toNode('material_switch')\['disable'].setValue(0)\nelse :\n    for i in fregion_knobs :\n        if i != 'sample_point' :\n            thisGRP\[i].setEnabled(True)\n    nuke.toNode('material_switch')\['disable'].setValue(1)\n"
  xpos -1085
  ypos 25
  addUserKnob {20 User}
  addUserKnob {6 use_focus_region l "use focus region" +STARTLINE}
 }
 Camera {
  inputs 0
  display off
  selectable false
  useMatrix true
  matrix {
      {{Camera6.world_matrix} {Camera6.world_matrix} {Camera6.world_matrix} {Camera6.world_matrix}}
      {{Camera6.world_matrix} {Camera6.world_matrix} {Camera6.world_matrix} {Camera6.world_matrix}}
      {{Camera6.world_matrix} {Camera6.world_matrix} {Camera6.world_matrix} {Camera6.world_matrix}}
      {{Camera6.world_matrix} {Camera6.world_matrix} {Camera6.world_matrix} {Camera6.world_matrix}}
    }
  focal {{parent.cam_focal}}
  haperture {{cam_haperture}}
  name cam_data
  xpos -335
  ypos 2204
 }
push $N50100680
 Expression {
  temp_name0 unpremultA
  temp_expr0 "alpha * ( 1 / alpha )"
  temp_name1 max
  temp_expr1 blue
  expr3 "abs( max ) < \[value parent.drange_near] || abs( max ) > \[value parent.drange_far] ? 0 : isnan(unpremultA) ? 0 : unpremultA"
  name Expression1
  label "distance crop"
  xpos 724
  ypos 1244
 }
 Premult {
  name Premult1
  xpos 724
  ypos 1332
 }
 Dot {
  name Dot9
  xpos 758
  ypos 1640
 }
set N50018fb0 [stack 0]
push $N82af5df0
 Dot {
  name Dot10
  xpos -66
  ypos 1552
 }
set N6a0cc380 [stack 0]
 Unpremult {
  name Unpremult1
  xpos 48
  ypos 1549
 }
 Merge2 {
  inputs 2
  operation mask
  name Merge2
  xpos 48
  ypos 1637
 }
 Premult {
  name Premult3
  xpos 48
  ypos 1719
 }
push $N6a0cc380
 Switch {
  inputs 2
  which {{parent.clip_color}}
  name Switch2
  xpos -100
  ypos 1828
 }
 Project3D2 {
  inputs 2
  crop {{parent.black_outside}}
  name Project3D2
  xpos -100
  ypos 2224
 }
push $N5a449eb0
 Dot {
  name Dot2
  xpos 1576
  ypos -84
 }
 Shuffle {
  red black
  green black
  blue black
  alpha black
  name Shuffle1
  label "\[value in]"
  xpos 1542
  ypos 30
 }
 Remove {
  name Remove1
  xpos 1542
  ypos 118
 }
 Reformat {
  type scale
  black_outside true
  name Reformat1
  xpos 1542
  ypos 212
 }
 Expression {
  temp_name0 xpos
  temp_expr0 "( ( x + 0.5 ) / input.width - 0.5) *  \[value global_math.hratio] * abs( \[value parent.drange_far] )"
  temp_name1 ypos
  temp_expr1 "( ( y + 0.5 ) / input.height -0.5 ) * ( \[value global_math.hratio] * abs( \[value parent.drange_far] ) * ( img_dot.height / img_dot.width ) ) * 1 / \[value format.pixel_aspect]"
  temp_name2 zpos
  temp_expr2 "-\[value parent.drange_far]"
  expr0 "( xpos * \[value fb_data.world_matrix.0] + ypos * \[value fb_data.world_matrix.1] ) * \[value fb_data.win_scale.u] + ( \[value global_math.hratio] * abs(zpos) * \[value fb_data.win_translate.u] / 2 )"
  expr1 "( xpos * \[value fb_data.world_matrix.4] + ypos * \[value fb_data.world_matrix.5] ) * \[value fb_data.win_scale.v] + ( \[value global_math.hratio] * abs(zpos) * \[value fb_data.win_translate.v] / 2 )"
  expr2 zpos
  name Expression8
  xpos 1542
  ypos 845
 }
 ColorMatrix {
  matrix {
      {{cam_data.world_matrix.0} {cam_data.world_matrix.1} {cam_data.world_matrix.2}}
      {{cam_data.world_matrix.4} {cam_data.world_matrix.5} {cam_data.world_matrix.6}}
      {{cam_data.world_matrix.8} {cam_data.world_matrix.9} {cam_data.world_matrix.10}}
    }
  name ColorMatrix1
  xpos 1542
  ypos 970
 }
 Add {
  channels rgb
  value {{cam_data.world_matrix.3} {cam_data.world_matrix.7} {cam_data.world_matrix.11} 0}
  name Add1
  xpos 1542
  ypos 1052
 }
 Crop {
  box {{store.fregion} {store.fregion} {store.fregion} {store.fregion}}
  reformat true
  crop false
  name Crop1
  xpos 1542
  ypos 1476
  disable {{!parent.use_focus_region}}
 }
 Dot {
  name Dot4
  xpos 1576
  ypos 2402
 }
push $N50018fb0
 Crop {
  box {{store.fregion} {store.fregion} {store.fregion} {store.fregion}}
  reformat true
  crop false
  name Crop4
  selected true
  xpos 724
  ypos 1714
  disable {{!parent.use_focus_region}}
 }
 Unpremult {
  name Unpremult3
  xpos 724
  ypos 1851
 }
 Expression {
  temp_name0 nx
  temp_expr0 red
  temp_name1 ny
  temp_expr1 green
  temp_name2 nz
  temp_expr2 blue
  expr0 "( nx * \[value cam_data.world_matrix.0] + ny * \[value cam_data.world_matrix.1] + nz * \[value cam_data.world_matrix.2] ) + \[value cam_data.world_matrix.3]"
  expr1 "( nx * \[value cam_data.world_matrix.4] + ny * \[value cam_data.world_matrix.5] + nz * \[value cam_data.world_matrix.6] ) + \[value cam_data.world_matrix.7]"
  expr2 "( nx * \[value cam_data.world_matrix.8] + ny * \[value cam_data.world_matrix.9] + nz * \[value cam_data.world_matrix.10] ) + \[value cam_data.world_matrix.11]"
  name Expression4
  label "position revert"
  xpos 724
  ypos 1933
 }
 Premult {
  name Premult2
  xpos 724
  ypos 2027
 }
 Merge2 {
  inputs 2
  operation under
  name Merge1
  xpos 724
  ypos 2398
 }
 Card {
  inputs 0
  image_aspect false
  rows {{"img_dot.height * parent.lod"}}
  columns {{"img_dot.width * parent.lod"}}
  name ssmesh
  xpos 343
  ypos 2317
 }
 DisplaceGeo {
  inputs 2
  source "rgb absolute"
  scale 1
  filter_size 1
  name DisplaceGeo
  xpos 343
  ypos 2399
 }
 FrameHold {
  first_frame {{parent.uv_ref_frame}}
  name FrameHold
  xpos 343
  ypos 2479
  disable {{!parent.uv_stabilize}}
 }
 ApplyMaterial {
  inputs 2
  name ApplyMaterial1
  xpos -100
  ypos 2483
 }
 Scene {
  display {{parent.display}}
  name gl_scene
  xpos -90
  ypos 3072
 }
set N500a2570 [stack 0]
 WriteGeo {
  file_type abc
  name WriteGeo
  xpos 120
  ypos 3093
 }
 Axis {
  inputs 0
  display off
  selectable false
  translate {{"( global_math.pt2.x * cam_data.world_matrix.0(parent.fregion_ref_frame) + global_math.pt2.y * cam_data.world_matrix.1(parent.fregion_ref_frame) + global_math.pt2.z * cam_data.world_matrix.2(parent.fregion_ref_frame) ) + cam_data.world_matrix.3(parent.fregion_ref_frame)"} {"( global_math.pt2.x * cam_data.world_matrix.4(parent.fregion_ref_frame) + global_math.pt2.y * cam_data.world_matrix.5(parent.fregion_ref_frame) + global_math.pt2.z * cam_data.world_matrix.6(parent.fregion_ref_frame) ) + cam_data.world_matrix.7(parent.fregion_ref_frame)"} {"( global_math.pt2.x * cam_data.world_matrix.8(parent.fregion_ref_frame) + global_math.pt2.y * cam_data.world_matrix.9(parent.fregion_ref_frame) + global_math.pt2.z * cam_data.world_matrix.10(parent.fregion_ref_frame) ) + cam_data.world_matrix.11(parent.fregion_ref_frame)"}}
  name right_pt
  xpos -600
  ypos 3218
 }
 CheckerBoard2 {
  inputs 0
  format "256 256 0 0 256 256 1 square_256"
  name CheckerBoard1
  xpos -789
  ypos 2694
 }
 Multiply {
  channels rgb
  value {{parent.crop_point_color.r} {parent.crop_point_color.g} {parent.crop_point_color.b} 1}
  name Multiply
  xpos -789
  ypos 2822
 }
 Clamp {
  channels rgba
  name Clamp1
  xpos -789
  ypos 2905
 }
 Sphere {
  selectable false
  cast_shadow false
  receive_shadow false
  rows 10
  columns 10
  uniform_scale {{parent.crop_point_scale}}
  name Sphere1
  xpos -789
  ypos 2987
  disable {{!show_crop}}
 }
 Dot {
  name Dot24
  xpos -755
  ypos 3065
 }
set N500cbae0 [stack 0]
 Dot {
  name Dot25
  xpos -456
  ypos 3065
 }
 TransformGeo {
  inputs 2
  selectable false
  name TransformGeo2
  xpos -490
  ypos 3238
 }
 Axis {
  inputs 0
  display off
  selectable false
  translate {{"( global_math.pt1.x * cam_data.world_matrix.0(parent.fregion_ref_frame) + global_math.pt1.y * cam_data.world_matrix.1(parent.fregion_ref_frame) + global_math.pt1.z * cam_data.world_matrix.2(parent.fregion_ref_frame) ) + cam_data.world_matrix.3(parent.fregion_ref_frame)"} {"( global_math.pt1.x * cam_data.world_matrix.4(parent.fregion_ref_frame) + global_math.pt1.y * cam_data.world_matrix.5(parent.fregion_ref_frame) + global_math.pt1.z * cam_data.world_matrix.6(parent.fregion_ref_frame) ) + cam_data.world_matrix.7(parent.fregion_ref_frame)"} {"( global_math.pt1.x * cam_data.world_matrix.8(parent.fregion_ref_frame) + global_math.pt1.y * cam_data.world_matrix.9(parent.fregion_ref_frame) + global_math.pt1.z * cam_data.world_matrix.10(parent.fregion_ref_frame) ) + cam_data.world_matrix.11(parent.fregion_ref_frame)"}}
  name left_pt
  xpos -899
  ypos 3220
 }
push $N500cbae0
 TransformGeo {
  inputs 2
  selectable false
  name TransformGeo1
  xpos -789
  ypos 3240
 }
 Scene {
  inputs 2
  selectable false
  name Scene1
  xpos -480
  ypos 3395
 }
 ApplyMaterial {
  display off
  selectable false
  render_mode off
  name material_switch
  xpos -490
  ypos 3523
 }
push $N500a2570
 Scene {
  inputs 2
  name Scene2
  xpos -90
  ypos 3502
 }
 Output {
  name Output1
  xpos -100
  ypos 4030
 }
 Group {
  inputs 0
  name inverseMatrix
  tile_color 0x337f4cff
  xpos 576
  ypos 780
  addUserKnob {20 tab_general l General}
  addUserKnob {1 knob_path}
  knob_path cam_data.world_matrix
  addUserKnob {26 ""}
  addUserKnob {41 id T id_assign.matrix}
  addUserKnob {26 ""}
  addUserKnob {7 determinant}
  determinant {{"\[value \[value knob_path].\[value id.0]] * ((\[value \[value knob_path].\[value id.4]]*\[value \[value knob_path].\[value id.8]]) - (\[value \[value knob_path].\[value id.5]]*\[value \[value knob_path].\[value id.7]])) - \[value \[value knob_path].\[value id.1]] * ((\[value \[value knob_path].\[value id.3]]*\[value \[value knob_path].\[value id.8]]) - (\[value \[value knob_path].\[value id.5]]*\[value \[value knob_path].\[value id.6]])) + \[value \[value knob_path].\[value id.2]] * ((\[value \[value knob_path].\[value id.3]]*\[value \[value knob_path].\[value id.7]])-(\[value \[value knob_path].\[value id.4]]*\[value \[value knob_path].\[value id.6]]))"}}
  addUserKnob {26 ""}
  addUserKnob {41 cofactor T mtx_cofactor.matrix}
  addUserKnob {26 ""}
  addUserKnob {41 invMatrix T matrix_output.matrix}
  addUserKnob {20 t_VERSION l Version}
  addUserKnob {26 l_VERSION l Version T 1.0}
  addUserKnob {26 l_DATE l "Date Modified" T 2011-11-28}
  addUserKnob {26 l_CHANGELOG l Changelog T "v1.0\n- reveal the calculate output of \n  inverse matrix which is c44matrix\n  and colormatrix doesn't show\n  "}
  addUserKnob {26 l_DEV l "Developed by" T "Mark Joey Tang"}
 }
  Matrix {
   inputs 0
   matrix {
       {0 1 2}
       {4 5 6}
       {8 9 10}
     }
   name id_assign
   xpos -12
   ypos 33
  }
  Matrix {
   inputs 0
   matrix {
       {{"(\[value \[value knob_path].\[value id.4]]*\[value \[value knob_path].\[value id.8]]) - (\[value \[value knob_path].\[value id.5]]*\[value \[value knob_path].\[value id.7]])"} {"(\[value \[value knob_path].\[value id.7]]*\[value \[value knob_path].\[value id.2]]) - (\[value \[value knob_path].\[value id.8]]*\[value \[value knob_path].\[value id.1]])"} {"(\[value \[value knob_path].\[value id.1]]*\[value \[value knob_path].\[value id.5]]) - (\[value \[value knob_path].\[value id.2]]*\[value \[value knob_path].\[value id.4]])"}}
       {{"(\[value \[value knob_path].\[value id.5]]*\[value \[value knob_path].\[value id.6]]) - (\[value \[value knob_path].\[value id.3]]*\[value \[value knob_path].\[value id.8]])"} {"(\[value \[value knob_path].\[value id.8]]*\[value \[value knob_path].\[value id.0]]) - (\[value \[value knob_path].\[value id.6]]*\[value \[value knob_path].\[value id.2]])"} {"(\[value \[value knob_path].\[value id.2]]*\[value \[value knob_path].\[value id.3]]) - (\[value \[value knob_path].\[value id.0]]*\[value \[value knob_path].\[value id.5]])"}}
       {{"(\[value \[value knob_path].\[value id.3]]*\[value \[value knob_path].\[value id.7]]) - (\[value \[value knob_path].\[value id.4]]*\[value \[value knob_path].\[value id.6]])"} {"(\[value \[value knob_path].\[value id.6]]*\[value \[value knob_path].\[value id.1]]) - (\[value \[value knob_path].\[value id.7]]*\[value \[value knob_path].\[value id.0]])"} {"(\[value \[value knob_path].\[value id.0]]*\[value \[value knob_path].\[value id.4]]) - (\[value \[value knob_path].\[value id.1]]*\[value \[value knob_path].\[value id.3]])"}}
     }
   name mtx_cofactor
   xpos 86
   ypos 32
  }
  Matrix {
   inputs 0
   matrix {
       {{"cofactor.0 == 0 || determinant == 0 ? 0 : cofactor.0/determinant"} {"cofactor.1 == 0 || determinant == 0 ? 0 : cofactor.1/determinant"} {"cofactor.2 == 0 || determinant == 0 ? 0 : cofactor.2/determinant"}}
       {{"cofactor.3 == 0 || determinant == 0 ? 0 : cofactor.3/determinant"} {"cofactor.4 == 0 || determinant == 0 ? 0 : cofactor.4/determinant"} {"cofactor.5 == 0 || determinant == 0 ? 0 : cofactor.5/determinant"}}
       {{"cofactor.6 == 0 || determinant == 0 ? 0 : cofactor.6/determinant"} {"cofactor.7 == 0 || determinant == 0 ? 0 : cofactor.7/determinant"} {"cofactor.8 == 0 || determinant == 0 ? 0 : cofactor.8/determinant"}}
     }
   name matrix_output
   xpos 186
   ypos 33
  }
 end_group
 Camera {
  inputs 0
  rotate {0 0 {-parent.cam_winroll}}
  win_translate {{parent.cam_win_translate} {parent.cam_win_translate}}
  win_scale {{parent.cam_win_scale} {parent.cam_win_scale}}
  name fb_data
  xpos -340
  ypos 2087
 }
 NoOp {
  inputs 0
  name store
  xpos -843
  ypos 28
  addUserKnob {20 User}
  addUserKnob {22 fn T "### level define ###\n\ndef getLevel() :\n\tif len(nuke.thisNode().fullName().split('.')) == 1 :\n\t\tggLevel = nuke.root()\n\telse :\n\t\tnodePath = nuke.thisNode().fullName().split('.')\n\t\tnodePath.pop()\n\t\tggLevel = nuke.toNode('.'.join(nodePath))\n\treturn ggLevel\n\n### sample z in 2D ###\n\ndef sample2d() :\n\tthisGRP = nuke.thisGroup()\n\tif thisGRP\['sample_z_status'].value() == '<font color=cyan>\[ ON ]</font>' :\n\t\tsam_co = thisGRP\['sample_point'].getValue()\n\t\tzdata = nuke.toNode('sam_dot').sample('blue', sam_co\[0], sam_co\[1]) * -1\n\t\tthisGRP\['fregion_define_z'].setValue( zdata )" +STARTLINE}
  addUserKnob {15 fregion}
  fregion {{parent.focus_region} {parent.focus_region} {parent.focus_region} {parent.focus_region}}
 }
 NoOp {
  inputs 0
  name global_math
  xpos -842
  ypos -43
  addUserKnob {20 User}
  addUserKnob {7 hratio}
  hratio {{"cam_data.haperture / cam_data.focal"}}
  addUserKnob {7 maxwidth}
  maxwidth {{"hratio * parent.fregion_define_z"}}
  addUserKnob {7 maxheight}
  maxheight {{"hratio * parent.fregion_define_z * ( img_dot.height / img_dot.width )"}}
  addUserKnob {13 pt1}
  pt1 {{"( ( ( maxwidth * ( parent.focus_region.x(parent.fregion_ref_frame) / img_dot.width) ) - ( maxwidth / 2 ) ) * fb_data.world_matrix.0 + ( ( ( maxheight * ( parent.focus_region.y(parent.fregion_ref_frame) / img_dot.height ) ) - ( maxheight / 2 ) ) * 1 / \[value root.format.pixel_aspect] ) * fb_data.world_matrix.1 ) * fb_data.win_scale.u + ( hratio * abs(parent.fregion_define_z) * fb_data.win_translate.u /2 )"} {"( ( ( maxwidth * ( parent.focus_region.x(parent.fregion_ref_frame) / img_dot.width) ) - ( maxwidth / 2 ) ) * fb_data.world_matrix.4 + \n( ( ( maxheight * ( parent.focus_region.y(parent.fregion_ref_frame) / img_dot.height ) ) - ( maxheight / 2 ) ) * 1 / \[value root.format.pixel_aspect] ) * fb_data.world_matrix.5 ) * fb_data.win_scale.v + ( hratio * abs(parent.fregion_define_z) * fb_data.win_translate.v /2 )"} {-parent.fregion_define_z}}
  addUserKnob {13 pt2}
  pt2 {{"( ( ( maxwidth * ( parent.focus_region.r(parent.fregion_ref_frame) / img_dot.width) ) - ( maxwidth / 2 ) ) * fb_data.world_matrix.0 + ( ( ( maxheight * ( parent.focus_region.t(parent.fregion_ref_frame) / img_dot.height ) ) - ( maxheight / 2 ) ) * 1 / \[value root.format.pixel_aspect] ) * fb_data.world_matrix.1 ) * fb_data.win_scale.u + ( hratio * abs(parent.fregion_define_z) * fb_data.win_translate.u /2 )"} {"( ( ( maxwidth * ( parent.focus_region.r(parent.fregion_ref_frame) / img_dot.width) ) - ( maxwidth / 2 ) ) * fb_data.world_matrix.4 + ( ( ( maxheight * ( parent.focus_region.t(parent.fregion_ref_frame) / img_dot.height ) ) - ( maxheight / 2 ) ) * 1 / \[value root.format.pixel_aspect] ) * fb_data.world_matrix.5 ) * fb_data.win_scale.v + ( hratio * abs(parent.fregion_define_z) * fb_data.win_translate.v /2 )"} {-parent.fregion_define_z}}
 }
end_group
Camera2 {
 inputs 0
 translate {-23.73355293 6.752248287 -3.158116341}
 rotate {30.63627052 -44.94124796 0}
 focal 24
 name Camera6
 xpos -291
 ypos 999
}
Scene {
 inputs 2
 name Scene6
 xpos -109
 ypos 1142
}
Dot {
 name Dot6
 xpos -85
 ypos 1329
}
Camera2 {
 inputs 0
 translate {{curve x1 -23.73355293 x50 1.828465939 x100 10.79810143} {curve x1 6.752248287 x50 13.82691669 x100 25.23773003} {curve x1 -3.158116341 x50 5.475767136 x100 -12.79232216}}
 rotate {{curve x1 30.63627052 x50 14.22963619 x100 -23.22279344} {curve x1 -44.94124796 x50 19.70681696 x100 76.6501109} {curve x1 0 x50 27.42004885 x100 13.36756642}}
 focal 24
 name Camera7
 xpos -1083
 ypos 2091
}
Dot {
 name Dot7
 xpos -1059
 ypos 2798
}
Group {
 inputs 0
 name render_with_pworld3
 xpos -400
 ypos 1992
 postage_stamp true
}
 Camera2 {
  inputs 0
  translate {{curve x1 -23.73355293 x50 1.828465939 x100 10.79810143} {curve x1 6.752248287 x50 13.82691669 x100 25.23773003} {curve x1 -3.158116341 x50 5.475767136 x100 -12.79232216}}
  rotate {{curve x1 30.63627052 x50 14.22963619 x100 -23.22279344} {curve x1 -44.94124796 x50 19.70681696 x100 76.6501109} {curve x1 0 x50 27.42004885 x100 13.36756642}}
  focal 24
  name Camera1
  selected true
  xpos 241
  ypos -567
 }
 Dot {
  name Dot2
  xpos 351
  ypos -543
 }
set N829b9130 [stack 0]
 Dot {
  name Dot3
  xpos 351
  ypos -428
 }
push $N829b9130
 CheckerBoard2 {
  inputs 0
  name CheckerBoard1
  xpos 406
  ypos -928
 }
 Dot {
  name Dot1
  xpos 440
  ypos -814
 }
set N829c1fe0 [stack 0]
 Dot {
  name Dot5
  xpos 553
  ypos -814
 }
set N829c4360 [stack 0]
 Dot {
  name Dot4
  xpos 693
  ypos -814
 }
 Multiply {
  channels rgb
  value {0 1 1 1}
  name Multiply3
  xpos 659
  ypos -756
 }
 Cube {
  rows 1
  columns 1
  separate_faces false
  translate {-7.849998951 18.14999962 -19.00000191}
  rotate {0 0 45.93192592}
  uniform_scale 7
  name Cube1
  xpos 659
  ypos -676
 }
push $N829c4360
 Multiply {
  channels rgb
  value {1 0 1 1}
  name Multiply2
  xpos 519
  ypos -750
 }
 Sphere {
  translate {-15.00000191 16.45000076 -17.79999924}
  scaling {3.183291435 1 2.618715286}
  uniform_scale 2
  name Sphere1
  xpos 519
  ypos -670
 }
push $N829c1fe0
 Multiply {
  channels rgb
  value {1 1 0 1}
  name Multiply1
  xpos 406
  ypos -754
 }
 Cylinder {
  rows 1
  close_top true
  close_bottom true
  translate {-3.149999619 19.64999962 -13.89999866}
  rotate {52.26493538 0 32.53306187}
  scaling {1 4.216488838 1}
  uniform_scale 2
  name Cylinder1
  xpos 406
  ypos -673
 }
 Scene {
  inputs 4
  name Scene1
  xpos 416
  ypos -567
 }
 Reformat {
  inputs 0
  type "to box"
  box_width 1280
  box_height 720
  box_fixed true
  name Reformat1
  xpos 530
  ypos -431
 }
 ScanlineRender {
  inputs 3
  conservative_shader_sampling false
  motion_vectors_type off
  MB_channel none
  output_shader_vectors true
  P_channel pworld
  name ScanlineRender1
  xpos 406
  ypos -431
 }
 Output {
  name Output1
  xpos 406
  ypos -331
 }
end_group
Dot {
 name Dot14
 xpos -366
 ypos 2120
}
set N82b0bfa0 [stack 0]
Group {
 name SSMesh5
 tile_color 0x5c9e83ff
 label "<font color=cyan>Geo Output</font>"
 xpos -992
 ypos 2103
 addUserKnob {20 tab_general l General}
 addUserKnob {22 set_link l "link to selected camera" t "Click to link selected camera by expression. This tool will get the focal, haperture and world matrix from selected camera to generate" T "def getLevel() :\n\t### level define ###\n\tif len(nuke.thisNode().fullName().split('.')) == 1 :\n\t\t  ggLevel = nuke.root()\n\telse :\n\t\t  nodePath = nuke.thisNode().fullName().split('.')\n\t\t  nodePath.pop()\n\t\t  ggLevel = nuke.toNode('.'.join(nodePath))\n\treturn ggLevel\n\nroot = getLevel()\nthisGRP = nuke.thisGroup()\n\nmainKnobs = \['world_matrix','cam_focal','cam_haperture','cam_win_translate','cam_win_scale','cam_winroll']\ndefaultKnobs = \{\n\t\t\t'world matrix' : 'world_matrix',\n\t\t\t'focal length' : 'focal',\n\t\t\t'horiz aperture' : 'haperture',\n\t\t\t'window translate' : 'win_translate',\n\t\t\t'window scale' : 'win_scale',\n\t\t\t'window roll' : 'winroll'\n\t\t\t\}\nselNodeKnobs = \[]\nmissingKnob = \[]\n\ntry :\n\twith root :\n\t\tselNode = nuke.selectedNode()\n\n\tfor knob in selNode.knobs() :\n\t\tselNodeKnobs.append( knob )\n\n\tselNodeKnobs.sort()\n\n\tfor key,value in defaultKnobs.items() :\n\t\tif value not in selNodeKnobs :\n\t\t\tmissingKnob.append( key )\n\n\tif not len(missingKnob) :\n\t\twith root :\n\t\t\tCAMnode = selNode.name()\n\t\t\tthisGRP\[mainKnobs\[0]].setExpression('\{0\}.world_matrix'.format(CAMnode))\n\t\t\tthisGRP\[mainKnobs\[1]].setExpression('\{0\}.focal'.format(CAMnode))\n\t\t\tthisGRP\[mainKnobs\[2]].setExpression('\{0\}.haperture'.format(CAMnode))\n\t\t\tthisGRP\[mainKnobs\[3]].setExpression('\{0\}.win_translate'.format(CAMnode))\n\t\t\tthisGRP\[mainKnobs\[4]].setExpression('\{0\}.win_scale'.format(CAMnode))\n\t\t\tthisGRP\[mainKnobs\[5]].setExpression('\{0\}.winroll'.format(CAMnode))\n\telse :\n\t\tp = nuke.Panel('Select knobs :')\n\t\tp.addBooleanCheckBox( '<b>Unable to find the default knobs. Please use the pulldown menu below to define the knob manually.</b>' , False)\n\t\tfor rk in missingKnob :\n\t\t\tp.addEnumerationPulldown( rk, ' '.join( selNodeKnobs ) )\n\n\t\tif p.show() :\n\t\t\ttry :\n\t\t\t\tfor key,value in defaultKnobs.items() :\n\t\t\t\t\tif p.value( key ) != None :\n\t\t\t\t\t\tdefaultKnobs\[key] = p.value( key )\n\t\t\texcept :\n\t\t\t\tpass\n\n\t\t\twith root :\n\t\t\t\tCAMnode = selNode.name()\n\t\t\t\tthisGRP\[mainKnobs\[0]].setExpression('\{0\}.\{1\}'.format(CAMnode, defaultKnobs\['world matrix']))\n\t\t\t\tthisGRP\[mainKnobs\[1]].setExpression('\{0\}.\{1\}'.format(CAMnode, defaultKnobs\['focal length']))\n\t\t\t\tthisGRP\[mainKnobs\[2]].setExpression('\{0\}.\{1\}'.format(CAMnode, defaultKnobs\['horiz aperture']))\n\t\t\t\tthisGRP\[mainKnobs\[3]].setExpression('\{0\}.\{1\}'.format(CAMnode, defaultKnobs\['window translate']))\n\t\t\t\tthisGRP\[mainKnobs\[4]].setExpression('\{0\}.\{1\}'.format(CAMnode, defaultKnobs\['window scale']))\n\t\t\t\tthisGRP\[mainKnobs\[5]].setExpression('\{0\}.\{1\}'.format(CAMnode, defaultKnobs\['window roll']))\nexcept :\n\tnuke.message('no node selected.')" +STARTLINE}
 addUserKnob {22 remove_link l "remove linked expression" t "Remove the linked camera expression but won't reset any data." -STARTLINE T "thisGRP = nuke.thisGroup()\nmainKnobs = \['world_matrix','cam_focal','cam_haperture','cam_win_translate','cam_win_scale','cam_winroll']\n\nfor knob in thisGRP.knobs() :\n\tif mainKnobs.count(knob) != 0 :\n\t\t thisGRP\[knob].clearAnimated()"}
 addUserKnob {20 cam_data_grp l "CAMERA DATA" n 1}
 cam_data_grp 0
 addUserKnob {7 cam_focal l "focal length" R 5 100}
 cam_focal {{Camera7.focal}}
 addUserKnob {7 cam_haperture l "horiz aperture" R 0.1 50}
 cam_haperture {{Camera7.haperture}}
 addUserKnob {30 cam_win_translate l "window translate"}
 cam_win_translate {{Camera7.win_translate} {Camera7.win_translate}}
 addUserKnob {30 cam_win_scale l "window scale"}
 cam_win_scale {{Camera7.win_scale} {Camera7.win_scale}}
 addUserKnob {7 cam_winroll l "window roll" R -45 45}
 cam_winroll {{Camera7.winroll}}
 addUserKnob {41 world_matrix l "world matrix" T cam_data.matrix}
 addUserKnob {20 endGroup_1 l endGroup n -1}
 addUserKnob {26 spacer_5 l "" +STARTLINE T <br>}
 addUserKnob {26 title_basic l "<b>BASIC SETTING</b>"}
 addUserKnob {4 display l "3D display" t "How to draw in 3D preview. The viewer can override this setting." M {off wireframe soild solid+wireframe textured textured+wireframe "" "" ""}}
 display textured
 addUserKnob {4 data_type l "data type" t "data type\nUsing one of these data to convert into 3D mesh.\n\nPosition\nSupported world space or camera space position data.\n\nDepth (normalized far=0)\nNormalized depth data, which is same as depth data output by ScanlineRender.\n\nDeep / Depth (direct)\nRaw camera depth data. If using deep, need to convert DeepToImage first, and selected deep channel on 'channels' knob." M {"position (world space)" "position (camera space)" "depth (normalized far=0)" "deep / depth (direct)" "" "" ""}}
 addUserKnob {41 channels t "Select which channel represented on selected data type." T shuffle_data.in}
 addUserKnob {6 unpm l unpremult t "3D data pass should be unpremult with alpha before process." -STARTLINE}
 unpm true
 addUserKnob {26 spacer_4 l "" +STARTLINE T <br>}
 addUserKnob {7 lod l "mesh LOD" t "Level of Details\n\nIf this value set to 1.0, subdivision of the mesh  1:1 to the data available in the resolution. Which mean 1 face of the mesh equal to 1 pixel.\n\nIf this value set to 1.0, it will slow down the render process.\n\nHighly recommend to use 0.1 - 0.5 if high resolution mesh details is not concern."}
 lod 0.5
 addUserKnob {41 filter_size l "filter size" T DisplaceGeo.filter_size}
 addUserKnob {41 filter T DisplaceGeo.filter}
 addUserKnob {26 spacer_2 l "" +STARTLINE T <br>}
 addUserKnob {26 title_drange l "" +STARTLINE T "distance range"}
 addUserKnob {7 drange_near l near t "clip the mesh in the min value in terms of depth." R 0 10000}
 addUserKnob {7 drange_far l far t "clip the mesh in the max value in terms of depth." R 0 10000}
 drange_far 30
 addUserKnob {6 clip_color l "distance clip on color" t "Apply the distance clip on colored texture." +STARTLINE}
 clip_color true
 addUserKnob {26 spacer_3 l "" +STARTLINE T <br>}
 addUserKnob {26 title_export l <b>EXPORT</b>}
 addUserKnob {41 file t "only support *.abc file extension (alembric) ." T WriteGeo.file}
 addUserKnob {22 export_geo l "Export Geo" T "def exportGeo() :\n\twgeo = nuke.toNode('WriteGeo')\n\twgeo\['Execute'].execute()\n\nthisGRP = nuke.thisGroup()\nfilepath = thisGRP\['file'].getValue()\n\nif not len(filepath) :\n\tnuke.message('file path is empty. Process denied.')\nelif not filepath.split('.')\[-1:]\[0].lower() == 'abc' :\n\tif nuke.ask('File extension invalue. Only support render <font color=orange>*.abc</font> . Do you want this tool to fix it and process ?') :\n\t\tthisGRP\['file'].setValue( thisGRP\['file'].getValue() + '.abc' )\n\t\texportGeo()\nelse :\n\texportGeo()" +STARTLINE}
 addUserKnob {22 import_geo l "Import Geo" -STARTLINE T "prefx = nuke.toNode('preferences')\['GridWidth'].value()\nthisGRP = nuke.thisGroup()\ngoStore = nuke.toNode('store')\ngoStore\['fn'].execute()\n\nroot = getLevel()\n\nwith root :\n\trgeo = nuke.nodes.ReadGeo2( file=thisGRP\['file'].getValue() )\n\trgeo.setXYpos( int( thisGRP\['xpos'].getValue() + prefx ) , int( thisGRP\['ypos'].getValue() ) )"}
 addUserKnob {20 tab_misc l Miscellaneous}
 addUserKnob {26 title_focus_region l "<b>FOCUS REGION</b>"}
 addUserKnob {41 use_focus_region l "use focus region" t "use focus region to generate SSMesh in specific area. Save resources and possible to work with high LOD mesh." T menu2.use_focus_region}
 addUserKnob {15 focus_region l "focus region" t "Set focus region in screen space. These values are 2D coordinate." +DISABLED}
 focus_region {0 0 1280 720}
 addUserKnob {26 spacer_1 l "" +STARTLINE T <br>}
 addUserKnob {3 fregion_ref_frame l "ref frame" t "set reference frame for tracking focus region. 'focus region' & 'define z' will apply on this reference frame and process the tracking." +DISABLED}
 fregion_ref_frame 1
 addUserKnob {22 fregion_set_frame l "set current frame" t "set current frame for focus region reference frame." -STARTLINE +DISABLED T "nuke.thisGroup()\['fregion_ref_frame'].setValue( nuke.frame() )"}
 addUserKnob {12 sample_point l "sample position" t "Toggle 'sample z' in 2D to enable this 2D sample coordinate." +DISABLED}
 addUserKnob {22 sample_z_toggle l "sample z in 2D" t "'sample z' is only works for sample value purpose. After sample is done, must turn off sample function." -STARTLINE +DISABLED T "thisGRP = nuke.thisGroup()\nszstatus = thisGRP\['sample_z_status'].value()\n\nstatus = \['<font color=red>\[ OFF ]</font>','<font color=cyan>\[ ON ]</font>']\n\nif szstatus == status\[0] :\n\tthisGRP\['sample_z_status'].setValue( status\[1] )\n\tthisGRP\['sample_point'].setEnabled(True)\n\tthisGRP\['updateUI'].setValue(\"goStore = nuke.toNode(\\'store\\')\\ngoStore\[\\'fn\\'].execute()\\nsample2d()\")\nelse :\n\tthisGRP\['sample_z_status'].setValue( status\[0] )\n\tthisGRP\['sample_point'].setEnabled(False)\n\tthisGRP\['updateUI'].setValue('')"}
 addUserKnob {26 sample_z_status l "" -STARTLINE +DISABLED T "<font color=red>\[ OFF ]</font>"}
 addUserKnob {7 fregion_define_z l "define z" t "Define the z value on reference frame. Can use 'sample z in 2D' to get this value." +DISABLED R 0 10000}
 addUserKnob {22 track_focus_region l "<b>\[ track focus region ]</b>" t "Use the set focus region on reference frame to track with camera in 3D space.\n\n* project setting need to be same as image resolution to get the correct result." +DISABLED T "rootST = int( nuke.root()\['first_frame'].getValue() )\nrootED = int( nuke.root()\['last_frame'].getValue() )\n\ngetFrame = nuke.getFramesAndViews( 'frame range', str( rootST ) + '-' + str( rootED ) )\n\ntry :\n\tframeST = int( getFrame\[0].replace( ' ' , '' ).split('-')\[0] )\n\tframeED = int( getFrame\[0].replace( ' ' , '' ).split('-')\[1] )\n\n\tthisGRP = nuke.thisGroup()\n\trefframe = int( thisGRP\['fregion_ref_frame'].getValue() )\n\tcam = nuke.toNode('cam_data')\n\tpt1 = nuke.toNode('left_pt')\['translate'].getValue()\n\tpt2 = nuke.toNode('right_pt')\['translate'].getValue()\n\n\tct_hack = nuke.nodes.CurveTool()\n\n\twith nuke.root() :\n\n\t\tif frameED - frameST != 0 :\n\t\t\tthisGRP\['focus_region'].clearAnimated()\n\t\t\ttempbuffer1 = thisGRP\['focus_region'].getValue()\n\t\t\tthisGRP\['focus_region'].setAnimated()\n\t\t\tthisGRP\['focus_region'].setValueAt( tempbuffer1\[0] , refframe , 0 )\n\t\t\tthisGRP\['focus_region'].setValueAt( tempbuffer1\[1] , refframe , 1 )\n\t\t\tthisGRP\['focus_region'].setValueAt( tempbuffer1\[2] , refframe , 2 )\n\t\t\tthisGRP\['focus_region'].setValueAt( tempbuffer1\[3] , refframe , 3 )\n\n\t\tfor trackframe in xrange( frameST, frameED+1 , 1 ) :\n\t\t\tnuke.execute( ct_hack, trackframe, trackframe )\n\t\t\tthisGRP\['focus_region'].setValueAt( nukescripts.snap3d.projectPoint( cam, pt1 )\[0] , trackframe , 0 )\n\t\t\tthisGRP\['focus_region'].setValueAt( nukescripts.snap3d.projectPoint( cam, pt1 )\[1] , trackframe , 1 )\n\t\t\tthisGRP\['focus_region'].setValueAt( nukescripts.snap3d.projectPoint( cam, pt2 )\[0] , trackframe , 2 )\n\t\t\tthisGRP\['focus_region'].setValueAt( nukescripts.snap3d.projectPoint( cam, pt2 )\[1] , trackframe , 3 )\n\n\tnuke.delete( ct_hack )\nexcept :\n    pass" +STARTLINE}
 addUserKnob {26 spacer_6 l "" +STARTLINE T <br>}
 addUserKnob {20 grp_crop_preview l "3D crop preview" +DISABLED n 1}
 grp_crop_preview 0
 addUserKnob {6 show_crop l "show crop point" t "It will show 2 spheres for the crop in 3D space. They set in the place which is where you set the focus region in screen space and defined by z." +DISABLED +STARTLINE}
 addUserKnob {7 crop_point_scale l scale t "Scale the preview crop points (spheres)." +DISABLED}
 crop_point_scale 0.3
 addUserKnob {18 crop_point_color l color t "change color of the crop points (spheres)." +DISABLED}
 crop_point_color 1
 addUserKnob {6 crop_point_color_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 crop_point_color_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 crop_point_color_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 crop_point_color_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 crop_point_color_panelDropped_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 crop_point_color_panelDropped_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 crop_point_color_panelDropped_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 crop_point_color_panelDropped_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 crop_point_color_panelDropped_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 crop_point_color_panelDropped_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {20 endGroup n -1}
 addUserKnob {26 spacer l "" +STARTLINE T <br>}
 addUserKnob {26 title_uv l <b>UV</b>}
 addUserKnob {41 uv_stabilize l "uv stabilize" t "Turn this on if you need to stabilize in UV space. During UV stabilize on, the geo will not be animated. Set reference frame under 'mesh ref frame'." T menu1.uv_stabilize}
 addUserKnob {3 uv_ref_frame l "mesh ref frame" t "Select the frame number that will have identity geo shaped for UV texturing."}
 uv_ref_frame 64
 addUserKnob {22 uv_set_frame l "set current frame" -STARTLINE T "nuke.thisGroup()\['uv_ref_frame'].setValue( nuke.frame() )"}
 addUserKnob {6 black_outside l "black outside" t "black outside the UV texture." +STARTLINE}
 black_outside true
 addUserKnob {20 t_VERSION l Version}
 addUserKnob {26 l_VERSION l Version T 1.3}
 addUserKnob {26 l_DATE l "Date Modified" T 2019-11-08}
 addUserKnob {26 l_CHANGELOG l Changelog T "1.3\n- camera window supported\n- anamophic project supported\n- fix the conflict of 'force region' and 'UV stabilize'.\n  can use both at the same time now.\n\n1.2\n- removed unuse camera link knobs\n- added focus region, so mesh can be\n  form in specific area/object to save\n  resources for higher LOD\n\n1.1\n- fix the missing line on 'Export Geo' \n  button\n\n1.0\n- create mesh/geo in screen space\n  using position/depth/deep data"}
 addUserKnob {26 l_DEV l "Developed by" T "<a href=\"https://facebook.com/MJTLab\"><font color=orange>Mark Joey Tang</font></a>"}
}
 BackdropNode {
  inputs 0
  name BackdropNode1
  tile_color 0xff
  label "don't touch"
  note_font_size 32
  xpos -1142
  ypos -169
  bdwidth 202
  bdheight 478
 }
 BackdropNode {
  inputs 0
  name BackdropNode2
  tile_color 0x4c4c4cff
  label bin
  note_font_size 32
  xpos -899
  ypos -170
  bdwidth 200
  bdheight 280
 }
 Input {
  inputs 0
  name img
  xpos -100
  ypos -184
 }
 Dot {
  name img_dot
  xpos -66
  ypos -83
 }
set N5012ddb0 [stack 0]
 Dot {
  name Dot3
  xpos 758
  ypos -83
 }
set N831ba3d0 [stack 0]
 Shuffle {
  in pworld
  in2 alpha
  alpha red2
  name shuffle_data
  label "\[value in]"
  xpos 724
  ypos -32
 }
 Unpremult {
  name Unpremult_data
  xpos 724
  ypos 62
  disable {{!parent.unpm}}
 }
 Dot {
  name Dot5
  xpos 758
  ypos 700
 }
set N3e85ff50 [stack 0]
 Dot {
  name Dot6
  xpos 928
  ypos 700
 }
set N3e862410 [stack 0]
 Dot {
  name Dot7
  xpos 1106
  ypos 700
 }
set N3e8648d0 [stack 0]
 Dot {
  name Dot8
  xpos 1260
  ypos 700
 }
 Expression {
  temp_name0 dvalue
  temp_expr0 red
  temp_name1 xpos
  temp_expr1 "( ( x + 0.5 ) / input.width - 0.5 ) * \[value global_math.hratio] * abs( dvalue )"
  temp_name2 ypos
  temp_expr2 "( ( y + 0.5 ) / input.height - 0.5 ) * ( \[value global_math.hratio] * abs( dvalue ) * ( img_dot.height / img_dot.width ) ) * 1 / \[value format.pixel_aspect]"
  temp_name3 zpos
  temp_expr3 "- dvalue"
  expr0 "( xpos * \[value fb_data.world_matrix.0] + ypos * \[value fb_data.world_matrix.1] ) * \[value fb_data.win_scale.u] + ( \[value global_math.hratio] * abs(zpos) * \[value fb_data.win_translate.u] / 2 )"
  expr1 "( xpos * \[value fb_data.world_matrix.4] + ypos * \[value fb_data.world_matrix.5] ) * \[value fb_data.win_scale.v] + ( \[value global_math.hratio] * abs(zpos) * \[value fb_data.win_translate.v] / 2 )"
  expr2 zpos
  name Expression9
  xpos 1226
  ypos 774
 }
 Dot {
  name Dot16
  xpos 1260
  ypos 889
 }
push $N3e8648d0
 Expression {
  temp_name0 dvalue
  temp_expr0 "1 / red"
  temp_name1 xpos
  temp_expr1 "( ( x + 0.5 ) / input.width - 0.5 ) * \[value global_math.hratio] * abs( dvalue )"
  temp_name2 ypos
  temp_expr2 "( ( y + 0.5 ) / input.height - 0.5 ) * ( \[value global_math.hratio] * abs( dvalue ) * ( img_dot.height / img_dot.width ) ) * 1 / \[value format.pixel_aspect]"
  temp_name3 zpos
  temp_expr3 "- dvalue"
  expr0 "( xpos * \[value fb_data.world_matrix.0] + ypos * \[value fb_data.world_matrix.1] ) * \[value fb_data.win_scale.u] + ( \[value global_math.hratio] * abs(zpos) * \[value fb_data.win_translate.u] / 2 )"
  expr1 "( xpos * \[value fb_data.world_matrix.4] + ypos * \[value fb_data.world_matrix.5] ) * \[value fb_data.win_scale.v] + ( \[value global_math.hratio] * abs(zpos) * \[value fb_data.win_translate.v] / 2 )"
  expr2 zpos
  name Expression6
  xpos 1072
  ypos 774
 }
 Dot {
  name Dot17
  xpos 1106
  ypos 863
 }
push $N3e862410
 Expression {
  expr2 -blue
  name Expression7
  label "fix z"
  xpos 894
  ypos 774
 }
 Dot {
  name Dot18
  xpos 928
  ypos 876
 }
push $N3e85ff50
 Expression {
  temp_name0 nx
  temp_expr0 "red - cam_data.world_matrix.3"
  temp_name1 ny
  temp_expr1 "green - cam_data.world_matrix.7"
  temp_name2 nz
  temp_expr2 "blue - cam_data.world_matrix.11"
  expr0 "nx * \[value inverseMatrix.invMatrix.0] + ny * \[value inverseMatrix.invMatrix.1] + nz * \[value inverseMatrix.invMatrix.2]"
  expr1 "nx * \[value inverseMatrix.invMatrix.3] + ny * \[value inverseMatrix.invMatrix.4] + nz * \[value inverseMatrix.invMatrix.5]"
  expr2 "nx * \[value inverseMatrix.invMatrix.6] + ny * \[value inverseMatrix.invMatrix.7] + nz * \[value inverseMatrix.invMatrix.8]"
  name Expression3
  label "position invert"
  xpos 724
  ypos 774
 }
 Switch {
  inputs 4
  which {{parent.data_type}}
  name Switch1
  xpos 724
  ypos 984
 }
 Dot {
  name Dot13
  xpos 758
  ypos 1113
 }
set N3e891b90 [stack 0]
 Dot {
  name sam_dot
  xpos 551
  ypos 1113
 }
 NoOp {
  inputs 0
  name menu1
  knobChanged "\nthisGRP = nuke.thisGroup()\nif thisGRP\['uv_stabilize'].getValue() == 1 :\n    thisGRP\['uv_ref_frame'].setEnabled(True)\n    thisGRP\['uv_set_frame'].setEnabled(True)\n    thisGRP\['black_outside'].setEnabled(True)\nelse :\n    thisGRP\['uv_ref_frame'].setEnabled(False)\n    thisGRP\['uv_set_frame'].setEnabled(False)\n    thisGRP\['black_outside'].setEnabled(False)\n"
  xpos -1085
  ypos -42
  addUserKnob {20 User}
  addUserKnob {6 uv_stabilize l "uv stabilize" +STARTLINE}
  uv_stabilize true
 }
 NoOp {
  inputs 0
  name menu2
  onCreate "\nthisGRP = nuke.thisGroup()\nfregion_knobs = \['focus_region','fregion_define_z','sample_z_toggle','sample_z_status','sample_point','fregion_ref_frame','fregion_set_frame','track_focus_region','grp_crop_preview','show_crop','crop_point_scale','crop_point_color']\n\nthisGRP\[fregion_knobs\[4]].setEnabled(True)\n\nif thisGRP\['use_focus_region'].getValue()  == 0 :\n    for i in fregion_knobs :\n        thisGRP\[i].setEnabled(False)\n    thisGRP\[fregion_knobs\[3]].setValue( '<font color=red>\[ OFF ]</font>' )\n    thisGRP\['updateUI'].setValue('')\n    nuke.toNode('material_switch')\['disable'].setValue(0)\nelse :\n    for i in fregion_knobs :\n        if i != 'sample_point' :\n            thisGRP\[i].setEnabled(True)\n        else :\n            thisGRP\[i].setEnabled(False)\n    nuke.toNode('material_switch')\['disable'].setValue(1)\n"
  knobChanged "\nthisGRP = nuke.thisGroup()\nfregion_knobs = \['focus_region','fregion_define_z','sample_z_toggle','sample_z_status','sample_point','fregion_ref_frame','fregion_set_frame','track_focus_region','grp_crop_preview','show_crop','crop_point_scale','crop_point_color']\n\nif thisGRP\['use_focus_region'].getValue()  == 0 :\n    for i in fregion_knobs :\n        thisGRP\[i].setEnabled(False)\n    thisGRP\[fregion_knobs\[3]].setValue( '<font color=red>\[ OFF ]</font>' )\n    thisGRP\['updateUI'].setValue('')\n    nuke.toNode('material_switch')\['disable'].setValue(0)\nelse :\n    for i in fregion_knobs :\n        if i != 'sample_point' :\n            thisGRP\[i].setEnabled(True)\n    nuke.toNode('material_switch')\['disable'].setValue(1)\n"
  xpos -1085
  ypos 25
  addUserKnob {20 User}
  addUserKnob {6 use_focus_region l "use focus region" +STARTLINE}
 }
 Camera {
  inputs 0
  display off
  selectable false
  useMatrix true
  matrix {
      {{Camera7.world_matrix} {Camera7.world_matrix} {Camera7.world_matrix} {Camera7.world_matrix}}
      {{Camera7.world_matrix} {Camera7.world_matrix} {Camera7.world_matrix} {Camera7.world_matrix}}
      {{Camera7.world_matrix} {Camera7.world_matrix} {Camera7.world_matrix} {Camera7.world_matrix}}
      {{Camera7.world_matrix} {Camera7.world_matrix} {Camera7.world_matrix} {Camera7.world_matrix}}
    }
  focal {{parent.cam_focal}}
  haperture {{cam_haperture}}
  name cam_data
  xpos -335
  ypos 2204
 }
push $N3e891b90
 Expression {
  temp_name0 unpremultA
  temp_expr0 "alpha * ( 1 / alpha )"
  temp_name1 max
  temp_expr1 blue
  expr3 "abs( max ) < \[value parent.drange_near] || abs( max ) > \[value parent.drange_far] ? 0 : isnan(unpremultA) ? 0 : unpremultA"
  name Expression1
  label "distance crop"
  xpos 724
  ypos 1244
 }
 Premult {
  name Premult1
  xpos 724
  ypos 1332
 }
 Dot {
  name Dot9
  xpos 758
  ypos 1640
 }
set N3e8b5b60 [stack 0]
push $N5012ddb0
 Dot {
  name Dot10
  xpos -66
  ypos 1552
 }
set N3e8b8020 [stack 0]
 Unpremult {
  name Unpremult1
  xpos 48
  ypos 1549
 }
 Merge2 {
  inputs 2
  operation mask
  name Merge2
  xpos 48
  ypos 1637
 }
 Premult {
  name Premult3
  xpos 48
  ypos 1719
 }
push $N3e8b8020
 Switch {
  inputs 2
  which {{parent.clip_color}}
  name Switch2
  xpos -100
  ypos 1828
 }
 Project3D2 {
  inputs 2
  crop {{parent.black_outside}}
  name Project3D2
  xpos -100
  ypos 2224
 }
push $N831ba3d0
 Dot {
  name Dot2
  xpos 1576
  ypos -84
 }
 Shuffle {
  red black
  green black
  blue black
  alpha black
  name Shuffle1
  label "\[value in]"
  xpos 1542
  ypos 30
 }
 Remove {
  name Remove1
  xpos 1542
  ypos 118
 }
 Reformat {
  type scale
  black_outside true
  name Reformat1
  xpos 1542
  ypos 212
 }
 Expression {
  temp_name0 xpos
  temp_expr0 "( ( x + 0.5 ) / input.width - 0.5) *  \[value global_math.hratio] * abs( \[value parent.drange_far] )"
  temp_name1 ypos
  temp_expr1 "( ( y + 0.5 ) / input.height -0.5 ) * ( \[value global_math.hratio] * abs( \[value parent.drange_far] ) * ( img_dot.height / img_dot.width ) ) * 1 / \[value format.pixel_aspect]"
  temp_name2 zpos
  temp_expr2 "-\[value parent.drange_far]"
  expr0 "( xpos * \[value fb_data.world_matrix.0] + ypos * \[value fb_data.world_matrix.1] ) * \[value fb_data.win_scale.u] + ( \[value global_math.hratio] * abs(zpos) * \[value fb_data.win_translate.u] / 2 )"
  expr1 "( xpos * \[value fb_data.world_matrix.4] + ypos * \[value fb_data.world_matrix.5] ) * \[value fb_data.win_scale.v] + ( \[value global_math.hratio] * abs(zpos) * \[value fb_data.win_translate.v] / 2 )"
  expr2 zpos
  name Expression8
  xpos 1542
  ypos 845
 }
 ColorMatrix {
  matrix {
      {{cam_data.world_matrix.0} {cam_data.world_matrix.1} {cam_data.world_matrix.2}}
      {{cam_data.world_matrix.4} {cam_data.world_matrix.5} {cam_data.world_matrix.6}}
      {{cam_data.world_matrix.8} {cam_data.world_matrix.9} {cam_data.world_matrix.10}}
    }
  name ColorMatrix1
  xpos 1542
  ypos 970
 }
 Add {
  channels rgb
  value {{cam_data.world_matrix.3} {cam_data.world_matrix.7} {cam_data.world_matrix.11} 0}
  name Add1
  xpos 1542
  ypos 1052
 }
 Crop {
  box {{store.fregion} {store.fregion} {store.fregion} {store.fregion}}
  reformat true
  crop false
  name Crop1
  xpos 1542
  ypos 1476
  disable {{!parent.use_focus_region}}
 }
 Dot {
  name Dot4
  xpos 1576
  ypos 2402
 }
push $N3e8b5b60
 Crop {
  box {{store.fregion} {store.fregion} {store.fregion} {store.fregion}}
  reformat true
  crop false
  name Crop4
  selected true
  xpos 724
  ypos 1714
  disable {{!parent.use_focus_region}}
 }
 Unpremult {
  name Unpremult3
  xpos 724
  ypos 1851
 }
 Expression {
  temp_name0 nx
  temp_expr0 red
  temp_name1 ny
  temp_expr1 green
  temp_name2 nz
  temp_expr2 blue
  expr0 "( nx * \[value cam_data.world_matrix.0] + ny * \[value cam_data.world_matrix.1] + nz * \[value cam_data.world_matrix.2] ) + \[value cam_data.world_matrix.3]"
  expr1 "( nx * \[value cam_data.world_matrix.4] + ny * \[value cam_data.world_matrix.5] + nz * \[value cam_data.world_matrix.6] ) + \[value cam_data.world_matrix.7]"
  expr2 "( nx * \[value cam_data.world_matrix.8] + ny * \[value cam_data.world_matrix.9] + nz * \[value cam_data.world_matrix.10] ) + \[value cam_data.world_matrix.11]"
  name Expression4
  label "position revert"
  xpos 724
  ypos 1933
 }
 Premult {
  name Premult2
  xpos 724
  ypos 2027
 }
 Merge2 {
  inputs 2
  operation under
  name Merge1
  xpos 724
  ypos 2398
 }
 Card {
  inputs 0
  image_aspect false
  rows {{"img_dot.height * parent.lod"}}
  columns {{"img_dot.width * parent.lod"}}
  name ssmesh
  xpos 343
  ypos 2317
 }
 DisplaceGeo {
  inputs 2
  source "rgb absolute"
  scale 1
  filter_size 1
  name DisplaceGeo
  xpos 343
  ypos 2399
 }
 FrameHold {
  first_frame {{parent.uv_ref_frame}}
  name FrameHold
  xpos 343
  ypos 2479
  disable {{!parent.uv_stabilize}}
 }
 ApplyMaterial {
  inputs 2
  name ApplyMaterial1
  xpos -100
  ypos 2483
 }
 Scene {
  display {{parent.display}}
  name gl_scene
  xpos -90
  ypos 3072
 }
set N3e977a90 [stack 0]
 WriteGeo {
  file_type abc
  name WriteGeo
  xpos 120
  ypos 3093
 }
 Axis {
  inputs 0
  display off
  selectable false
  translate {{"( global_math.pt2.x * cam_data.world_matrix.0(parent.fregion_ref_frame) + global_math.pt2.y * cam_data.world_matrix.1(parent.fregion_ref_frame) + global_math.pt2.z * cam_data.world_matrix.2(parent.fregion_ref_frame) ) + cam_data.world_matrix.3(parent.fregion_ref_frame)"} {"( global_math.pt2.x * cam_data.world_matrix.4(parent.fregion_ref_frame) + global_math.pt2.y * cam_data.world_matrix.5(parent.fregion_ref_frame) + global_math.pt2.z * cam_data.world_matrix.6(parent.fregion_ref_frame) ) + cam_data.world_matrix.7(parent.fregion_ref_frame)"} {"( global_math.pt2.x * cam_data.world_matrix.8(parent.fregion_ref_frame) + global_math.pt2.y * cam_data.world_matrix.9(parent.fregion_ref_frame) + global_math.pt2.z * cam_data.world_matrix.10(parent.fregion_ref_frame) ) + cam_data.world_matrix.11(parent.fregion_ref_frame)"}}
  name right_pt
  xpos -600
  ypos 3218
 }
 CheckerBoard2 {
  inputs 0
  format "256 256 0 0 256 256 1 square_256"
  name CheckerBoard1
  xpos -789
  ypos 2694
 }
 Multiply {
  channels rgb
  value {{parent.crop_point_color.r} {parent.crop_point_color.g} {parent.crop_point_color.b} 1}
  name Multiply
  xpos -789
  ypos 2822
 }
 Clamp {
  channels rgba
  name Clamp1
  xpos -789
  ypos 2905
 }
 Sphere {
  selectable false
  cast_shadow false
  receive_shadow false
  rows 10
  columns 10
  uniform_scale {{parent.crop_point_scale}}
  name Sphere1
  xpos -789
  ypos 2987
  disable {{!show_crop}}
 }
 Dot {
  name Dot24
  xpos -755
  ypos 3065
 }
set N3e9d65e0 [stack 0]
 Dot {
  name Dot25
  xpos -456
  ypos 3065
 }
 TransformGeo {
  inputs 2
  selectable false
  name TransformGeo2
  xpos -490
  ypos 3238
 }
 Axis {
  inputs 0
  display off
  selectable false
  translate {{"( global_math.pt1.x * cam_data.world_matrix.0(parent.fregion_ref_frame) + global_math.pt1.y * cam_data.world_matrix.1(parent.fregion_ref_frame) + global_math.pt1.z * cam_data.world_matrix.2(parent.fregion_ref_frame) ) + cam_data.world_matrix.3(parent.fregion_ref_frame)"} {"( global_math.pt1.x * cam_data.world_matrix.4(parent.fregion_ref_frame) + global_math.pt1.y * cam_data.world_matrix.5(parent.fregion_ref_frame) + global_math.pt1.z * cam_data.world_matrix.6(parent.fregion_ref_frame) ) + cam_data.world_matrix.7(parent.fregion_ref_frame)"} {"( global_math.pt1.x * cam_data.world_matrix.8(parent.fregion_ref_frame) + global_math.pt1.y * cam_data.world_matrix.9(parent.fregion_ref_frame) + global_math.pt1.z * cam_data.world_matrix.10(parent.fregion_ref_frame) ) + cam_data.world_matrix.11(parent.fregion_ref_frame)"}}
  name left_pt
  xpos -899
  ypos 3220
 }
push $N3e9d65e0
 TransformGeo {
  inputs 2
  selectable false
  name TransformGeo1
  xpos -789
  ypos 3240
 }
 Scene {
  inputs 2
  selectable false
  name Scene1
  xpos -480
  ypos 3395
 }
 ApplyMaterial {
  display off
  selectable false
  render_mode off
  name material_switch
  xpos -490
  ypos 3523
 }
push $N3e977a90
 Scene {
  inputs 2
  name Scene2
  xpos -90
  ypos 3502
 }
 Output {
  name Output1
  xpos -100
  ypos 4030
 }
 Group {
  inputs 0
  name inverseMatrix
  tile_color 0x337f4cff
  xpos 576
  ypos 780
  addUserKnob {20 tab_general l General}
  addUserKnob {1 knob_path}
  knob_path cam_data.world_matrix
  addUserKnob {26 ""}
  addUserKnob {41 id T id_assign.matrix}
  addUserKnob {26 ""}
  addUserKnob {7 determinant}
  determinant {{"\[value \[value knob_path].\[value id.0]] * ((\[value \[value knob_path].\[value id.4]]*\[value \[value knob_path].\[value id.8]]) - (\[value \[value knob_path].\[value id.5]]*\[value \[value knob_path].\[value id.7]])) - \[value \[value knob_path].\[value id.1]] * ((\[value \[value knob_path].\[value id.3]]*\[value \[value knob_path].\[value id.8]]) - (\[value \[value knob_path].\[value id.5]]*\[value \[value knob_path].\[value id.6]])) + \[value \[value knob_path].\[value id.2]] * ((\[value \[value knob_path].\[value id.3]]*\[value \[value knob_path].\[value id.7]])-(\[value \[value knob_path].\[value id.4]]*\[value \[value knob_path].\[value id.6]]))"}}
  addUserKnob {26 ""}
  addUserKnob {41 cofactor T mtx_cofactor.matrix}
  addUserKnob {26 ""}
  addUserKnob {41 invMatrix T matrix_output.matrix}
  addUserKnob {20 t_VERSION l Version}
  addUserKnob {26 l_VERSION l Version T 1.0}
  addUserKnob {26 l_DATE l "Date Modified" T 2011-11-28}
  addUserKnob {26 l_CHANGELOG l Changelog T "v1.0\n- reveal the calculate output of \n  inverse matrix which is c44matrix\n  and colormatrix doesn't show\n  "}
  addUserKnob {26 l_DEV l "Developed by" T "Mark Joey Tang"}
 }
  Matrix {
   inputs 0
   matrix {
       {0 1 2}
       {4 5 6}
       {8 9 10}
     }
   name id_assign
   xpos -12
   ypos 33
  }
  Matrix {
   inputs 0
   matrix {
       {{"(\[value \[value knob_path].\[value id.4]]*\[value \[value knob_path].\[value id.8]]) - (\[value \[value knob_path].\[value id.5]]*\[value \[value knob_path].\[value id.7]])"} {"(\[value \[value knob_path].\[value id.7]]*\[value \[value knob_path].\[value id.2]]) - (\[value \[value knob_path].\[value id.8]]*\[value \[value knob_path].\[value id.1]])"} {"(\[value \[value knob_path].\[value id.1]]*\[value \[value knob_path].\[value id.5]]) - (\[value \[value knob_path].\[value id.2]]*\[value \[value knob_path].\[value id.4]])"}}
       {{"(\[value \[value knob_path].\[value id.5]]*\[value \[value knob_path].\[value id.6]]) - (\[value \[value knob_path].\[value id.3]]*\[value \[value knob_path].\[value id.8]])"} {"(\[value \[value knob_path].\[value id.8]]*\[value \[value knob_path].\[value id.0]]) - (\[value \[value knob_path].\[value id.6]]*\[value \[value knob_path].\[value id.2]])"} {"(\[value \[value knob_path].\[value id.2]]*\[value \[value knob_path].\[value id.3]]) - (\[value \[value knob_path].\[value id.0]]*\[value \[value knob_path].\[value id.5]])"}}
       {{"(\[value \[value knob_path].\[value id.3]]*\[value \[value knob_path].\[value id.7]]) - (\[value \[value knob_path].\[value id.4]]*\[value \[value knob_path].\[value id.6]])"} {"(\[value \[value knob_path].\[value id.6]]*\[value \[value knob_path].\[value id.1]]) - (\[value \[value knob_path].\[value id.7]]*\[value \[value knob_path].\[value id.0]])"} {"(\[value \[value knob_path].\[value id.0]]*\[value \[value knob_path].\[value id.4]]) - (\[value \[value knob_path].\[value id.1]]*\[value \[value knob_path].\[value id.3]])"}}
     }
   name mtx_cofactor
   xpos 86
   ypos 32
  }
  Matrix {
   inputs 0
   matrix {
       {{"cofactor.0 == 0 || determinant == 0 ? 0 : cofactor.0/determinant"} {"cofactor.1 == 0 || determinant == 0 ? 0 : cofactor.1/determinant"} {"cofactor.2 == 0 || determinant == 0 ? 0 : cofactor.2/determinant"}}
       {{"cofactor.3 == 0 || determinant == 0 ? 0 : cofactor.3/determinant"} {"cofactor.4 == 0 || determinant == 0 ? 0 : cofactor.4/determinant"} {"cofactor.5 == 0 || determinant == 0 ? 0 : cofactor.5/determinant"}}
       {{"cofactor.6 == 0 || determinant == 0 ? 0 : cofactor.6/determinant"} {"cofactor.7 == 0 || determinant == 0 ? 0 : cofactor.7/determinant"} {"cofactor.8 == 0 || determinant == 0 ? 0 : cofactor.8/determinant"}}
     }
   name matrix_output
   xpos 186
   ypos 33
  }
 end_group
 Camera {
  inputs 0
  rotate {0 0 {-parent.cam_winroll}}
  win_translate {{parent.cam_win_translate} {parent.cam_win_translate}}
  win_scale {{parent.cam_win_scale} {parent.cam_win_scale}}
  name fb_data
  xpos -340
  ypos 2087
 }
 NoOp {
  inputs 0
  name store
  xpos -843
  ypos 28
  addUserKnob {20 User}
  addUserKnob {22 fn T "### level define ###\n\ndef getLevel() :\n\tif len(nuke.thisNode().fullName().split('.')) == 1 :\n\t\tggLevel = nuke.root()\n\telse :\n\t\tnodePath = nuke.thisNode().fullName().split('.')\n\t\tnodePath.pop()\n\t\tggLevel = nuke.toNode('.'.join(nodePath))\n\treturn ggLevel\n\n### sample z in 2D ###\n\ndef sample2d() :\n\tthisGRP = nuke.thisGroup()\n\tif thisGRP\['sample_z_status'].value() == '<font color=cyan>\[ ON ]</font>' :\n\t\tsam_co = thisGRP\['sample_point'].getValue()\n\t\tzdata = nuke.toNode('sam_dot').sample('blue', sam_co\[0], sam_co\[1]) * -1\n\t\tthisGRP\['fregion_define_z'].setValue( zdata )" +STARTLINE}
  addUserKnob {15 fregion}
  fregion {{parent.focus_region} {parent.focus_region} {parent.focus_region} {parent.focus_region}}
 }
 NoOp {
  inputs 0
  name global_math
  xpos -842
  ypos -43
  addUserKnob {20 User}
  addUserKnob {7 hratio}
  hratio {{"cam_data.haperture / cam_data.focal"}}
  addUserKnob {7 maxwidth}
  maxwidth {{"hratio * parent.fregion_define_z"}}
  addUserKnob {7 maxheight}
  maxheight {{"hratio * parent.fregion_define_z * ( img_dot.height / img_dot.width )"}}
  addUserKnob {13 pt1}
  pt1 {{"( ( ( maxwidth * ( parent.focus_region.x(parent.fregion_ref_frame) / img_dot.width) ) - ( maxwidth / 2 ) ) * fb_data.world_matrix.0 + ( ( ( maxheight * ( parent.focus_region.y(parent.fregion_ref_frame) / img_dot.height ) ) - ( maxheight / 2 ) ) * 1 / \[value root.format.pixel_aspect] ) * fb_data.world_matrix.1 ) * fb_data.win_scale.u + ( hratio * abs(parent.fregion_define_z) * fb_data.win_translate.u /2 )"} {"( ( ( maxwidth * ( parent.focus_region.x(parent.fregion_ref_frame) / img_dot.width) ) - ( maxwidth / 2 ) ) * fb_data.world_matrix.4 + \n( ( ( maxheight * ( parent.focus_region.y(parent.fregion_ref_frame) / img_dot.height ) ) - ( maxheight / 2 ) ) * 1 / \[value root.format.pixel_aspect] ) * fb_data.world_matrix.5 ) * fb_data.win_scale.v + ( hratio * abs(parent.fregion_define_z) * fb_data.win_translate.v /2 )"} {-parent.fregion_define_z}}
  addUserKnob {13 pt2}
  pt2 {{"( ( ( maxwidth * ( parent.focus_region.r(parent.fregion_ref_frame) / img_dot.width) ) - ( maxwidth / 2 ) ) * fb_data.world_matrix.0 + ( ( ( maxheight * ( parent.focus_region.t(parent.fregion_ref_frame) / img_dot.height ) ) - ( maxheight / 2 ) ) * 1 / \[value root.format.pixel_aspect] ) * fb_data.world_matrix.1 ) * fb_data.win_scale.u + ( hratio * abs(parent.fregion_define_z) * fb_data.win_translate.u /2 )"} {"( ( ( maxwidth * ( parent.focus_region.r(parent.fregion_ref_frame) / img_dot.width) ) - ( maxwidth / 2 ) ) * fb_data.world_matrix.4 + ( ( ( maxheight * ( parent.focus_region.t(parent.fregion_ref_frame) / img_dot.height ) ) - ( maxheight / 2 ) ) * 1 / \[value root.format.pixel_aspect] ) * fb_data.world_matrix.5 ) * fb_data.win_scale.v + ( hratio * abs(parent.fregion_define_z) * fb_data.win_translate.v /2 )"} {-parent.fregion_define_z}}
 }
end_group
Dot {
 name Dot17
 xpos -958
 ypos 2214
}
set N82a638e0 [stack 0]
push 0
ScanlineRender {
 inputs 2
 conservative_shader_sampling false
 projection_mode uv
 motion_vectors_type off
 MB_channel none
 name ScanlineRender1
 xpos -869
 ypos 2211
}
FrameHold {
 first_frame 64
 name FrameHold1
 xpos -869
 ypos 2278
}
Dot {
 name Dot8
 xpos -835
 ypos 2485
}
set N82a73560 [stack 0]
Shuffle {
 red black
 green black
 blue black
 alpha black
 name Shuffle1
 xpos -759
 ypos 2482
}
Roto {
 output alpha
 curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097152}
    {t x44200000 x43b40000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {curvegroup Bezier1 512 bezier
     {{cc
       {f 8192}
       {p
        {x41680000 x3fc00000}
        {x43ea8000 x43c30000}
        {xc1680000 xbfc00000}
        {xc1100000 x41280000}
        {x43dec000 x43bc4000}
        {x41100000 xc1280000}
        {xc0200000 x41500000}
        {x43fec000 x439c8000}
        {x40200000 xc1500000}
        {x41080000 x40a00000}
        {x43f88000 x43800000}
        {xc1080000 xc0a00000}
        {xc1580000 x40d00000}
        {x43f67000 x43698001}
        {x41580000 xc0d00000}
        {xc0900000 xc1a80000}
        {x440d2000 x43844000}
        {x40900000 x41a80000}
        {x41200000 xc1880000}
        {x440ae000 x43a78000}
        {xc1200000 x41880000}
        {x41480000 xc0c00000}
        {x44006000 x43bc0000}
        {xc1480000 x40c00000}}}
      {cc
       {f 8192}
       {p
        {x41680000 x3fc00000}
        {}
        {xc1680000 xbfc00000}
        {xc1100000 x41280000}
        {xc1ee6340 xc08c30c0}
        {x41100000 xc1280000}
        {xc0200000 x41500000}
        {xc21bed08 xc0efe200}
        {x40200000 xc1500000}
        {x41080000 x40a00000}
        {xc210b930 x3f98f900}
        {xc1080000 xc0a00000}
        {xc1580000 x40d00000}
        {xc123f5c0 xc1aa44d8}
        {x41580000 xc0d00000}
        {xc0900000 xc1a80000}
        {x41dc7300 xc0bcf6e0}
        {x40900000 x41a80000}
        {x41200000 xc1880000}
        {x41db6220 x41810c50}
        {xc1200000 x41880000}
        {x41480000 xc0c00000}
        {x418ba580 x41b91720}
        {xc1480000 x40c00000}}}}
     {t x43fd0000 x439e4000}
     {a osw x41200000 osf 0 str 1 spx x44200000 spy x43b40000 sb 1 ltn x42840000 ltm x42840000 tt x40800000}}}}}}
 toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
 toolbar_brush_hardness 0.200000003
 toolbar_source_transform_scale {1 1}
 toolbar_source_transform_center {640 360}
 colorOverlay {0 0 0 0}
 lifetime_type "all frames"
 lifetime_start 66
 lifetime_end 66
 motionblur_shutter_offset_type centred
 source_black_outside true
 name Roto1
 xpos -759
 ypos 2561
}
push $N82a73560
ShuffleCopy {
 inputs 2
 in alpha
 red red
 out mask
 name ShuffleCopy1
 xpos -869
 ypos 2565
}
push $N82a638e0
FrameHold {
 first_frame 64
 name FrameHold3
 xpos -992
 ypos 2288
}
Dot {
 name Dot18
 xpos -958
 ypos 2741
}
ApplyMaterial {
 inputs 2
 name ApplyMaterial1
 xpos -869
 ypos 2738
}
Reformat {
 inputs 0
 type "to box"
 box_width 1280
 box_height 720
 box_fixed true
 name Reformat1
 xpos -759
 ypos 2795
}
ScanlineRender {
 inputs 3
 conservative_shader_sampling false
 motion_vectors_type off
 MB_channel none
 name ScanlineRender2
 xpos -869
 ypos 2795
}
Premult {
 channels rgba
 alpha mask.a
 name Premult1
 xpos -869
 ypos 2875
}
push $N82b0bfa0
Grade {
 inputs 1+1
 white 0.14
 name Grade1
 xpos -400
 ypos 2879
}
Dot {
 name Dot15
 xpos -366
 ypos 3135
}
Camera2 {
 inputs 0
 translate {{curve x1 -23.73355293 x50 1.828465939 x100 10.79810143} {curve x1 6.752248287 x50 13.82691669 x100 25.23773003} {curve x1 -3.158116341 x50 5.475767136 x100 -12.79232216}}
 rotate {{curve x1 30.63627052 x50 14.22963619 x100 -23.22279344} {curve x1 -44.94124796 x50 19.70681696 x100 76.6501109} {curve x1 0 x50 27.42004885 x100 13.36756642}}
 focal 24
 name Camera8
 xpos 211
 ypos 2099
}
Dot {
 name Dot9
 xpos 235
 ypos 2789
}
ColorWheel {
 inputs 0
 gamma 0.45
 name ColorWheel1
 xpos 599
 ypos 2425
}
Transform {
 translate {-70 -60}
 scale 0.3
 center {640 360}
 name Transform1
 xpos 599
 ypos 2518
}
Dot {
 name Dot10
 xpos 633
 ypos 2558
}
set N82cc6220 [stack 0]
Dot {
 name Dot11
 xpos 633
 ypos 2638
}
push $N82cc6220
Group {
 inputs 0
 name render_with_pworld4
 xpos 903
 ypos 1995
 postage_stamp true
}
 Camera2 {
  inputs 0
  translate {{curve x1 -23.73355293 x50 1.828465939 x100 10.79810143} {curve x1 6.752248287 x50 13.82691669 x100 25.23773003} {curve x1 -3.158116341 x50 5.475767136 x100 -12.79232216}}
  rotate {{curve x1 30.63627052 x50 14.22963619 x100 -23.22279344} {curve x1 -44.94124796 x50 19.70681696 x100 76.6501109} {curve x1 0 x50 27.42004885 x100 13.36756642}}
  focal 24
  name Camera1
  xpos 241
  ypos -567
 }
 Dot {
  name Dot2
  xpos 351
  ypos -543
 }
set N82cd9c60 [stack 0]
 Dot {
  name Dot3
  xpos 351
  ypos -428
 }
push $N82cd9c60
 CheckerBoard2 {
  inputs 0
  name CheckerBoard1
  xpos 406
  ypos -928
 }
 Dot {
  name Dot1
  xpos 440
  ypos -814
 }
set N82ce2b10 [stack 0]
 Dot {
  name Dot5
  xpos 553
  ypos -814
 }
set N82ce4e90 [stack 0]
 Dot {
  name Dot4
  xpos 693
  ypos -814
 }
 Multiply {
  channels rgb
  value {0 1 1 1}
  name Multiply3
  xpos 659
  ypos -756
 }
 Cube {
  rows 1
  columns 1
  separate_faces false
  translate {-7.849998951 18.14999962 -19.00000191}
  rotate {0 0 45.93192592}
  uniform_scale 7
  name Cube1
  xpos 659
  ypos -676
 }
push $N82ce4e90
 Multiply {
  channels rgb
  value {1 0 1 1}
  name Multiply2
  xpos 519
  ypos -750
 }
 Sphere {
  translate {-15.00000191 16.45000076 -17.79999924}
  scaling {3.183291435 1 2.618715286}
  uniform_scale 2
  name Sphere1
  xpos 519
  ypos -670
 }
push $N82ce2b10
 Multiply {
  channels rgb
  value {1 1 0 1}
  name Multiply1
  xpos 406
  ypos -754
 }
 Cylinder {
  rows 1
  close_top true
  close_bottom true
  translate {-3.149999619 19.64999962 -13.89999866}
  rotate {52.26493538 0 32.53306187}
  scaling {1 4.216488838 1}
  uniform_scale 2
  name Cylinder1
  xpos 406
  ypos -673
 }
 Scene {
  inputs 4
  name Scene1
  xpos 416
  ypos -567
 }
 Reformat {
  inputs 0
  type "to box"
  box_width 1280
  box_height 720
  box_fixed true
  name Reformat1
  xpos 530
  ypos -431
 }
 ScanlineRender {
  inputs 3
  conservative_shader_sampling false
  motion_vectors_type off
  MB_channel none
  output_shader_vectors true
  P_channel pworld
  name ScanlineRender1
  xpos 406
  ypos -431
 }
 Output {
  name Output1
  xpos 406
  ypos -331
 }
end_group
Dot {
 name Dot12
 xpos 937
 ypos 2123
}
set N82d2c920 [stack 0]
Group {
 name SSMesh10
 tile_color 0x5c9e83ff
 label "<font color=cyan>Geo Output</font>"
 xpos 309
 ypos 2104
 addUserKnob {20 tab_general l General}
 addUserKnob {22 set_link l "link to selected camera" t "Click to link selected camera by expression. This tool will get the focal, haperture and world matrix from selected camera to generate" T "def getLevel() :\n\t### level define ###\n\tif len(nuke.thisNode().fullName().split('.')) == 1 :\n\t\t  ggLevel = nuke.root()\n\telse :\n\t\t  nodePath = nuke.thisNode().fullName().split('.')\n\t\t  nodePath.pop()\n\t\t  ggLevel = nuke.toNode('.'.join(nodePath))\n\treturn ggLevel\n\nroot = getLevel()\nthisGRP = nuke.thisGroup()\n\nmainKnobs = \['world_matrix','cam_focal','cam_haperture','cam_win_translate','cam_win_scale','cam_winroll']\ndefaultKnobs = \{\n\t\t\t'world matrix' : 'world_matrix',\n\t\t\t'focal length' : 'focal',\n\t\t\t'horiz aperture' : 'haperture',\n\t\t\t'window translate' : 'win_translate',\n\t\t\t'window scale' : 'win_scale',\n\t\t\t'window roll' : 'winroll'\n\t\t\t\}\nselNodeKnobs = \[]\nmissingKnob = \[]\n\ntry :\n\twith root :\n\t\tselNode = nuke.selectedNode()\n\n\tfor knob in selNode.knobs() :\n\t\tselNodeKnobs.append( knob )\n\n\tselNodeKnobs.sort()\n\n\tfor key,value in defaultKnobs.items() :\n\t\tif value not in selNodeKnobs :\n\t\t\tmissingKnob.append( key )\n\n\tif not len(missingKnob) :\n\t\twith root :\n\t\t\tCAMnode = selNode.name()\n\t\t\tthisGRP\[mainKnobs\[0]].setExpression('\{0\}.world_matrix'.format(CAMnode))\n\t\t\tthisGRP\[mainKnobs\[1]].setExpression('\{0\}.focal'.format(CAMnode))\n\t\t\tthisGRP\[mainKnobs\[2]].setExpression('\{0\}.haperture'.format(CAMnode))\n\t\t\tthisGRP\[mainKnobs\[3]].setExpression('\{0\}.win_translate'.format(CAMnode))\n\t\t\tthisGRP\[mainKnobs\[4]].setExpression('\{0\}.win_scale'.format(CAMnode))\n\t\t\tthisGRP\[mainKnobs\[5]].setExpression('\{0\}.winroll'.format(CAMnode))\n\telse :\n\t\tp = nuke.Panel('Select knobs :')\n\t\tp.addBooleanCheckBox( '<b>Unable to find the default knobs. Please use the pulldown menu below to define the knob manually.</b>' , False)\n\t\tfor rk in missingKnob :\n\t\t\tp.addEnumerationPulldown( rk, ' '.join( selNodeKnobs ) )\n\n\t\tif p.show() :\n\t\t\ttry :\n\t\t\t\tfor key,value in defaultKnobs.items() :\n\t\t\t\t\tif p.value( key ) != None :\n\t\t\t\t\t\tdefaultKnobs\[key] = p.value( key )\n\t\t\texcept :\n\t\t\t\tpass\n\n\t\t\twith root :\n\t\t\t\tCAMnode = selNode.name()\n\t\t\t\tthisGRP\[mainKnobs\[0]].setExpression('\{0\}.\{1\}'.format(CAMnode, defaultKnobs\['world matrix']))\n\t\t\t\tthisGRP\[mainKnobs\[1]].setExpression('\{0\}.\{1\}'.format(CAMnode, defaultKnobs\['focal length']))\n\t\t\t\tthisGRP\[mainKnobs\[2]].setExpression('\{0\}.\{1\}'.format(CAMnode, defaultKnobs\['horiz aperture']))\n\t\t\t\tthisGRP\[mainKnobs\[3]].setExpression('\{0\}.\{1\}'.format(CAMnode, defaultKnobs\['window translate']))\n\t\t\t\tthisGRP\[mainKnobs\[4]].setExpression('\{0\}.\{1\}'.format(CAMnode, defaultKnobs\['window scale']))\n\t\t\t\tthisGRP\[mainKnobs\[5]].setExpression('\{0\}.\{1\}'.format(CAMnode, defaultKnobs\['window roll']))\nexcept :\n\tnuke.message('no node selected.')" +STARTLINE}
 addUserKnob {22 remove_link l "remove linked expression" t "Remove the linked camera expression but won't reset any data." -STARTLINE T "thisGRP = nuke.thisGroup()\nmainKnobs = \['world_matrix','cam_focal','cam_haperture','cam_win_translate','cam_win_scale','cam_winroll']\n\nfor knob in thisGRP.knobs() :\n\tif mainKnobs.count(knob) != 0 :\n\t\t thisGRP\[knob].clearAnimated()"}
 addUserKnob {20 cam_data_grp l "CAMERA DATA" n 1}
 cam_data_grp 0
 addUserKnob {7 cam_focal l "focal length" R 5 100}
 cam_focal {{Camera8.focal}}
 addUserKnob {7 cam_haperture l "horiz aperture" R 0.1 50}
 cam_haperture {{Camera8.haperture}}
 addUserKnob {30 cam_win_translate l "window translate"}
 cam_win_translate {{Camera8.win_translate} {Camera8.win_translate}}
 addUserKnob {30 cam_win_scale l "window scale"}
 cam_win_scale {{Camera8.win_scale} {Camera8.win_scale}}
 addUserKnob {7 cam_winroll l "window roll" R -45 45}
 cam_winroll {{Camera8.winroll}}
 addUserKnob {41 world_matrix l "world matrix" T cam_data.matrix}
 addUserKnob {20 endGroup_1 l endGroup n -1}
 addUserKnob {26 spacer_5 l "" +STARTLINE T <br>}
 addUserKnob {26 title_basic l "<b>BASIC SETTING</b>"}
 addUserKnob {4 display l "3D display" t "How to draw in 3D preview. The viewer can override this setting." M {off wireframe soild solid+wireframe textured textured+wireframe "" "" ""}}
 display textured
 addUserKnob {4 data_type l "data type" t "data type\nUsing one of these data to convert into 3D mesh.\n\nPosition\nSupported world space or camera space position data.\n\nDepth (normalized far=0)\nNormalized depth data, which is same as depth data output by ScanlineRender.\n\nDeep / Depth (direct)\nRaw camera depth data. If using deep, need to convert DeepToImage first, and selected deep channel on 'channels' knob." M {"position (world space)" "position (camera space)" "depth (normalized far=0)" "deep / depth (direct)" "" "" ""}}
 addUserKnob {41 channels t "Select which channel represented on selected data type." T shuffle_data.in}
 addUserKnob {6 unpm l unpremult t "3D data pass should be unpremult with alpha before process." -STARTLINE}
 unpm true
 addUserKnob {26 spacer_4 l "" +STARTLINE T <br>}
 addUserKnob {7 lod l "mesh LOD" t "Level of Details\n\nIf this value set to 1.0, subdivision of the mesh  1:1 to the data available in the resolution. Which mean 1 face of the mesh equal to 1 pixel.\n\nIf this value set to 1.0, it will slow down the render process.\n\nHighly recommend to use 0.1 - 0.5 if high resolution mesh details is not concern."}
 lod 0.5
 addUserKnob {41 filter_size l "filter size" T DisplaceGeo.filter_size}
 addUserKnob {41 filter T DisplaceGeo.filter}
 addUserKnob {26 spacer_2 l "" +STARTLINE T <br>}
 addUserKnob {26 title_drange l "" +STARTLINE T "distance range"}
 addUserKnob {7 drange_near l near t "clip the mesh in the min value in terms of depth." R 0 10000}
 addUserKnob {7 drange_far l far t "clip the mesh in the max value in terms of depth." R 0 10000}
 drange_far 30
 addUserKnob {6 clip_color l "distance clip on color" t "Apply the distance clip on colored texture." +STARTLINE}
 clip_color true
 addUserKnob {26 spacer_3 l "" +STARTLINE T <br>}
 addUserKnob {26 title_export l <b>EXPORT</b>}
 addUserKnob {41 file t "only support *.abc file extension (alembric) ." T WriteGeo.file}
 addUserKnob {22 export_geo l "Export Geo" T "def exportGeo() :\n\twgeo = nuke.toNode('WriteGeo')\n\twgeo\['Execute'].execute()\n\nthisGRP = nuke.thisGroup()\nfilepath = thisGRP\['file'].getValue()\n\nif not len(filepath) :\n\tnuke.message('file path is empty. Process denied.')\nelif not filepath.split('.')\[-1:]\[0].lower() == 'abc' :\n\tif nuke.ask('File extension invalue. Only support render <font color=orange>*.abc</font> . Do you want this tool to fix it and process ?') :\n\t\tthisGRP\['file'].setValue( thisGRP\['file'].getValue() + '.abc' )\n\t\texportGeo()\nelse :\n\texportGeo()" +STARTLINE}
 addUserKnob {22 import_geo l "Import Geo" -STARTLINE T "prefx = nuke.toNode('preferences')\['GridWidth'].value()\nthisGRP = nuke.thisGroup()\ngoStore = nuke.toNode('store')\ngoStore\['fn'].execute()\n\nroot = getLevel()\n\nwith root :\n\trgeo = nuke.nodes.ReadGeo2( file=thisGRP\['file'].getValue() )\n\trgeo.setXYpos( int( thisGRP\['xpos'].getValue() + prefx ) , int( thisGRP\['ypos'].getValue() ) )"}
 addUserKnob {20 tab_misc l Miscellaneous}
 addUserKnob {26 title_focus_region l "<b>FOCUS REGION</b>"}
 addUserKnob {41 use_focus_region l "use focus region" t "use focus region to generate SSMesh in specific area. Save resources and possible to work with high LOD mesh." T menu2.use_focus_region}
 addUserKnob {15 focus_region l "focus region" t "Set focus region in screen space. These values are 2D coordinate." +DISABLED}
 focus_region {0 0 1280 720}
 addUserKnob {26 spacer_1 l "" +STARTLINE T <br>}
 addUserKnob {3 fregion_ref_frame l "ref frame" t "set reference frame for tracking focus region. 'focus region' & 'define z' will apply on this reference frame and process the tracking." +DISABLED}
 fregion_ref_frame 1
 addUserKnob {22 fregion_set_frame l "set current frame" t "set current frame for focus region reference frame." -STARTLINE +DISABLED T "nuke.thisGroup()\['fregion_ref_frame'].setValue( nuke.frame() )"}
 addUserKnob {12 sample_point l "sample position" t "Toggle 'sample z' in 2D to enable this 2D sample coordinate." +DISABLED}
 addUserKnob {22 sample_z_toggle l "sample z in 2D" t "'sample z' is only works for sample value purpose. After sample is done, must turn off sample function." -STARTLINE +DISABLED T "thisGRP = nuke.thisGroup()\nszstatus = thisGRP\['sample_z_status'].value()\n\nstatus = \['<font color=red>\[ OFF ]</font>','<font color=cyan>\[ ON ]</font>']\n\nif szstatus == status\[0] :\n\tthisGRP\['sample_z_status'].setValue( status\[1] )\n\tthisGRP\['sample_point'].setEnabled(True)\n\tthisGRP\['updateUI'].setValue(\"goStore = nuke.toNode(\\'store\\')\\ngoStore\[\\'fn\\'].execute()\\nsample2d()\")\nelse :\n\tthisGRP\['sample_z_status'].setValue( status\[0] )\n\tthisGRP\['sample_point'].setEnabled(False)\n\tthisGRP\['updateUI'].setValue('')"}
 addUserKnob {26 sample_z_status l "" -STARTLINE +DISABLED T "<font color=red>\[ OFF ]</font>"}
 addUserKnob {7 fregion_define_z l "define z" t "Define the z value on reference frame. Can use 'sample z in 2D' to get this value." +DISABLED R 0 10000}
 addUserKnob {22 track_focus_region l "<b>\[ track focus region ]</b>" t "Use the set focus region on reference frame to track with camera in 3D space.\n\n* project setting need to be same as image resolution to get the correct result." +DISABLED T "rootST = int( nuke.root()\['first_frame'].getValue() )\nrootED = int( nuke.root()\['last_frame'].getValue() )\n\ngetFrame = nuke.getFramesAndViews( 'frame range', str( rootST ) + '-' + str( rootED ) )\n\ntry :\n\tframeST = int( getFrame\[0].replace( ' ' , '' ).split('-')\[0] )\n\tframeED = int( getFrame\[0].replace( ' ' , '' ).split('-')\[1] )\n\n\tthisGRP = nuke.thisGroup()\n\trefframe = int( thisGRP\['fregion_ref_frame'].getValue() )\n\tcam = nuke.toNode('cam_data')\n\tpt1 = nuke.toNode('left_pt')\['translate'].getValue()\n\tpt2 = nuke.toNode('right_pt')\['translate'].getValue()\n\n\tct_hack = nuke.nodes.CurveTool()\n\n\twith nuke.root() :\n\n\t\tif frameED - frameST != 0 :\n\t\t\tthisGRP\['focus_region'].clearAnimated()\n\t\t\ttempbuffer1 = thisGRP\['focus_region'].getValue()\n\t\t\tthisGRP\['focus_region'].setAnimated()\n\t\t\tthisGRP\['focus_region'].setValueAt( tempbuffer1\[0] , refframe , 0 )\n\t\t\tthisGRP\['focus_region'].setValueAt( tempbuffer1\[1] , refframe , 1 )\n\t\t\tthisGRP\['focus_region'].setValueAt( tempbuffer1\[2] , refframe , 2 )\n\t\t\tthisGRP\['focus_region'].setValueAt( tempbuffer1\[3] , refframe , 3 )\n\n\t\tfor trackframe in xrange( frameST, frameED+1 , 1 ) :\n\t\t\tnuke.execute( ct_hack, trackframe, trackframe )\n\t\t\tthisGRP\['focus_region'].setValueAt( nukescripts.snap3d.projectPoint( cam, pt1 )\[0] , trackframe , 0 )\n\t\t\tthisGRP\['focus_region'].setValueAt( nukescripts.snap3d.projectPoint( cam, pt1 )\[1] , trackframe , 1 )\n\t\t\tthisGRP\['focus_region'].setValueAt( nukescripts.snap3d.projectPoint( cam, pt2 )\[0] , trackframe , 2 )\n\t\t\tthisGRP\['focus_region'].setValueAt( nukescripts.snap3d.projectPoint( cam, pt2 )\[1] , trackframe , 3 )\n\n\tnuke.delete( ct_hack )\nexcept :\n    pass" +STARTLINE}
 addUserKnob {26 spacer_6 l "" +STARTLINE T <br>}
 addUserKnob {20 grp_crop_preview l "3D crop preview" +DISABLED n 1}
 grp_crop_preview 0
 addUserKnob {6 show_crop l "show crop point" t "It will show 2 spheres for the crop in 3D space. They set in the place which is where you set the focus region in screen space and defined by z." +DISABLED +STARTLINE}
 addUserKnob {7 crop_point_scale l scale t "Scale the preview crop points (spheres)." +DISABLED}
 crop_point_scale 0.3
 addUserKnob {18 crop_point_color l color t "change color of the crop points (spheres)." +DISABLED}
 crop_point_color 1
 addUserKnob {6 crop_point_color_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 crop_point_color_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 crop_point_color_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 crop_point_color_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 crop_point_color_panelDropped_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 crop_point_color_panelDropped_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 crop_point_color_panelDropped_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 crop_point_color_panelDropped_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 crop_point_color_panelDropped_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 crop_point_color_panelDropped_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 crop_point_color_panelDropped_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {20 endGroup n -1}
 addUserKnob {26 spacer l "" +STARTLINE T <br>}
 addUserKnob {26 title_uv l <b>UV</b>}
 addUserKnob {41 uv_stabilize l "uv stabilize" t "Turn this on if you need to stabilize in UV space. During UV stabilize on, the geo will not be animated. Set reference frame under 'mesh ref frame'." T menu1.uv_stabilize}
 addUserKnob {3 uv_ref_frame l "mesh ref frame" t "Select the frame number that will have identity geo shaped for UV texturing."}
 uv_ref_frame 64
 addUserKnob {22 uv_set_frame l "set current frame" -STARTLINE T "nuke.thisGroup()\['uv_ref_frame'].setValue( nuke.frame() )"}
 addUserKnob {6 black_outside l "black outside" t "black outside the UV texture." +STARTLINE}
 black_outside true
 addUserKnob {20 t_VERSION l Version}
 addUserKnob {26 l_VERSION l Version T 1.3}
 addUserKnob {26 l_DATE l "Date Modified" T 2019-11-08}
 addUserKnob {26 l_CHANGELOG l Changelog T "1.3\n- camera window supported\n- anamophic project supported\n- fix the conflict of 'force region' and 'UV stabilize'.\n  can use both at the same time now.\n\n1.2\n- removed unuse camera link knobs\n- added focus region, so mesh can be\n  form in specific area/object to save\n  resources for higher LOD\n\n1.1\n- fix the missing line on 'Export Geo' \n  button\n\n1.0\n- create mesh/geo in screen space\n  using position/depth/deep data"}
 addUserKnob {26 l_DEV l "Developed by" T "<a href=\"https://facebook.com/MJTLab\"><font color=orange>Mark Joey Tang</font></a>"}
}
 BackdropNode {
  inputs 0
  name BackdropNode1
  tile_color 0xff
  label "don't touch"
  note_font_size 32
  xpos -1142
  ypos -169
  bdwidth 202
  bdheight 478
 }
 BackdropNode {
  inputs 0
  name BackdropNode2
  tile_color 0x4c4c4cff
  label bin
  note_font_size 32
  xpos -899
  ypos -170
  bdwidth 200
  bdheight 280
 }
 Input {
  inputs 0
  name img
  xpos -100
  ypos -184
 }
 Dot {
  name img_dot
  xpos -66
  ypos -83
 }
set N3eb06b40 [stack 0]
 Dot {
  name Dot3
  xpos 758
  ypos -83
 }
set N3eb08ec0 [stack 0]
 Shuffle {
  in pworld
  in2 alpha
  alpha red2
  name shuffle_data
  label "\[value in]"
  xpos 724
  ypos -32
 }
 Unpremult {
  name Unpremult_data
  xpos 724
  ypos 62
  disable {{!parent.unpm}}
 }
 Dot {
  name Dot5
  xpos 758
  ypos 700
 }
set N5a4ecc00 [stack 0]
 Dot {
  name Dot6
  xpos 928
  ypos 700
 }
set N4a76bb30 [stack 0]
 Dot {
  name Dot7
  xpos 1106
  ypos 700
 }
set N3ea89990 [stack 0]
 Dot {
  name Dot8
  xpos 1260
  ypos 700
 }
 Expression {
  temp_name0 dvalue
  temp_expr0 red
  temp_name1 xpos
  temp_expr1 "( ( x + 0.5 ) / input.width - 0.5 ) * \[value global_math.hratio] * abs( dvalue )"
  temp_name2 ypos
  temp_expr2 "( ( y + 0.5 ) / input.height - 0.5 ) * ( \[value global_math.hratio] * abs( dvalue ) * ( img_dot.height / img_dot.width ) ) * 1 / \[value format.pixel_aspect]"
  temp_name3 zpos
  temp_expr3 "- dvalue"
  expr0 "( xpos * \[value fb_data.world_matrix.0] + ypos * \[value fb_data.world_matrix.1] ) * \[value fb_data.win_scale.u] + ( \[value global_math.hratio] * abs(zpos) * \[value fb_data.win_translate.u] / 2 )"
  expr1 "( xpos * \[value fb_data.world_matrix.4] + ypos * \[value fb_data.world_matrix.5] ) * \[value fb_data.win_scale.v] + ( \[value global_math.hratio] * abs(zpos) * \[value fb_data.win_translate.v] / 2 )"
  expr2 zpos
  name Expression9
  xpos 1226
  ypos 774
 }
 Dot {
  name Dot16
  xpos 1260
  ypos 889
 }
push $N3ea89990
 Expression {
  temp_name0 dvalue
  temp_expr0 "1 / red"
  temp_name1 xpos
  temp_expr1 "( ( x + 0.5 ) / input.width - 0.5 ) * \[value global_math.hratio] * abs( dvalue )"
  temp_name2 ypos
  temp_expr2 "( ( y + 0.5 ) / input.height - 0.5 ) * ( \[value global_math.hratio] * abs( dvalue ) * ( img_dot.height / img_dot.width ) ) * 1 / \[value format.pixel_aspect]"
  temp_name3 zpos
  temp_expr3 "- dvalue"
  expr0 "( xpos * \[value fb_data.world_matrix.0] + ypos * \[value fb_data.world_matrix.1] ) * \[value fb_data.win_scale.u] + ( \[value global_math.hratio] * abs(zpos) * \[value fb_data.win_translate.u] / 2 )"
  expr1 "( xpos * \[value fb_data.world_matrix.4] + ypos * \[value fb_data.world_matrix.5] ) * \[value fb_data.win_scale.v] + ( \[value global_math.hratio] * abs(zpos) * \[value fb_data.win_translate.v] / 2 )"
  expr2 zpos
  name Expression6
  xpos 1072
  ypos 774
 }
 Dot {
  name Dot17
  xpos 1106
  ypos 863
 }
push $N4a76bb30
 Expression {
  expr2 -blue
  name Expression7
  label "fix z"
  xpos 894
  ypos 774
 }
 Dot {
  name Dot18
  xpos 928
  ypos 876
 }
push $N5a4ecc00
 Expression {
  temp_name0 nx
  temp_expr0 "red - cam_data.world_matrix.3"
  temp_name1 ny
  temp_expr1 "green - cam_data.world_matrix.7"
  temp_name2 nz
  temp_expr2 "blue - cam_data.world_matrix.11"
  expr0 "nx * \[value inverseMatrix.invMatrix.0] + ny * \[value inverseMatrix.invMatrix.1] + nz * \[value inverseMatrix.invMatrix.2]"
  expr1 "nx * \[value inverseMatrix.invMatrix.3] + ny * \[value inverseMatrix.invMatrix.4] + nz * \[value inverseMatrix.invMatrix.5]"
  expr2 "nx * \[value inverseMatrix.invMatrix.6] + ny * \[value inverseMatrix.invMatrix.7] + nz * \[value inverseMatrix.invMatrix.8]"
  name Expression3
  label "position invert"
  xpos 724
  ypos 774
 }
 Switch {
  inputs 4
  which {{parent.data_type}}
  name Switch1
  xpos 724
  ypos 984
 }
 Dot {
  name Dot13
  xpos 758
  ypos 1113
 }
set N3ea40e20 [stack 0]
 Dot {
  name sam_dot
  xpos 551
  ypos 1113
 }
 NoOp {
  inputs 0
  name menu1
  knobChanged "\nthisGRP = nuke.thisGroup()\nif thisGRP\['uv_stabilize'].getValue() == 1 :\n    thisGRP\['uv_ref_frame'].setEnabled(True)\n    thisGRP\['uv_set_frame'].setEnabled(True)\n    thisGRP\['black_outside'].setEnabled(True)\nelse :\n    thisGRP\['uv_ref_frame'].setEnabled(False)\n    thisGRP\['uv_set_frame'].setEnabled(False)\n    thisGRP\['black_outside'].setEnabled(False)\n"
  xpos -1085
  ypos -42
  addUserKnob {20 User}
  addUserKnob {6 uv_stabilize l "uv stabilize" +STARTLINE}
  uv_stabilize true
 }
 NoOp {
  inputs 0
  name menu2
  onCreate "\nthisGRP = nuke.thisGroup()\nfregion_knobs = \['focus_region','fregion_define_z','sample_z_toggle','sample_z_status','sample_point','fregion_ref_frame','fregion_set_frame','track_focus_region','grp_crop_preview','show_crop','crop_point_scale','crop_point_color']\n\nthisGRP\[fregion_knobs\[4]].setEnabled(True)\n\nif thisGRP\['use_focus_region'].getValue()  == 0 :\n    for i in fregion_knobs :\n        thisGRP\[i].setEnabled(False)\n    thisGRP\[fregion_knobs\[3]].setValue( '<font color=red>\[ OFF ]</font>' )\n    thisGRP\['updateUI'].setValue('')\n    nuke.toNode('material_switch')\['disable'].setValue(0)\nelse :\n    for i in fregion_knobs :\n        if i != 'sample_point' :\n            thisGRP\[i].setEnabled(True)\n        else :\n            thisGRP\[i].setEnabled(False)\n    nuke.toNode('material_switch')\['disable'].setValue(1)\n"
  knobChanged "\nthisGRP = nuke.thisGroup()\nfregion_knobs = \['focus_region','fregion_define_z','sample_z_toggle','sample_z_status','sample_point','fregion_ref_frame','fregion_set_frame','track_focus_region','grp_crop_preview','show_crop','crop_point_scale','crop_point_color']\n\nif thisGRP\['use_focus_region'].getValue()  == 0 :\n    for i in fregion_knobs :\n        thisGRP\[i].setEnabled(False)\n    thisGRP\[fregion_knobs\[3]].setValue( '<font color=red>\[ OFF ]</font>' )\n    thisGRP\['updateUI'].setValue('')\n    nuke.toNode('material_switch')\['disable'].setValue(0)\nelse :\n    for i in fregion_knobs :\n        if i != 'sample_point' :\n            thisGRP\[i].setEnabled(True)\n    nuke.toNode('material_switch')\['disable'].setValue(1)\n"
  xpos -1085
  ypos 25
  addUserKnob {20 User}
  addUserKnob {6 use_focus_region l "use focus region" +STARTLINE}
 }
 Camera {
  inputs 0
  display off
  selectable false
  useMatrix true
  matrix {
      {{Camera8.world_matrix} {Camera8.world_matrix} {Camera8.world_matrix} {Camera8.world_matrix}}
      {{Camera8.world_matrix} {Camera8.world_matrix} {Camera8.world_matrix} {Camera8.world_matrix}}
      {{Camera8.world_matrix} {Camera8.world_matrix} {Camera8.world_matrix} {Camera8.world_matrix}}
      {{Camera8.world_matrix} {Camera8.world_matrix} {Camera8.world_matrix} {Camera8.world_matrix}}
    }
  focal {{parent.cam_focal}}
  haperture {{cam_haperture}}
  name cam_data
  xpos -335
  ypos 2204
 }
push $N3ea40e20
 Expression {
  temp_name0 unpremultA
  temp_expr0 "alpha * ( 1 / alpha )"
  temp_name1 max
  temp_expr1 blue
  expr3 "abs( max ) < \[value parent.drange_near] || abs( max ) > \[value parent.drange_far] ? 0 : isnan(unpremultA) ? 0 : unpremultA"
  name Expression1
  label "distance crop"
  xpos 724
  ypos 1244
 }
 Premult {
  name Premult1
  xpos 724
  ypos 1332
 }
 Dot {
  name Dot9
  xpos 758
  ypos 1640
 }
set N3ea9cf00 [stack 0]
push $N3eb06b40
 Dot {
  name Dot10
  xpos -66
  ypos 1552
 }
set N3ea9f3c0 [stack 0]
 Unpremult {
  name Unpremult1
  xpos 48
  ypos 1549
 }
 Merge2 {
  inputs 2
  operation mask
  name Merge2
  xpos 48
  ypos 1637
 }
 Premult {
  name Premult3
  xpos 48
  ypos 1719
 }
push $N3ea9f3c0
 Switch {
  inputs 2
  which {{parent.clip_color}}
  name Switch2
  xpos -100
  ypos 1828
 }
 Project3D2 {
  inputs 2
  crop {{parent.black_outside}}
  name Project3D2
  xpos -100
  ypos 2224
 }
push $N3eb08ec0
 Dot {
  name Dot2
  xpos 1576
  ypos -84
 }
 Shuffle {
  red black
  green black
  blue black
  alpha black
  name Shuffle1
  label "\[value in]"
  xpos 1542
  ypos 30
 }
 Remove {
  name Remove1
  xpos 1542
  ypos 118
 }
 Reformat {
  type scale
  black_outside true
  name Reformat1
  xpos 1542
  ypos 212
 }
 Expression {
  temp_name0 xpos
  temp_expr0 "( ( x + 0.5 ) / input.width - 0.5) *  \[value global_math.hratio] * abs( \[value parent.drange_far] )"
  temp_name1 ypos
  temp_expr1 "( ( y + 0.5 ) / input.height -0.5 ) * ( \[value global_math.hratio] * abs( \[value parent.drange_far] ) * ( img_dot.height / img_dot.width ) ) * 1 / \[value format.pixel_aspect]"
  temp_name2 zpos
  temp_expr2 "-\[value parent.drange_far]"
  expr0 "( xpos * \[value fb_data.world_matrix.0] + ypos * \[value fb_data.world_matrix.1] ) * \[value fb_data.win_scale.u] + ( \[value global_math.hratio] * abs(zpos) * \[value fb_data.win_translate.u] / 2 )"
  expr1 "( xpos * \[value fb_data.world_matrix.4] + ypos * \[value fb_data.world_matrix.5] ) * \[value fb_data.win_scale.v] + ( \[value global_math.hratio] * abs(zpos) * \[value fb_data.win_translate.v] / 2 )"
  expr2 zpos
  name Expression8
  xpos 1542
  ypos 845
 }
 ColorMatrix {
  matrix {
      {{cam_data.world_matrix.0} {cam_data.world_matrix.1} {cam_data.world_matrix.2}}
      {{cam_data.world_matrix.4} {cam_data.world_matrix.5} {cam_data.world_matrix.6}}
      {{cam_data.world_matrix.8} {cam_data.world_matrix.9} {cam_data.world_matrix.10}}
    }
  name ColorMatrix1
  xpos 1542
  ypos 970
 }
 Add {
  channels rgb
  value {{cam_data.world_matrix.3} {cam_data.world_matrix.7} {cam_data.world_matrix.11} 0}
  name Add1
  xpos 1542
  ypos 1052
 }
 Crop {
  box {{store.fregion} {store.fregion} {store.fregion} {store.fregion}}
  reformat true
  crop false
  name Crop1
  xpos 1542
  ypos 1476
  disable {{!parent.use_focus_region}}
 }
 Dot {
  name Dot4
  xpos 1576
  ypos 2402
 }
push $N3ea9cf00
 Crop {
  box {{store.fregion} {store.fregion} {store.fregion} {store.fregion}}
  reformat true
  crop false
  name Crop4
  selected true
  xpos 724
  ypos 1714
  disable {{!parent.use_focus_region}}
 }
 Unpremult {
  name Unpremult3
  xpos 724
  ypos 1851
 }
 Expression {
  temp_name0 nx
  temp_expr0 red
  temp_name1 ny
  temp_expr1 green
  temp_name2 nz
  temp_expr2 blue
  expr0 "( nx * \[value cam_data.world_matrix.0] + ny * \[value cam_data.world_matrix.1] + nz * \[value cam_data.world_matrix.2] ) + \[value cam_data.world_matrix.3]"
  expr1 "( nx * \[value cam_data.world_matrix.4] + ny * \[value cam_data.world_matrix.5] + nz * \[value cam_data.world_matrix.6] ) + \[value cam_data.world_matrix.7]"
  expr2 "( nx * \[value cam_data.world_matrix.8] + ny * \[value cam_data.world_matrix.9] + nz * \[value cam_data.world_matrix.10] ) + \[value cam_data.world_matrix.11]"
  name Expression4
  label "position revert"
  xpos 724
  ypos 1933
 }
 Premult {
  name Premult2
  xpos 724
  ypos 2027
 }
 Merge2 {
  inputs 2
  operation under
  name Merge1
  xpos 724
  ypos 2398
 }
 Card {
  inputs 0
  image_aspect false
  rows {{"img_dot.height * parent.lod"}}
  columns {{"img_dot.width * parent.lod"}}
  name ssmesh
  xpos 343
  ypos 2317
 }
 DisplaceGeo {
  inputs 2
  source "rgb absolute"
  scale 1
  filter_size 1
  name DisplaceGeo
  xpos 343
  ypos 2399
 }
 FrameHold {
  first_frame {{parent.uv_ref_frame}}
  name FrameHold
  xpos 343
  ypos 2479
  disable {{!parent.uv_stabilize}}
 }
 ApplyMaterial {
  inputs 2
  name ApplyMaterial1
  xpos -100
  ypos 2483
 }
 Scene {
  display {{parent.display}}
  name gl_scene
  xpos -90
  ypos 3072
 }
set N3eb93730 [stack 0]
 WriteGeo {
  file_type abc
  name WriteGeo
  xpos 120
  ypos 3093
 }
 Axis {
  inputs 0
  display off
  selectable false
  translate {{"( global_math.pt2.x * cam_data.world_matrix.0(parent.fregion_ref_frame) + global_math.pt2.y * cam_data.world_matrix.1(parent.fregion_ref_frame) + global_math.pt2.z * cam_data.world_matrix.2(parent.fregion_ref_frame) ) + cam_data.world_matrix.3(parent.fregion_ref_frame)"} {"( global_math.pt2.x * cam_data.world_matrix.4(parent.fregion_ref_frame) + global_math.pt2.y * cam_data.world_matrix.5(parent.fregion_ref_frame) + global_math.pt2.z * cam_data.world_matrix.6(parent.fregion_ref_frame) ) + cam_data.world_matrix.7(parent.fregion_ref_frame)"} {"( global_math.pt2.x * cam_data.world_matrix.8(parent.fregion_ref_frame) + global_math.pt2.y * cam_data.world_matrix.9(parent.fregion_ref_frame) + global_math.pt2.z * cam_data.world_matrix.10(parent.fregion_ref_frame) ) + cam_data.world_matrix.11(parent.fregion_ref_frame)"}}
  name right_pt
  xpos -600
  ypos 3218
 }
 CheckerBoard2 {
  inputs 0
  format "256 256 0 0 256 256 1 square_256"
  name CheckerBoard1
  xpos -789
  ypos 2694
 }
 Multiply {
  channels rgb
  value {{parent.crop_point_color.r} {parent.crop_point_color.g} {parent.crop_point_color.b} 1}
  name Multiply
  xpos -789
  ypos 2822
 }
 Clamp {
  channels rgba
  name Clamp1
  xpos -789
  ypos 2905
 }
 Sphere {
  selectable false
  cast_shadow false
  receive_shadow false
  rows 10
  columns 10
  uniform_scale {{parent.crop_point_scale}}
  name Sphere1
  xpos -789
  ypos 2987
  disable {{!show_crop}}
 }
 Dot {
  name Dot24
  xpos -755
  ypos 3065
 }
set N3a702900 [stack 0]
 Dot {
  name Dot25
  xpos -456
  ypos 3065
 }
 TransformGeo {
  inputs 2
  selectable false
  name TransformGeo2
  xpos -490
  ypos 3238
 }
 Axis {
  inputs 0
  display off
  selectable false
  translate {{"( global_math.pt1.x * cam_data.world_matrix.0(parent.fregion_ref_frame) + global_math.pt1.y * cam_data.world_matrix.1(parent.fregion_ref_frame) + global_math.pt1.z * cam_data.world_matrix.2(parent.fregion_ref_frame) ) + cam_data.world_matrix.3(parent.fregion_ref_frame)"} {"( global_math.pt1.x * cam_data.world_matrix.4(parent.fregion_ref_frame) + global_math.pt1.y * cam_data.world_matrix.5(parent.fregion_ref_frame) + global_math.pt1.z * cam_data.world_matrix.6(parent.fregion_ref_frame) ) + cam_data.world_matrix.7(parent.fregion_ref_frame)"} {"( global_math.pt1.x * cam_data.world_matrix.8(parent.fregion_ref_frame) + global_math.pt1.y * cam_data.world_matrix.9(parent.fregion_ref_frame) + global_math.pt1.z * cam_data.world_matrix.10(parent.fregion_ref_frame) ) + cam_data.world_matrix.11(parent.fregion_ref_frame)"}}
  name left_pt
  xpos -899
  ypos 3220
 }
push $N3a702900
 TransformGeo {
  inputs 2
  selectable false
  name TransformGeo1
  xpos -789
  ypos 3240
 }
 Scene {
  inputs 2
  selectable false
  name Scene1
  xpos -480
  ypos 3395
 }
 ApplyMaterial {
  display off
  selectable false
  render_mode off
  name material_switch
  xpos -490
  ypos 3523
 }
push $N3eb93730
 Scene {
  inputs 2
  name Scene2
  xpos -90
  ypos 3502
 }
 Output {
  name Output1
  xpos -100
  ypos 4030
 }
 Group {
  inputs 0
  name inverseMatrix
  tile_color 0x337f4cff
  xpos 576
  ypos 780
  addUserKnob {20 tab_general l General}
  addUserKnob {1 knob_path}
  knob_path cam_data.world_matrix
  addUserKnob {26 ""}
  addUserKnob {41 id T id_assign.matrix}
  addUserKnob {26 ""}
  addUserKnob {7 determinant}
  determinant {{"\[value \[value knob_path].\[value id.0]] * ((\[value \[value knob_path].\[value id.4]]*\[value \[value knob_path].\[value id.8]]) - (\[value \[value knob_path].\[value id.5]]*\[value \[value knob_path].\[value id.7]])) - \[value \[value knob_path].\[value id.1]] * ((\[value \[value knob_path].\[value id.3]]*\[value \[value knob_path].\[value id.8]]) - (\[value \[value knob_path].\[value id.5]]*\[value \[value knob_path].\[value id.6]])) + \[value \[value knob_path].\[value id.2]] * ((\[value \[value knob_path].\[value id.3]]*\[value \[value knob_path].\[value id.7]])-(\[value \[value knob_path].\[value id.4]]*\[value \[value knob_path].\[value id.6]]))"}}
  addUserKnob {26 ""}
  addUserKnob {41 cofactor T mtx_cofactor.matrix}
  addUserKnob {26 ""}
  addUserKnob {41 invMatrix T matrix_output.matrix}
  addUserKnob {20 t_VERSION l Version}
  addUserKnob {26 l_VERSION l Version T 1.0}
  addUserKnob {26 l_DATE l "Date Modified" T 2011-11-28}
  addUserKnob {26 l_CHANGELOG l Changelog T "v1.0\n- reveal the calculate output of \n  inverse matrix which is c44matrix\n  and colormatrix doesn't show\n  "}
  addUserKnob {26 l_DEV l "Developed by" T "Mark Joey Tang"}
 }
  Matrix {
   inputs 0
   matrix {
       {0 1 2}
       {4 5 6}
       {8 9 10}
     }
   name id_assign
   xpos -12
   ypos 33
  }
  Matrix {
   inputs 0
   matrix {
       {{"(\[value \[value knob_path].\[value id.4]]*\[value \[value knob_path].\[value id.8]]) - (\[value \[value knob_path].\[value id.5]]*\[value \[value knob_path].\[value id.7]])"} {"(\[value \[value knob_path].\[value id.7]]*\[value \[value knob_path].\[value id.2]]) - (\[value \[value knob_path].\[value id.8]]*\[value \[value knob_path].\[value id.1]])"} {"(\[value \[value knob_path].\[value id.1]]*\[value \[value knob_path].\[value id.5]]) - (\[value \[value knob_path].\[value id.2]]*\[value \[value knob_path].\[value id.4]])"}}
       {{"(\[value \[value knob_path].\[value id.5]]*\[value \[value knob_path].\[value id.6]]) - (\[value \[value knob_path].\[value id.3]]*\[value \[value knob_path].\[value id.8]])"} {"(\[value \[value knob_path].\[value id.8]]*\[value \[value knob_path].\[value id.0]]) - (\[value \[value knob_path].\[value id.6]]*\[value \[value knob_path].\[value id.2]])"} {"(\[value \[value knob_path].\[value id.2]]*\[value \[value knob_path].\[value id.3]]) - (\[value \[value knob_path].\[value id.0]]*\[value \[value knob_path].\[value id.5]])"}}
       {{"(\[value \[value knob_path].\[value id.3]]*\[value \[value knob_path].\[value id.7]]) - (\[value \[value knob_path].\[value id.4]]*\[value \[value knob_path].\[value id.6]])"} {"(\[value \[value knob_path].\[value id.6]]*\[value \[value knob_path].\[value id.1]]) - (\[value \[value knob_path].\[value id.7]]*\[value \[value knob_path].\[value id.0]])"} {"(\[value \[value knob_path].\[value id.0]]*\[value \[value knob_path].\[value id.4]]) - (\[value \[value knob_path].\[value id.1]]*\[value \[value knob_path].\[value id.3]])"}}
     }
   name mtx_cofactor
   xpos 86
   ypos 32
  }
  Matrix {
   inputs 0
   matrix {
       {{"cofactor.0 == 0 || determinant == 0 ? 0 : cofactor.0/determinant"} {"cofactor.1 == 0 || determinant == 0 ? 0 : cofactor.1/determinant"} {"cofactor.2 == 0 || determinant == 0 ? 0 : cofactor.2/determinant"}}
       {{"cofactor.3 == 0 || determinant == 0 ? 0 : cofactor.3/determinant"} {"cofactor.4 == 0 || determinant == 0 ? 0 : cofactor.4/determinant"} {"cofactor.5 == 0 || determinant == 0 ? 0 : cofactor.5/determinant"}}
       {{"cofactor.6 == 0 || determinant == 0 ? 0 : cofactor.6/determinant"} {"cofactor.7 == 0 || determinant == 0 ? 0 : cofactor.7/determinant"} {"cofactor.8 == 0 || determinant == 0 ? 0 : cofactor.8/determinant"}}
     }
   name matrix_output
   xpos 186
   ypos 33
  }
 end_group
 Camera {
  inputs 0
  rotate {0 0 {-parent.cam_winroll}}
  win_translate {{parent.cam_win_translate} {parent.cam_win_translate}}
  win_scale {{parent.cam_win_scale} {parent.cam_win_scale}}
  name fb_data
  xpos -340
  ypos 2087
 }
 NoOp {
  inputs 0
  name store
  xpos -843
  ypos 28
  addUserKnob {20 User}
  addUserKnob {22 fn T "### level define ###\n\ndef getLevel() :\n\tif len(nuke.thisNode().fullName().split('.')) == 1 :\n\t\tggLevel = nuke.root()\n\telse :\n\t\tnodePath = nuke.thisNode().fullName().split('.')\n\t\tnodePath.pop()\n\t\tggLevel = nuke.toNode('.'.join(nodePath))\n\treturn ggLevel\n\n### sample z in 2D ###\n\ndef sample2d() :\n\tthisGRP = nuke.thisGroup()\n\tif thisGRP\['sample_z_status'].value() == '<font color=cyan>\[ ON ]</font>' :\n\t\tsam_co = thisGRP\['sample_point'].getValue()\n\t\tzdata = nuke.toNode('sam_dot').sample('blue', sam_co\[0], sam_co\[1]) * -1\n\t\tthisGRP\['fregion_define_z'].setValue( zdata )" +STARTLINE}
  addUserKnob {15 fregion}
  fregion {{parent.focus_region} {parent.focus_region} {parent.focus_region} {parent.focus_region}}
 }
 NoOp {
  inputs 0
  name global_math
  xpos -842
  ypos -43
  addUserKnob {20 User}
  addUserKnob {7 hratio}
  hratio {{"cam_data.haperture / cam_data.focal"}}
  addUserKnob {7 maxwidth}
  maxwidth {{"hratio * parent.fregion_define_z"}}
  addUserKnob {7 maxheight}
  maxheight {{"hratio * parent.fregion_define_z * ( img_dot.height / img_dot.width )"}}
  addUserKnob {13 pt1}
  pt1 {{"( ( ( maxwidth * ( parent.focus_region.x(parent.fregion_ref_frame) / img_dot.width) ) - ( maxwidth / 2 ) ) * fb_data.world_matrix.0 + ( ( ( maxheight * ( parent.focus_region.y(parent.fregion_ref_frame) / img_dot.height ) ) - ( maxheight / 2 ) ) * 1 / \[value root.format.pixel_aspect] ) * fb_data.world_matrix.1 ) * fb_data.win_scale.u + ( hratio * abs(parent.fregion_define_z) * fb_data.win_translate.u /2 )"} {"( ( ( maxwidth * ( parent.focus_region.x(parent.fregion_ref_frame) / img_dot.width) ) - ( maxwidth / 2 ) ) * fb_data.world_matrix.4 + \n( ( ( maxheight * ( parent.focus_region.y(parent.fregion_ref_frame) / img_dot.height ) ) - ( maxheight / 2 ) ) * 1 / \[value root.format.pixel_aspect] ) * fb_data.world_matrix.5 ) * fb_data.win_scale.v + ( hratio * abs(parent.fregion_define_z) * fb_data.win_translate.v /2 )"} {-parent.fregion_define_z}}
  addUserKnob {13 pt2}
  pt2 {{"( ( ( maxwidth * ( parent.focus_region.r(parent.fregion_ref_frame) / img_dot.width) ) - ( maxwidth / 2 ) ) * fb_data.world_matrix.0 + ( ( ( maxheight * ( parent.focus_region.t(parent.fregion_ref_frame) / img_dot.height ) ) - ( maxheight / 2 ) ) * 1 / \[value root.format.pixel_aspect] ) * fb_data.world_matrix.1 ) * fb_data.win_scale.u + ( hratio * abs(parent.fregion_define_z) * fb_data.win_translate.u /2 )"} {"( ( ( maxwidth * ( parent.focus_region.r(parent.fregion_ref_frame) / img_dot.width) ) - ( maxwidth / 2 ) ) * fb_data.world_matrix.4 + ( ( ( maxheight * ( parent.focus_region.t(parent.fregion_ref_frame) / img_dot.height ) ) - ( maxheight / 2 ) ) * 1 / \[value root.format.pixel_aspect] ) * fb_data.world_matrix.5 ) * fb_data.win_scale.v + ( hratio * abs(parent.fregion_define_z) * fb_data.win_translate.v /2 )"} {-parent.fregion_define_z}}
 }
end_group
Dot {
 name Dot20
 xpos 343
 ypos 2212
}
set N82dad460 [stack 0]
push 0
ScanlineRender {
 inputs 2
 conservative_shader_sampling false
 projection_mode uv
 motion_vectors_type off
 MB_channel none
 name ScanlineRender3
 xpos 453
 ypos 2209
}
FrameHold {
 first_frame 64
 name FrameHold2
 xpos 452
 ypos 2278
}
Merge2 {
 inputs 2
 name Merge1
 xpos 452
 ypos 2555
}
ShuffleCopy {
 inputs 2
 in alpha
 red red
 out mask
 name ShuffleCopy3
 xpos 452
 ypos 2635
}
push $N82dad460
FrameHold {
 first_frame 64
 name FrameHold4
 xpos 309
 ypos 2271
}
Dot {
 name Dot19
 xpos 342
 ypos 2721
}
ApplyMaterial {
 inputs 2
 name ApplyMaterial2
 xpos 452
 ypos 2718
}
Reformat {
 inputs 0
 type "to box"
 box_width 1280
 box_height 720
 box_fixed true
 name Reformat2
 xpos 580
 ypos 2786
}
ScanlineRender {
 inputs 3
 conservative_shader_sampling false
 motion_vectors_type off
 MB_channel none
 name ScanlineRender4
 xpos 452
 ypos 2786
}
Premult {
 channels rgba
 alpha mask.a
 name Premult2
 xpos 452
 ypos 2866
}
Dot {
 name Dot13
 xpos 486
 ypos 2954
}
push $N82d2c920
Merge2 {
 inputs 2
 name Merge2
 xpos 903
 ypos 2951
}
Dot {
 name Dot16
 xpos 937
 ypos 3143
}
StickyNote {
 inputs 0
 name StickyNote1
 label "<b>view here to :\nanimated the crop in SSMesh's focus region\nor\nset crop & sample z in SSMesh's focus region</b>"
 note_font_size 24
 xpos -690
 ypos 3796
}
StickyNote {
 inputs 0
 name StickyNote2
 label "<b>check 3D crop preview in 2D or 3D here after SSMesh"
 note_font_size 24
 xpos -705
 ypos 4294
}
Camera2 {
 inputs 0
 translate {{curve x1 33 x100 62.93263245} {curve x1 26.39999962 x100 34.79999924} {curve x1 34.59999847 x100 11.96562004}}
 rotate {{curve x1 0 x100 -15.51148426} {curve x1 0 x100 46.58225214} {curve x1 0 x100 0.5831401536}}
 focal 30
 name Camera10
 xpos -1029
 ypos 4184
}
Dot {
 name Dot22
 xpos -901
 ypos 4208
}
set N82f0ce40 [stack 0]
Dot {
 name Dot23
 xpos -901
 ypos 4309
}
push $N82f0ce40
Group {
 inputs 0
 name Group1
 xpos -831
 ypos 3829
 postage_stamp true
}
 Camera2 {
  inputs 0
  translate {{curve x1 33 x100 62.93263245} {curve x1 26.39999962 x100 34.79999924} {curve x1 34.59999847 x100 11.96562004}}
  rotate {{curve x1 0 x100 -15.51148426} {curve x1 0 x100 46.58225214} {curve x1 0 x100 0.5831401536}}
  focal 30
  name Camera1
  xpos 425
  ypos -536
 }
 Axis2 {
  inputs 0
  translate {37.5 26.25 0}
  name Axis1
  xpos 430
  ypos -734
 }
 Axis {
  inputs 0
  display off
  selectable false
  translate {2.679637267 -1.884568013 5.423575904}
  pivot {-2.679637267 1.884568013 -5.423575904}
  name GG_Axis984_0009
  xpos 2805
  ypos -1508
 }
 CheckerBoard2 {
  inputs 0
  format "512 512 0 0 512 512 1 square_512"
  name CheckerBoard1
  xpos 600
  ypos -1983
 }
 Shuffle {
  green black
  blue black
  name Shuffle1
  xpos 600
  ypos -1820
 }
 HueShift {
  hue_rotation {{frame*10}}
  name HueShift1
  xpos 600
  ypos -1740
 }
 Dot {
  name dot_spacer01_984
  xpos 634
  ypos -1554
 }
set N82f3f8c0 [stack 0]
 FrameHold {
  first_frame 1024
  name GG_Framehold984_0009
  xpos 1590
  ypos -1480
 }
 Clamp {
  name GG_Clamp984_0009
  xpos 1590
  ypos -1392
 }
 Sphere {
  name GG_Sphere984_0009
  xpos 1590
  ypos -1304
 }
 TransformGeo {
  inputs 2
  name GG_TransformGeo984_0009
  xpos 1590
  ypos -1093
 }
 Axis {
  inputs 0
  display off
  selectable false
  translate {-8.874522276 3.548102203 1.948912169}
  pivot {8.874522276 -3.548102203 -1.948912169}
  name GG_Axis984_0008
  xpos 2705
  ypos -1508
 }
push $N82f3f8c0
 FrameHold {
  first_frame 1070
  name GG_Framehold984_0008
  xpos 1480
  ypos -1480
 }
 Clamp {
  name GG_Clamp984_0008
  xpos 1480
  ypos -1392
 }
 Sphere {
  name GG_Sphere984_0008
  xpos 1480
  ypos -1304
 }
 TransformGeo {
  inputs 2
  name GG_TransformGeo984_0008
  xpos 1480
  ypos -1093
 }
 Axis {
  inputs 0
  display off
  selectable false
  translate {6.313467354 -2.632137413 -1.309742931}
  pivot {-6.313467354 2.632137413 1.309742931}
  name GG_Axis984_0007
  xpos 2605
  ypos -1508
 }
push $N82f3f8c0
 FrameHold {
  first_frame 1019
  name GG_Framehold984_0007
  xpos 1370
  ypos -1480
 }
 Clamp {
  name GG_Clamp984_0007
  xpos 1370
  ypos -1392
 }
 Sphere {
  name GG_Sphere984_0007
  xpos 1370
  ypos -1304
 }
 TransformGeo {
  inputs 2
  name GG_TransformGeo984_0007
  xpos 1370
  ypos -1093
 }
 Axis {
  inputs 0
  display off
  selectable false
  translate {-13.12676241 -0.4082311155 -1.952071942}
  pivot {13.12676241 0.4082311155 1.952071942}
  name GG_Axis984_0006
  xpos 2505
  ypos -1508
 }
push $N82f3f8c0
 FrameHold {
  first_frame 1046
  name GG_Framehold984_0006
  xpos 1260
  ypos -1480
 }
 Clamp {
  name GG_Clamp984_0006
  xpos 1260
  ypos -1392
 }
 Sphere {
  name GG_Sphere984_0006
  xpos 1260
  ypos -1304
 }
 TransformGeo {
  inputs 2
  name GG_TransformGeo984_0006
  xpos 1260
  ypos -1093
 }
 Axis {
  inputs 0
  display off
  selectable false
  translate {-6.206141649 -1.363666429 2.6093192}
  pivot {6.206141649 1.363666429 -2.6093192}
  name GG_Axis984_0005
  xpos 2405
  ypos -1508
 }
push $N82f3f8c0
 FrameHold {
  first_frame 1010
  name GG_Framehold984_0005
  xpos 1150
  ypos -1480
 }
 Clamp {
  name GG_Clamp984_0005
  xpos 1150
  ypos -1392
 }
 Sphere {
  name GG_Sphere984_0005
  xpos 1150
  ypos -1304
 }
 TransformGeo {
  inputs 2
  name GG_TransformGeo984_0005
  xpos 1150
  ypos -1093
 }
 Axis {
  inputs 0
  display off
  selectable false
  translate {3.576542504 2.684284256 2.047008002}
  pivot {-3.576542504 -2.684284256 -2.047008002}
  name GG_Axis984_0004
  xpos 2305
  ypos -1508
 }
push $N82f3f8c0
 FrameHold {
  first_frame 1056
  name GG_Framehold984_0004
  xpos 1040
  ypos -1480
 }
 Clamp {
  name GG_Clamp984_0004
  xpos 1040
  ypos -1392
 }
 Sphere {
  name GG_Sphere984_0004
  xpos 1040
  ypos -1304
 }
 TransformGeo {
  inputs 2
  name GG_TransformGeo984_0004
  xpos 1040
  ypos -1093
 }
 Axis {
  inputs 0
  display off
  selectable false
  translate {6.259842546 1.604622218 -1.604947836}
  pivot {-6.259842546 -1.604622218 1.604947836}
  name GG_Axis984_0003
  xpos 2205
  ypos -1508
 }
push $N82f3f8c0
 FrameHold {
  first_frame 1086
  name GG_Framehold984_0003
  xpos 930
  ypos -1480
 }
 Clamp {
  name GG_Clamp984_0003
  xpos 930
  ypos -1392
 }
 Sphere {
  name GG_Sphere984_0003
  xpos 930
  ypos -1304
 }
 TransformGeo {
  inputs 2
  name GG_TransformGeo984_0003
  xpos 930
  ypos -1093
 }
 Axis {
  inputs 0
  display off
  selectable false
  translate {-1.711193772 1.393878945 0.5224952546}
  pivot {1.711193772 -1.393878945 -0.5224952546}
  name GG_Axis984_0002
  xpos 2105
  ypos -1508
 }
push $N82f3f8c0
 FrameHold {
  first_frame 1074
  name GG_Framehold984_0002
  xpos 820
  ypos -1480
 }
 Clamp {
  name GG_Clamp984_0002
  xpos 820
  ypos -1392
 }
 Sphere {
  name GG_Sphere984_0002
  xpos 820
  ypos -1304
 }
 TransformGeo {
  inputs 2
  name GG_TransformGeo984_0002
  xpos 820
  ypos -1093
 }
 Axis {
  inputs 0
  display off
  translate {-0.5500000119 -2.650000095 0.1599481702}
  pivot {-0.6229833555 0.8497041464 -0.1599481756}
  name GG_Axis984_0001
  xpos 1998
  ypos -1514
 }
push $N82f3f8c0
 FrameHold {
  first_frame 1051
  name GG_Framehold984_0001
  xpos 710
  ypos -1480
 }
 Clamp {
  name GG_Clamp984_0001
  xpos 710
  ypos -1392
 }
 Sphere {
  name GG_Sphere984_0001
  xpos 710
  ypos -1304
 }
 TransformGeo {
  inputs 2
  name GG_TransformGeo984_0001
  xpos 710
  ypos -1093
 }
 Axis {
  inputs 0
  display off
  selectable false
  name GG_Axis984_0000
  xpos 1902
  ypos -1505
 }
push $N82f3f8c0
 FrameHold {
  first_frame 1019
  name GG_Framehold984_0000
  xpos 600
  ypos -1480
 }
 Clamp {
  name GG_Clamp984_0000
  xpos 600
  ypos -1392
 }
 Sphere {
  name GG_Sphere984_0000
  xpos 600
  ypos -1304
 }
 TransformGeo {
  inputs 2
  name GG_TransformGeo984_0000
  xpos 600
  ypos -1093
 }
 MergeGeo {
  inputs 10
  display textured
  name GG_MergeGeo_984
  xpos 600
  ypos -793
 }
 TransformGeo {
  inputs 2
  name TransformGeo1
  xpos 600
  ypos -713
 }
 Reformat {
  inputs 0
  type "to box"
  box_width 1280
  box_height 720
  box_fixed true
  name Reformat1
  xpos 747
  ypos -515
 }
 ScanlineRender {
  inputs 3
  conservative_shader_sampling false
  motion_vectors_type off
  MB_channel none
  output_shader_vectors true
  P_channel pworld
  name ScanlineRender1
  xpos 600
  ypos -515
 }
 Output {
  name Output1
  xpos 600
  ypos -415
 }
end_group
Group {
 name SSMesh7
 tile_color 0x5c9e83ff
 label "<font color=cyan>Geo Output</font>"
 xpos -831
 ypos 4024
 addUserKnob {20 tab_general l General}
 addUserKnob {22 set_link l "link to selected camera" t "Click to link selected camera by expression. This tool will get the focal, haperture and world matrix from selected camera to generate" T "def getLevel() :\n\t### level define ###\n\tif len(nuke.thisNode().fullName().split('.')) == 1 :\n\t\t  ggLevel = nuke.root()\n\telse :\n\t\t  nodePath = nuke.thisNode().fullName().split('.')\n\t\t  nodePath.pop()\n\t\t  ggLevel = nuke.toNode('.'.join(nodePath))\n\treturn ggLevel\n\nroot = getLevel()\nthisGRP = nuke.thisGroup()\n\nmainKnobs = \['world_matrix','cam_focal','cam_haperture','cam_win_translate','cam_win_scale','cam_winroll']\ndefaultKnobs = \{\n\t\t\t'world matrix' : 'world_matrix',\n\t\t\t'focal length' : 'focal',\n\t\t\t'horiz aperture' : 'haperture',\n\t\t\t'window translate' : 'win_translate',\n\t\t\t'window scale' : 'win_scale',\n\t\t\t'window roll' : 'winroll'\n\t\t\t\}\nselNodeKnobs = \[]\nmissingKnob = \[]\n\ntry :\n\twith root :\n\t\tselNode = nuke.selectedNode()\n\n\tfor knob in selNode.knobs() :\n\t\tselNodeKnobs.append( knob )\n\n\tselNodeKnobs.sort()\n\n\tfor key,value in defaultKnobs.items() :\n\t\tif value not in selNodeKnobs :\n\t\t\tmissingKnob.append( key )\n\n\tif not len(missingKnob) :\n\t\twith root :\n\t\t\tCAMnode = selNode.name()\n\t\t\tthisGRP\[mainKnobs\[0]].setExpression('\{0\}.world_matrix'.format(CAMnode))\n\t\t\tthisGRP\[mainKnobs\[1]].setExpression('\{0\}.focal'.format(CAMnode))\n\t\t\tthisGRP\[mainKnobs\[2]].setExpression('\{0\}.haperture'.format(CAMnode))\n\t\t\tthisGRP\[mainKnobs\[3]].setExpression('\{0\}.win_translate'.format(CAMnode))\n\t\t\tthisGRP\[mainKnobs\[4]].setExpression('\{0\}.win_scale'.format(CAMnode))\n\t\t\tthisGRP\[mainKnobs\[5]].setExpression('\{0\}.winroll'.format(CAMnode))\n\telse :\n\t\tp = nuke.Panel('Select knobs :')\n\t\tp.addBooleanCheckBox( '<b>Unable to find the default knobs. Please use the pulldown menu below to define the knob manually.</b>' , False)\n\t\tfor rk in missingKnob :\n\t\t\tp.addEnumerationPulldown( rk, ' '.join( selNodeKnobs ) )\n\n\t\tif p.show() :\n\t\t\ttry :\n\t\t\t\tfor key,value in defaultKnobs.items() :\n\t\t\t\t\tif p.value( key ) != None :\n\t\t\t\t\t\tdefaultKnobs\[key] = p.value( key )\n\t\t\texcept :\n\t\t\t\tpass\n\n\t\t\twith root :\n\t\t\t\tCAMnode = selNode.name()\n\t\t\t\tthisGRP\[mainKnobs\[0]].setExpression('\{0\}.\{1\}'.format(CAMnode, defaultKnobs\['world matrix']))\n\t\t\t\tthisGRP\[mainKnobs\[1]].setExpression('\{0\}.\{1\}'.format(CAMnode, defaultKnobs\['focal length']))\n\t\t\t\tthisGRP\[mainKnobs\[2]].setExpression('\{0\}.\{1\}'.format(CAMnode, defaultKnobs\['horiz aperture']))\n\t\t\t\tthisGRP\[mainKnobs\[3]].setExpression('\{0\}.\{1\}'.format(CAMnode, defaultKnobs\['window translate']))\n\t\t\t\tthisGRP\[mainKnobs\[4]].setExpression('\{0\}.\{1\}'.format(CAMnode, defaultKnobs\['window scale']))\n\t\t\t\tthisGRP\[mainKnobs\[5]].setExpression('\{0\}.\{1\}'.format(CAMnode, defaultKnobs\['window roll']))\nexcept :\n\tnuke.message('no node selected.')" +STARTLINE}
 addUserKnob {22 remove_link l "remove linked expression" t "Remove the linked camera expression but won't reset any data." -STARTLINE T "thisGRP = nuke.thisGroup()\nmainKnobs = \['world_matrix','cam_focal','cam_haperture','cam_win_translate','cam_win_scale','cam_winroll']\n\nfor knob in thisGRP.knobs() :\n\tif mainKnobs.count(knob) != 0 :\n\t\t thisGRP\[knob].clearAnimated()"}
 addUserKnob {20 cam_data_grp l "CAMERA DATA" n 1}
 cam_data_grp 0
 addUserKnob {7 cam_focal l "focal length" R 5 100}
 cam_focal {{Camera10.focal}}
 addUserKnob {7 cam_haperture l "horiz aperture" R 0.1 50}
 cam_haperture {{Camera10.haperture}}
 addUserKnob {30 cam_win_translate l "window translate"}
 cam_win_translate {{Camera10.win_translate} {Camera10.win_translate}}
 addUserKnob {30 cam_win_scale l "window scale"}
 cam_win_scale {{Camera10.win_scale} {Camera10.win_scale}}
 addUserKnob {7 cam_winroll l "window roll" R -45 45}
 cam_winroll {{Camera10.winroll}}
 addUserKnob {41 world_matrix l "world matrix" T cam_data.matrix}
 addUserKnob {20 endGroup_1 l endGroup n -1}
 addUserKnob {26 spacer_5 l "" +STARTLINE T <br>}
 addUserKnob {26 title_basic l "<b>BASIC SETTING</b>"}
 addUserKnob {4 display l "3D display" t "How to draw in 3D preview. The viewer can override this setting." M {off wireframe soild solid+wireframe textured textured+wireframe "" "" ""}}
 display textured
 addUserKnob {4 data_type l "data type" t "data type\nUsing one of these data to convert into 3D mesh.\n\nPosition\nSupported world space or camera space position data.\n\nDepth (normalized far=0)\nNormalized depth data, which is same as depth data output by ScanlineRender.\n\nDeep / Depth (direct)\nRaw camera depth data. If using deep, need to convert DeepToImage first, and selected deep channel on 'channels' knob." M {"position (world space)" "position (camera space)" "depth (normalized far=0)" "deep / depth (direct)" "" "" ""}}
 addUserKnob {41 channels t "Select which channel represented on selected data type." T shuffle_data.in}
 addUserKnob {6 unpm l unpremult t "3D data pass should be unpremult with alpha before process." -STARTLINE}
 unpm true
 addUserKnob {26 spacer_4 l "" +STARTLINE T <br>}
 addUserKnob {7 lod l "mesh LOD" t "Level of Details\n\nIf this value set to 1.0, subdivision of the mesh  1:1 to the data available in the resolution. Which mean 1 face of the mesh equal to 1 pixel.\n\nIf this value set to 1.0, it will slow down the render process.\n\nHighly recommend to use 0.1 - 0.5 if high resolution mesh details is not concern."}
 lod 0.5
 addUserKnob {41 filter_size l "filter size" T DisplaceGeo.filter_size}
 addUserKnob {41 filter T DisplaceGeo.filter}
 addUserKnob {26 spacer_2 l "" +STARTLINE T <br>}
 addUserKnob {26 title_drange l "" +STARTLINE T "distance range"}
 addUserKnob {7 drange_near l near t "clip the mesh in the min value in terms of depth." R 0 10000}
 addUserKnob {7 drange_far l far t "clip the mesh in the max value in terms of depth." R 0 10000}
 drange_far 40
 addUserKnob {6 clip_color l "distance clip on color" t "Apply the distance clip on colored texture." +STARTLINE}
 clip_color true
 addUserKnob {26 spacer_3 l "" +STARTLINE T <br>}
 addUserKnob {26 title_export l <b>EXPORT</b>}
 addUserKnob {41 file t "only support *.abc file extension (alembric) ." T WriteGeo.file}
 addUserKnob {22 export_geo l "Export Geo" T "def exportGeo() :\n\twgeo = nuke.toNode('WriteGeo')\n\twgeo\['Execute'].execute()\n\nthisGRP = nuke.thisGroup()\nfilepath = thisGRP\['file'].getValue()\n\nif not len(filepath) :\n\tnuke.message('file path is empty. Process denied.')\nelif not filepath.split('.')\[-1:]\[0].lower() == 'abc' :\n\tif nuke.ask('File extension invalue. Only support render <font color=orange>*.abc</font> . Do you want this tool to fix it and process ?') :\n\t\tthisGRP\['file'].setValue( thisGRP\['file'].getValue() + '.abc' )\n\t\texportGeo()\nelse :\n\texportGeo()" +STARTLINE}
 addUserKnob {22 import_geo l "Import Geo" -STARTLINE T "prefx = nuke.toNode('preferences')\['GridWidth'].value()\nthisGRP = nuke.thisGroup()\ngoStore = nuke.toNode('store')\ngoStore\['fn'].execute()\n\nroot = getLevel()\n\nwith root :\n\trgeo = nuke.nodes.ReadGeo2( file=thisGRP\['file'].getValue() )\n\trgeo.setXYpos( int( thisGRP\['xpos'].getValue() + prefx ) , int( thisGRP\['ypos'].getValue() ) )"}
 addUserKnob {20 tab_misc l Miscellaneous}
 addUserKnob {26 title_focus_region l "<b>FOCUS REGION</b>"}
 addUserKnob {41 use_focus_region l "use focus region" t "use focus region to generate SSMesh in specific area. Save resources and possible to work with high LOD mesh." T menu2.use_focus_region}
 addUserKnob {15 focus_region l "focus region" t "Set focus region in screen space. These values are 2D coordinate."}
 focus_region {{curve x1 233.5207062 497.8091125 494.2871094 490.5583496 486.6227112 482.4801941 478.1316223 473.5766907 468.8161316 463.8508301 458.6824646 453.3103333 447.7382507 441.9660339 435.9968567 429.8322449 423.4750671 416.9274902 410.1922913 403.2732849 396.1737671 388.8970032 381.447998 373.8299866 366.0475769 358.1063843 350.0110779 341.7667236 333.3794861 324.854187 316.1987 307.4177246 298.5187073 289.5086365 280.3937378 271.182312 261.8818359 252.4991913 243.0432434 233.5207062 223.9414215 214.3127136 204.6440887 194.9425507 185.2186279 175.4802246 165.7357635 155.9950867 146.2666626 136.5593872 126.8825073 117.2451859 107.6561279 98.12382507 88.65762329 79.26589203 69.95688629 60.73909378 51.62180328 42.61193466 33.71819687 24.9479351 16.30883789 7.808671951 -0.5459617376 -8.74853611 -16.79135513 -24.66836739 -32.37460327 -39.90288162 -47.24801636 -54.40490723 -61.36901093 -68.13480377 -74.69895935 -81.05633545 -87.20454407 -93.13911438 -98.85650635 -104.3555374 -109.6317444 -114.6851883 -119.5113983 -124.1103897 -128.480423 -132.6210938 -136.5300446 -140.2077789 -143.6538849 -146.8681793 -149.8506775 -152.6027069 -155.123764 -157.4156494 -159.4779816 -161.3143463 -162.9235687 -164.3097229 -165.4726562 -166.4156647} {curve x1 157.4579773 214.1690063 213.2086792 212.1981964 211.1391754 210.0319061 208.8781433 207.6791077 206.4360809 205.1501007 203.82341 202.4568634 201.0526886 199.6125793 198.1383514 196.6322174 195.0958099 193.5317688 191.9420624 190.3292542 188.6951599 187.0426941 185.3750763 183.6937408 182.0026703 180.303833 178.6006622 176.8956146 175.1918335 173.4927673 171.8010559 170.1205902 168.4539642 166.8043671 165.1757507 163.5709686 161.9935608 160.4465332 158.9336548 157.4579773 156.023468 154.6329651 153.2897186 151.9969788 150.758667 149.5775299 148.4563141 147.3991089 146.408371 145.4872284 144.6382141 143.8647461 143.1698608 142.5553131 142.023819 141.5784149 141.220871 140.9538727 140.7787323 140.6987762 140.7147522 140.8284912 141.041687 141.3562775 141.7730255 142.2937469 142.9190521 143.6502533 144.4872284 145.4320679 146.4837036 147.6437683 148.9120483 150.2889557 151.773407 153.3664703 155.0676575 156.8766632 158.7926178 160.815033 162.9429016 165.1763611 167.5137024 169.9541779 172.4965057 175.1397552 177.8824921 180.7233276 183.661087 186.693924 189.8207245 193.0394592 196.3488007 199.7467194 203.2320709 206.8022766 210.4560699 214.1911774 218.0061188 221.8986664} {curve x1 407.3132629 632.9698486 630.8667603 628.5549316 626.0327759 623.298645 620.3521118 617.1916504 613.8161621 610.2250366 606.418457 602.3939209 598.1537476 593.696228 589.0222168 584.1320801 579.0261841 573.7053833 568.1705322 562.423645 556.4656982 550.298584 543.9248047 537.3465576 530.565918 523.5864868 516.4117432 509.044281 501.4887695 493.7480164 485.8283691 477.7326355 469.4665833 461.0358276 452.4449463 443.7006226 434.809082 425.776001 416.6088257 407.3132629 397.8980103 388.3695374 378.7364807 369.005188 359.1854858 349.2848511 339.3110352 329.274231 319.1820679 309.0441284 298.8691711 288.6670837 278.4466553 268.217041 257.9882812 247.7691956 237.5692902 227.3978271 217.2652893 207.1797485 197.1512299 187.1884918 177.3011169 167.4981384 157.7879639 148.1790771 138.6807556 129.3011169 120.0474625 110.9286194 101.9519806 93.12505341 84.45433807 75.9477005 67.61076355 59.4508934 51.47251511 43.68294525 36.08748627 28.6897316 21.49653053 14.50977325 7.736446857 1.178515553 -5.159889221 -11.27678871 -17.16728783 -22.83028221 -28.26292801 -33.4636879 -38.43037415 -43.16260147 -47.65843582 -51.91768265 -55.93866348 -59.72333908 -63.26909256 -66.57868195 -69.65059662 -72.48701477} {curve x1 323.3641968 354.7592773 354.8156738 354.8145752 354.7564697 354.6416931 354.4703369 354.2427063 353.9594116 353.6203003 353.2267151 352.7784119 352.2769165 351.7224426 351.1160278 350.4587708 349.7514648 348.9953613 348.1914368 347.3412781 346.4457703 345.5065613 344.5258484 343.5041504 342.4444885 341.3478394 340.2164001 339.0519409 337.8566895 336.6329346 335.3825684 334.1089478 332.813446 331.4989624 330.1681519 328.8237305 327.4683228 326.1046753 324.7355957 323.3641968 321.9935608 320.6267395 319.2663574 317.9155884 316.5777893 315.2562561 313.9532776 312.6731567 311.4185791 310.1926575 308.9984131 307.8394165 306.7189636 305.6393738 304.6039734 303.6160889 302.6785889 301.7942505 300.9658813 300.1967163 299.4889526 298.8451843 298.2681274 297.760376 297.3241272 296.9620361 296.6756592 296.4677124 296.3391724 296.2930603 296.3299255 296.4519653 296.6607056 296.9576416 297.3430176 297.8189697 298.3862 299.0457153 299.7979126 300.6434631 301.5828247 302.6166687 303.7449951 304.9680176 306.2857666 307.6982422 309.2050171 310.8058777 312.5005493 314.2882385 316.1691284 318.1416016 320.2055664 322.3596497 324.6036072 326.93573 329.3555603 331.8613892 334.4525452 337.1275024}}
 addUserKnob {26 spacer_1 l "" +STARTLINE T <br>}
 addUserKnob {3 fregion_ref_frame l "ref frame" t "set reference frame for tracking focus region. 'focus region' & 'define z' will apply on this reference frame and process the tracking."}
 fregion_ref_frame 40
 addUserKnob {22 fregion_set_frame l "set current frame" t "set current frame for focus region reference frame." -STARTLINE T "nuke.thisGroup()\['fregion_ref_frame'].setValue( nuke.frame() )"}
 addUserKnob {12 sample_point l "sample position" t "Toggle 'sample z' in 2D to enable this 2D sample coordinate." +DISABLED}
 addUserKnob {22 sample_z_toggle l "sample z in 2D" t "'sample z' is only works for sample value purpose. After sample is done, must turn off sample function." -STARTLINE T "thisGRP = nuke.thisGroup()\nszstatus = thisGRP\['sample_z_status'].value()\n\nstatus = \['<font color=red>\[ OFF ]</font>','<font color=cyan>\[ ON ]</font>']\n\nif szstatus == status\[0] :\n\tthisGRP\['sample_z_status'].setValue( status\[1] )\n\tthisGRP\['sample_point'].setEnabled(True)\n\tthisGRP\['updateUI'].setValue(\"goStore = nuke.toNode(\\'store\\')\\ngoStore\[\\'fn\\'].execute()\\nsample2d()\")\nelse :\n\tthisGRP\['sample_z_status'].setValue( status\[0] )\n\tthisGRP\['sample_point'].setEnabled(False)\n\tthisGRP\['updateUI'].setValue('')"}
 addUserKnob {26 sample_z_status l "" -STARTLINE T "<font color=red>\[ OFF ]</font>"}
 addUserKnob {7 fregion_define_z l "define z" t "Define the z value on reference frame. Can use 'sample z in 2D' to get this value." R 0 10000}
 fregion_define_z 26.2365181
 addUserKnob {22 track_focus_region l "<b>\[ track focus region ]</b>" t "Use the set focus region on reference frame to track with camera in 3D space.\n\n* project setting need to be same as image resolution to get the correct result." T "rootST = int( nuke.root()\['first_frame'].getValue() )\nrootED = int( nuke.root()\['last_frame'].getValue() )\n\ngetFrame = nuke.getFramesAndViews( 'frame range', str( rootST ) + '-' + str( rootED ) )\n\ntry :\n\tframeST = int( getFrame\[0].replace( ' ' , '' ).split('-')\[0] )\n\tframeED = int( getFrame\[0].replace( ' ' , '' ).split('-')\[1] )\n\n\tthisGRP = nuke.thisGroup()\n\trefframe = int( thisGRP\['fregion_ref_frame'].getValue() )\n\tcam = nuke.toNode('cam_data')\n\tpt1 = nuke.toNode('left_pt')\['translate'].getValue()\n\tpt2 = nuke.toNode('right_pt')\['translate'].getValue()\n\n\tct_hack = nuke.nodes.CurveTool()\n\n\twith nuke.root() :\n\n\t\tif frameED - frameST != 0 :\n\t\t\tthisGRP\['focus_region'].clearAnimated()\n\t\t\ttempbuffer1 = thisGRP\['focus_region'].getValue()\n\t\t\tthisGRP\['focus_region'].setAnimated()\n\t\t\tthisGRP\['focus_region'].setValueAt( tempbuffer1\[0] , refframe , 0 )\n\t\t\tthisGRP\['focus_region'].setValueAt( tempbuffer1\[1] , refframe , 1 )\n\t\t\tthisGRP\['focus_region'].setValueAt( tempbuffer1\[2] , refframe , 2 )\n\t\t\tthisGRP\['focus_region'].setValueAt( tempbuffer1\[3] , refframe , 3 )\n\n\t\tfor trackframe in xrange( frameST, frameED+1 , 1 ) :\n\t\t\tnuke.execute( ct_hack, trackframe, trackframe )\n\t\t\tthisGRP\['focus_region'].setValueAt( nukescripts.snap3d.projectPoint( cam, pt1 )\[0] , trackframe , 0 )\n\t\t\tthisGRP\['focus_region'].setValueAt( nukescripts.snap3d.projectPoint( cam, pt1 )\[1] , trackframe , 1 )\n\t\t\tthisGRP\['focus_region'].setValueAt( nukescripts.snap3d.projectPoint( cam, pt2 )\[0] , trackframe , 2 )\n\t\t\tthisGRP\['focus_region'].setValueAt( nukescripts.snap3d.projectPoint( cam, pt2 )\[1] , trackframe , 3 )\n\n\tnuke.delete( ct_hack )\nexcept :\n    pass" +STARTLINE}
 addUserKnob {26 spacer_6 l "" +STARTLINE T <br>}
 addUserKnob {20 grp_crop_preview l "3D crop preview" n 1}
 grp_crop_preview 0
 addUserKnob {6 show_crop l "show crop point" t "It will show 2 spheres for the crop in 3D space. They set in the place which is where you set the focus region in screen space and defined by z." +STARTLINE}
 addUserKnob {7 crop_point_scale l scale t "Scale the preview crop points (spheres)."}
 crop_point_scale 0.3
 addUserKnob {18 crop_point_color l color t "change color of the crop points (spheres)."}
 crop_point_color 1
 addUserKnob {6 crop_point_color_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 crop_point_color_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 crop_point_color_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 crop_point_color_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 crop_point_color_panelDropped_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 crop_point_color_panelDropped_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 crop_point_color_panelDropped_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 crop_point_color_panelDropped_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 crop_point_color_panelDropped_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 crop_point_color_panelDropped_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 crop_point_color_panelDropped_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {20 endGroup n -1}
 addUserKnob {26 spacer l "" +STARTLINE T <br>}
 addUserKnob {26 title_uv l <b>UV</b>}
 addUserKnob {41 uv_stabilize l "uv stabilize" t "Turn this on if you need to stabilize in UV space. During UV stabilize on, the geo will not be animated. Set reference frame under 'mesh ref frame'." T menu1.uv_stabilize}
 addUserKnob {3 uv_ref_frame l "mesh ref frame" t "Select the frame number that will have identity geo shaped for UV texturing." +DISABLED}
 uv_ref_frame 1001
 addUserKnob {22 uv_set_frame l "set current frame" -STARTLINE +DISABLED T "nuke.thisGroup()\['uv_ref_frame'].setValue( nuke.frame() )"}
 addUserKnob {6 black_outside l "black outside" t "black outside the UV texture." +DISABLED +STARTLINE}
 black_outside true
 addUserKnob {20 t_VERSION l Version}
 addUserKnob {26 l_VERSION l Version T 1.3}
 addUserKnob {26 l_DATE l "Date Modified" T 2019-11-08}
 addUserKnob {26 l_CHANGELOG l Changelog T "1.3\n- camera window supported\n- anamophic project supported\n- fix the conflict of 'force region' and 'UV stabilize'.\n  can use both at the same time now.\n\n1.2\n- removed unuse camera link knobs\n- added focus region, so mesh can be\n  form in specific area/object to save\n  resources for higher LOD\n\n1.1\n- fix the missing line on 'Export Geo' \n  button\n\n1.0\n- create mesh/geo in screen space\n  using position/depth/deep data"}
 addUserKnob {26 l_DEV l "Developed by" T "<a href=\"https://facebook.com/MJTLab\"><font color=orange>Mark Joey Tang</font></a>"}
}
 BackdropNode {
  inputs 0
  name BackdropNode1
  tile_color 0xff
  label "don't touch"
  note_font_size 32
  xpos -1142
  ypos -169
  bdwidth 202
  bdheight 478
 }
 BackdropNode {
  inputs 0
  name BackdropNode2
  tile_color 0x4c4c4cff
  label bin
  note_font_size 32
  xpos -899
  ypos -170
  bdwidth 200
  bdheight 280
 }
 Input {
  inputs 0
  name img
  xpos -100
  ypos -184
 }
 Dot {
  name img_dot
  xpos -66
  ypos -83
 }
set N3ec285d0 [stack 0]
 Dot {
  name Dot3
  xpos 758
  ypos -83
 }
set N3ea5e7a0 [stack 0]
 Shuffle {
  in pworld
  in2 alpha
  alpha red2
  name shuffle_data
  label "\[value in]"
  xpos 724
  ypos -32
 }
 Unpremult {
  name Unpremult_data
  xpos 724
  ypos 62
  disable {{!parent.unpm}}
 }
 Dot {
  name Dot5
  xpos 758
  ypos 700
 }
set N3ec5fec0 [stack 0]
 Dot {
  name Dot6
  xpos 928
  ypos 700
 }
set N3ec62380 [stack 0]
 Dot {
  name Dot7
  xpos 1106
  ypos 700
 }
set N5015d780 [stack 0]
 Dot {
  name Dot8
  xpos 1260
  ypos 700
 }
 Expression {
  temp_name0 dvalue
  temp_expr0 red
  temp_name1 xpos
  temp_expr1 "( ( x + 0.5 ) / input.width - 0.5 ) * \[value global_math.hratio] * abs( dvalue )"
  temp_name2 ypos
  temp_expr2 "( ( y + 0.5 ) / input.height - 0.5 ) * ( \[value global_math.hratio] * abs( dvalue ) * ( img_dot.height / img_dot.width ) ) * 1 / \[value format.pixel_aspect]"
  temp_name3 zpos
  temp_expr3 "- dvalue"
  expr0 "( xpos * \[value fb_data.world_matrix.0] + ypos * \[value fb_data.world_matrix.1] ) * \[value fb_data.win_scale.u] + ( \[value global_math.hratio] * abs(zpos) * \[value fb_data.win_translate.u] / 2 )"
  expr1 "( xpos * \[value fb_data.world_matrix.4] + ypos * \[value fb_data.world_matrix.5] ) * \[value fb_data.win_scale.v] + ( \[value global_math.hratio] * abs(zpos) * \[value fb_data.win_translate.v] / 2 )"
  expr2 zpos
  name Expression9
  xpos 1226
  ypos 774
 }
 Dot {
  name Dot16
  xpos 1260
  ypos 889
 }
push $N5015d780
 Expression {
  temp_name0 dvalue
  temp_expr0 "1 / red"
  temp_name1 xpos
  temp_expr1 "( ( x + 0.5 ) / input.width - 0.5 ) * \[value global_math.hratio] * abs( dvalue )"
  temp_name2 ypos
  temp_expr2 "( ( y + 0.5 ) / input.height - 0.5 ) * ( \[value global_math.hratio] * abs( dvalue ) * ( img_dot.height / img_dot.width ) ) * 1 / \[value format.pixel_aspect]"
  temp_name3 zpos
  temp_expr3 "- dvalue"
  expr0 "( xpos * \[value fb_data.world_matrix.0] + ypos * \[value fb_data.world_matrix.1] ) * \[value fb_data.win_scale.u] + ( \[value global_math.hratio] * abs(zpos) * \[value fb_data.win_translate.u] / 2 )"
  expr1 "( xpos * \[value fb_data.world_matrix.4] + ypos * \[value fb_data.world_matrix.5] ) * \[value fb_data.win_scale.v] + ( \[value global_math.hratio] * abs(zpos) * \[value fb_data.win_translate.v] / 2 )"
  expr2 zpos
  name Expression6
  xpos 1072
  ypos 774
 }
 Dot {
  name Dot17
  xpos 1106
  ypos 863
 }
push $N3ec62380
 Expression {
  expr2 -blue
  name Expression7
  label "fix z"
  xpos 894
  ypos 774
 }
 Dot {
  name Dot18
  xpos 928
  ypos 876
 }
push $N3ec5fec0
 Expression {
  temp_name0 nx
  temp_expr0 "red - cam_data.world_matrix.3"
  temp_name1 ny
  temp_expr1 "green - cam_data.world_matrix.7"
  temp_name2 nz
  temp_expr2 "blue - cam_data.world_matrix.11"
  expr0 "nx * \[value inverseMatrix.invMatrix.0] + ny * \[value inverseMatrix.invMatrix.1] + nz * \[value inverseMatrix.invMatrix.2]"
  expr1 "nx * \[value inverseMatrix.invMatrix.3] + ny * \[value inverseMatrix.invMatrix.4] + nz * \[value inverseMatrix.invMatrix.5]"
  expr2 "nx * \[value inverseMatrix.invMatrix.6] + ny * \[value inverseMatrix.invMatrix.7] + nz * \[value inverseMatrix.invMatrix.8]"
  name Expression3
  label "position invert"
  xpos 724
  ypos 774
 }
 Switch {
  inputs 4
  which {{parent.data_type}}
  name Switch1
  xpos 724
  ypos 984
 }
 Dot {
  name Dot13
  xpos 758
  ypos 1113
 }
set N2a401a80 [stack 0]
 Dot {
  name sam_dot
  xpos 551
  ypos 1113
 }
 NoOp {
  inputs 0
  name menu1
  knobChanged "\nthisGRP = nuke.thisGroup()\nif thisGRP\['uv_stabilize'].getValue() == 1 :\n    thisGRP\['uv_ref_frame'].setEnabled(True)\n    thisGRP\['uv_set_frame'].setEnabled(True)\n    thisGRP\['black_outside'].setEnabled(True)\nelse :\n    thisGRP\['uv_ref_frame'].setEnabled(False)\n    thisGRP\['uv_set_frame'].setEnabled(False)\n    thisGRP\['black_outside'].setEnabled(False)\n"
  xpos -1085
  ypos -42
  addUserKnob {20 User}
  addUserKnob {6 uv_stabilize l "uv stabilize" +STARTLINE}
 }
 NoOp {
  inputs 0
  name menu2
  onCreate "\nthisGRP = nuke.thisGroup()\nfregion_knobs = \['focus_region','fregion_define_z','sample_z_toggle','sample_z_status','sample_point','fregion_ref_frame','fregion_set_frame','track_focus_region','grp_crop_preview','show_crop','crop_point_scale','crop_point_color']\n\nthisGRP\[fregion_knobs\[4]].setEnabled(True)\n\nif thisGRP\['use_focus_region'].getValue()  == 0 :\n    for i in fregion_knobs :\n        thisGRP\[i].setEnabled(False)\n    thisGRP\[fregion_knobs\[3]].setValue( '<font color=red>\[ OFF ]</font>' )\n    thisGRP\['updateUI'].setValue('')\n    nuke.toNode('material_switch')\['disable'].setValue(0)\nelse :\n    for i in fregion_knobs :\n        if i != 'sample_point' :\n            thisGRP\[i].setEnabled(True)\n        else :\n            thisGRP\[i].setEnabled(False)\n    nuke.toNode('material_switch')\['disable'].setValue(1)\n"
  knobChanged "\nthisGRP = nuke.thisGroup()\nfregion_knobs = \['focus_region','fregion_define_z','sample_z_toggle','sample_z_status','sample_point','fregion_ref_frame','fregion_set_frame','track_focus_region','grp_crop_preview','show_crop','crop_point_scale','crop_point_color']\n\nif thisGRP\['use_focus_region'].getValue()  == 0 :\n    for i in fregion_knobs :\n        thisGRP\[i].setEnabled(False)\n    thisGRP\[fregion_knobs\[3]].setValue( '<font color=red>\[ OFF ]</font>' )\n    thisGRP\['updateUI'].setValue('')\n    nuke.toNode('material_switch')\['disable'].setValue(0)\nelse :\n    for i in fregion_knobs :\n        if i != 'sample_point' :\n            thisGRP\[i].setEnabled(True)\n    nuke.toNode('material_switch')\['disable'].setValue(1)\n"
  xpos -1085
  ypos 25
  addUserKnob {20 User}
  addUserKnob {6 use_focus_region l "use focus region" +STARTLINE}
  use_focus_region true
 }
 Camera {
  inputs 0
  display off
  selectable false
  useMatrix true
  matrix {
      {{Camera10.world_matrix} {Camera10.world_matrix} {Camera10.world_matrix} {Camera10.world_matrix}}
      {{Camera10.world_matrix} {Camera10.world_matrix} {Camera10.world_matrix} {Camera10.world_matrix}}
      {{Camera10.world_matrix} {Camera10.world_matrix} {Camera10.world_matrix} {Camera10.world_matrix}}
      {{Camera10.world_matrix} {Camera10.world_matrix} {Camera10.world_matrix} {Camera10.world_matrix}}
    }
  focal {{parent.cam_focal}}
  haperture {{cam_haperture}}
  name cam_data
  xpos -335
  ypos 2204
 }
push $N2a401a80
 Expression {
  temp_name0 unpremultA
  temp_expr0 "alpha * ( 1 / alpha )"
  temp_name1 max
  temp_expr1 blue
  expr3 "abs( max ) < \[value parent.drange_near] || abs( max ) > \[value parent.drange_far] ? 0 : isnan(unpremultA) ? 0 : unpremultA"
  name Expression1
  label "distance crop"
  xpos 724
  ypos 1244
 }
 Premult {
  name Premult1
  xpos 724
  ypos 1332
 }
 Dot {
  name Dot9
  xpos 758
  ypos 1640
 }
set N2a425a50 [stack 0]
push $N3ec285d0
 Dot {
  name Dot10
  xpos -66
  ypos 1552
 }
set N2a427f10 [stack 0]
 Unpremult {
  name Unpremult1
  xpos 48
  ypos 1549
 }
 Merge2 {
  inputs 2
  operation mask
  name Merge2
  xpos 48
  ypos 1637
 }
 Premult {
  name Premult3
  xpos 48
  ypos 1719
 }
push $N2a427f10
 Switch {
  inputs 2
  which {{parent.clip_color}}
  name Switch2
  selected true
  xpos -100
  ypos 1828
 }
 Project3D2 {
  inputs 2
  crop {{parent.black_outside}}
  name Project3D2
  xpos -100
  ypos 2224
 }
push $N3ea5e7a0
 Dot {
  name Dot2
  xpos 1576
  ypos -84
 }
 Shuffle {
  red black
  green black
  blue black
  alpha black
  name Shuffle1
  label "\[value in]"
  xpos 1542
  ypos 30
 }
 Remove {
  name Remove1
  xpos 1542
  ypos 118
 }
 Reformat {
  type scale
  black_outside true
  name Reformat1
  xpos 1542
  ypos 212
 }
 Expression {
  temp_name0 xpos
  temp_expr0 "( ( x + 0.5 ) / input.width - 0.5) *  \[value global_math.hratio] * abs( \[value parent.drange_far] )"
  temp_name1 ypos
  temp_expr1 "( ( y + 0.5 ) / input.height -0.5 ) * ( \[value global_math.hratio] * abs( \[value parent.drange_far] ) * ( img_dot.height / img_dot.width ) ) * 1 / \[value format.pixel_aspect]"
  temp_name2 zpos
  temp_expr2 "-\[value parent.drange_far]"
  expr0 "( xpos * \[value fb_data.world_matrix.0] + ypos * \[value fb_data.world_matrix.1] ) * \[value fb_data.win_scale.u] + ( \[value global_math.hratio] * abs(zpos) * \[value fb_data.win_translate.u] / 2 )"
  expr1 "( xpos * \[value fb_data.world_matrix.4] + ypos * \[value fb_data.world_matrix.5] ) * \[value fb_data.win_scale.v] + ( \[value global_math.hratio] * abs(zpos) * \[value fb_data.win_translate.v] / 2 )"
  expr2 zpos
  name Expression8
  xpos 1542
  ypos 845
 }
 ColorMatrix {
  matrix {
      {{cam_data.world_matrix.0} {cam_data.world_matrix.1} {cam_data.world_matrix.2}}
      {{cam_data.world_matrix.4} {cam_data.world_matrix.5} {cam_data.world_matrix.6}}
      {{cam_data.world_matrix.8} {cam_data.world_matrix.9} {cam_data.world_matrix.10}}
    }
  name ColorMatrix1
  xpos 1542
  ypos 970
 }
 Add {
  channels rgb
  value {{cam_data.world_matrix.3} {cam_data.world_matrix.7} {cam_data.world_matrix.11} 0}
  name Add1
  xpos 1542
  ypos 1052
 }
 Crop {
  box {{store.fregion} {store.fregion} {store.fregion} {store.fregion}}
  reformat true
  crop false
  name Crop1
  xpos 1542
  ypos 1476
  disable {{!parent.use_focus_region}}
 }
 Dot {
  name Dot4
  xpos 1576
  ypos 2402
 }
push $N2a425a50
 Crop {
  box {{store.fregion} {store.fregion} {store.fregion} {store.fregion}}
  reformat true
  crop false
  name Crop4
  xpos 724
  ypos 1771
  disable {{!parent.use_focus_region}}
 }
 Unpremult {
  name Unpremult3
  xpos 724
  ypos 1851
 }
 Expression {
  temp_name0 nx
  temp_expr0 red
  temp_name1 ny
  temp_expr1 green
  temp_name2 nz
  temp_expr2 blue
  expr0 "( nx * \[value cam_data.world_matrix.0] + ny * \[value cam_data.world_matrix.1] + nz * \[value cam_data.world_matrix.2] ) + \[value cam_data.world_matrix.3]"
  expr1 "( nx * \[value cam_data.world_matrix.4] + ny * \[value cam_data.world_matrix.5] + nz * \[value cam_data.world_matrix.6] ) + \[value cam_data.world_matrix.7]"
  expr2 "( nx * \[value cam_data.world_matrix.8] + ny * \[value cam_data.world_matrix.9] + nz * \[value cam_data.world_matrix.10] ) + \[value cam_data.world_matrix.11]"
  name Expression4
  label "position revert"
  xpos 724
  ypos 1933
 }
 Premult {
  name Premult2
  xpos 724
  ypos 2027
 }
 Merge2 {
  inputs 2
  operation under
  name Merge1
  xpos 724
  ypos 2398
 }
 Card {
  inputs 0
  image_aspect false
  rows {{"img_dot.height * parent.lod"}}
  columns {{"img_dot.width * parent.lod"}}
  name ssmesh
  xpos 343
  ypos 2317
 }
 DisplaceGeo {
  inputs 2
  source "rgb absolute"
  scale 1
  filter_size 1
  name DisplaceGeo
  xpos 343
  ypos 2399
 }
 FrameHold {
  first_frame {{parent.uv_ref_frame}}
  name FrameHold
  xpos 343
  ypos 2479
  disable {{!parent.uv_stabilize}}
 }
 ApplyMaterial {
  inputs 2
  name ApplyMaterial1
  xpos -100
  ypos 2483
 }
 Scene {
  display {{parent.display}}
  name gl_scene
  xpos -90
  ypos 3072
 }
set N3ec94f70 [stack 0]
 WriteGeo {
  file_type abc
  name WriteGeo
  xpos 120
  ypos 3093
 }
 Axis {
  inputs 0
  display off
  selectable false
  translate {{"( global_math.pt2.x * cam_data.world_matrix.0(parent.fregion_ref_frame) + global_math.pt2.y * cam_data.world_matrix.1(parent.fregion_ref_frame) + global_math.pt2.z * cam_data.world_matrix.2(parent.fregion_ref_frame) ) + cam_data.world_matrix.3(parent.fregion_ref_frame)"} {"( global_math.pt2.x * cam_data.world_matrix.4(parent.fregion_ref_frame) + global_math.pt2.y * cam_data.world_matrix.5(parent.fregion_ref_frame) + global_math.pt2.z * cam_data.world_matrix.6(parent.fregion_ref_frame) ) + cam_data.world_matrix.7(parent.fregion_ref_frame)"} {"( global_math.pt2.x * cam_data.world_matrix.8(parent.fregion_ref_frame) + global_math.pt2.y * cam_data.world_matrix.9(parent.fregion_ref_frame) + global_math.pt2.z * cam_data.world_matrix.10(parent.fregion_ref_frame) ) + cam_data.world_matrix.11(parent.fregion_ref_frame)"}}
  name right_pt
  xpos -600
  ypos 3218
 }
 CheckerBoard2 {
  inputs 0
  format "256 256 0 0 256 256 1 square_256"
  name CheckerBoard1
  xpos -789
  ypos 2694
 }
 Multiply {
  channels rgb
  value {{parent.crop_point_color.r} {parent.crop_point_color.g} {parent.crop_point_color.b} 1}
  name Multiply
  xpos -789
  ypos 2822
 }
 Clamp {
  channels rgba
  name Clamp1
  xpos -789
  ypos 2905
 }
 Sphere {
  selectable false
  cast_shadow false
  receive_shadow false
  rows 10
  columns 10
  uniform_scale {{parent.crop_point_scale}}
  name Sphere1
  xpos -789
  ypos 2987
  disable {{!show_crop}}
 }
 Dot {
  name Dot24
  xpos -755
  ypos 3065
 }
set N3ecbe4e0 [stack 0]
 Dot {
  name Dot25
  xpos -456
  ypos 3065
 }
 TransformGeo {
  inputs 2
  selectable false
  name TransformGeo2
  xpos -490
  ypos 3238
 }
 Axis {
  inputs 0
  display off
  selectable false
  translate {{"( global_math.pt1.x * cam_data.world_matrix.0(parent.fregion_ref_frame) + global_math.pt1.y * cam_data.world_matrix.1(parent.fregion_ref_frame) + global_math.pt1.z * cam_data.world_matrix.2(parent.fregion_ref_frame) ) + cam_data.world_matrix.3(parent.fregion_ref_frame)"} {"( global_math.pt1.x * cam_data.world_matrix.4(parent.fregion_ref_frame) + global_math.pt1.y * cam_data.world_matrix.5(parent.fregion_ref_frame) + global_math.pt1.z * cam_data.world_matrix.6(parent.fregion_ref_frame) ) + cam_data.world_matrix.7(parent.fregion_ref_frame)"} {"( global_math.pt1.x * cam_data.world_matrix.8(parent.fregion_ref_frame) + global_math.pt1.y * cam_data.world_matrix.9(parent.fregion_ref_frame) + global_math.pt1.z * cam_data.world_matrix.10(parent.fregion_ref_frame) ) + cam_data.world_matrix.11(parent.fregion_ref_frame)"}}
  name left_pt
  xpos -899
  ypos 3220
 }
push $N3ecbe4e0
 TransformGeo {
  inputs 2
  selectable false
  name TransformGeo1
  xpos -789
  ypos 3240
 }
 Scene {
  inputs 2
  selectable false
  name Scene1
  xpos -480
  ypos 3395
 }
 ApplyMaterial {
  display off
  selectable false
  render_mode off
  name material_switch
  xpos -490
  ypos 3523
  disable true
 }
push $N3ec94f70
 Scene {
  inputs 2
  name Scene2
  xpos -90
  ypos 3502
 }
 Output {
  name Output1
  xpos -100
  ypos 4030
 }
 Group {
  inputs 0
  name inverseMatrix
  tile_color 0x337f4cff
  xpos 576
  ypos 780
  addUserKnob {20 tab_general l General}
  addUserKnob {1 knob_path}
  knob_path cam_data.world_matrix
  addUserKnob {26 ""}
  addUserKnob {41 id T id_assign.matrix}
  addUserKnob {26 ""}
  addUserKnob {7 determinant}
  determinant {{"\[value \[value knob_path].\[value id.0]] * ((\[value \[value knob_path].\[value id.4]]*\[value \[value knob_path].\[value id.8]]) - (\[value \[value knob_path].\[value id.5]]*\[value \[value knob_path].\[value id.7]])) - \[value \[value knob_path].\[value id.1]] * ((\[value \[value knob_path].\[value id.3]]*\[value \[value knob_path].\[value id.8]]) - (\[value \[value knob_path].\[value id.5]]*\[value \[value knob_path].\[value id.6]])) + \[value \[value knob_path].\[value id.2]] * ((\[value \[value knob_path].\[value id.3]]*\[value \[value knob_path].\[value id.7]])-(\[value \[value knob_path].\[value id.4]]*\[value \[value knob_path].\[value id.6]]))"}}
  addUserKnob {26 ""}
  addUserKnob {41 cofactor T mtx_cofactor.matrix}
  addUserKnob {26 ""}
  addUserKnob {41 invMatrix T matrix_output.matrix}
  addUserKnob {20 t_VERSION l Version}
  addUserKnob {26 l_VERSION l Version T 1.0}
  addUserKnob {26 l_DATE l "Date Modified" T 2011-11-28}
  addUserKnob {26 l_CHANGELOG l Changelog T "v1.0\n- reveal the calculate output of \n  inverse matrix which is c44matrix\n  and colormatrix doesn't show\n  "}
  addUserKnob {26 l_DEV l "Developed by" T "Mark Joey Tang"}
 }
  Matrix {
   inputs 0
   matrix {
       {0 1 2}
       {4 5 6}
       {8 9 10}
     }
   name id_assign
   xpos -12
   ypos 33
  }
  Matrix {
   inputs 0
   matrix {
       {{"(\[value \[value knob_path].\[value id.4]]*\[value \[value knob_path].\[value id.8]]) - (\[value \[value knob_path].\[value id.5]]*\[value \[value knob_path].\[value id.7]])"} {"(\[value \[value knob_path].\[value id.7]]*\[value \[value knob_path].\[value id.2]]) - (\[value \[value knob_path].\[value id.8]]*\[value \[value knob_path].\[value id.1]])"} {"(\[value \[value knob_path].\[value id.1]]*\[value \[value knob_path].\[value id.5]]) - (\[value \[value knob_path].\[value id.2]]*\[value \[value knob_path].\[value id.4]])"}}
       {{"(\[value \[value knob_path].\[value id.5]]*\[value \[value knob_path].\[value id.6]]) - (\[value \[value knob_path].\[value id.3]]*\[value \[value knob_path].\[value id.8]])"} {"(\[value \[value knob_path].\[value id.8]]*\[value \[value knob_path].\[value id.0]]) - (\[value \[value knob_path].\[value id.6]]*\[value \[value knob_path].\[value id.2]])"} {"(\[value \[value knob_path].\[value id.2]]*\[value \[value knob_path].\[value id.3]]) - (\[value \[value knob_path].\[value id.0]]*\[value \[value knob_path].\[value id.5]])"}}
       {{"(\[value \[value knob_path].\[value id.3]]*\[value \[value knob_path].\[value id.7]]) - (\[value \[value knob_path].\[value id.4]]*\[value \[value knob_path].\[value id.6]])"} {"(\[value \[value knob_path].\[value id.6]]*\[value \[value knob_path].\[value id.1]]) - (\[value \[value knob_path].\[value id.7]]*\[value \[value knob_path].\[value id.0]])"} {"(\[value \[value knob_path].\[value id.0]]*\[value \[value knob_path].\[value id.4]]) - (\[value \[value knob_path].\[value id.1]]*\[value \[value knob_path].\[value id.3]])"}}
     }
   name mtx_cofactor
   xpos 86
   ypos 32
  }
  Matrix {
   inputs 0
   matrix {
       {{"cofactor.0 == 0 || determinant == 0 ? 0 : cofactor.0/determinant"} {"cofactor.1 == 0 || determinant == 0 ? 0 : cofactor.1/determinant"} {"cofactor.2 == 0 || determinant == 0 ? 0 : cofactor.2/determinant"}}
       {{"cofactor.3 == 0 || determinant == 0 ? 0 : cofactor.3/determinant"} {"cofactor.4 == 0 || determinant == 0 ? 0 : cofactor.4/determinant"} {"cofactor.5 == 0 || determinant == 0 ? 0 : cofactor.5/determinant"}}
       {{"cofactor.6 == 0 || determinant == 0 ? 0 : cofactor.6/determinant"} {"cofactor.7 == 0 || determinant == 0 ? 0 : cofactor.7/determinant"} {"cofactor.8 == 0 || determinant == 0 ? 0 : cofactor.8/determinant"}}
     }
   name matrix_output
   xpos 186
   ypos 33
  }
 end_group
 Camera {
  inputs 0
  rotate {0 0 {-parent.cam_winroll}}
  win_translate {{parent.cam_win_translate} {parent.cam_win_translate}}
  win_scale {{parent.cam_win_scale} {parent.cam_win_scale}}
  name fb_data
  xpos -340
  ypos 2087
 }
 NoOp {
  inputs 0
  name store
  xpos -843
  ypos 28
  addUserKnob {20 User}
  addUserKnob {22 fn T "### level define ###\n\ndef getLevel() :\n\tif len(nuke.thisNode().fullName().split('.')) == 1 :\n\t\tggLevel = nuke.root()\n\telse :\n\t\tnodePath = nuke.thisNode().fullName().split('.')\n\t\tnodePath.pop()\n\t\tggLevel = nuke.toNode('.'.join(nodePath))\n\treturn ggLevel\n\n### sample z in 2D ###\n\ndef sample2d() :\n\tthisGRP = nuke.thisGroup()\n\tif thisGRP\['sample_z_status'].value() == '<font color=cyan>\[ ON ]</font>' :\n\t\tsam_co = thisGRP\['sample_point'].getValue()\n\t\tzdata = nuke.toNode('sam_dot').sample('blue', sam_co\[0], sam_co\[1]) * -1\n\t\tthisGRP\['fregion_define_z'].setValue( zdata )" +STARTLINE}
  addUserKnob {15 fregion}
  fregion {{parent.focus_region} {parent.focus_region} {parent.focus_region} {parent.focus_region}}
 }
 NoOp {
  inputs 0
  name global_math
  xpos -842
  ypos -43
  addUserKnob {20 User}
  addUserKnob {7 hratio}
  hratio {{"cam_data.haperture / cam_data.focal"}}
  addUserKnob {7 maxwidth}
  maxwidth {{"hratio * parent.fregion_define_z"}}
  addUserKnob {7 maxheight}
  maxheight {{"hratio * parent.fregion_define_z * ( img_dot.height / img_dot.width )"}}
  addUserKnob {13 pt1}
  pt1 {{"( ( ( maxwidth * ( parent.focus_region.x(parent.fregion_ref_frame) / img_dot.width) ) - ( maxwidth / 2 ) ) * fb_data.world_matrix.0 + ( ( ( maxheight * ( parent.focus_region.y(parent.fregion_ref_frame) / img_dot.height ) ) - ( maxheight / 2 ) ) * 1 / \[value root.format.pixel_aspect] ) * fb_data.world_matrix.1 ) * fb_data.win_scale.u + ( hratio * abs(parent.fregion_define_z) * fb_data.win_translate.u /2 )"} {"( ( ( maxwidth * ( parent.focus_region.x(parent.fregion_ref_frame) / img_dot.width) ) - ( maxwidth / 2 ) ) * fb_data.world_matrix.4 + \n( ( ( maxheight * ( parent.focus_region.y(parent.fregion_ref_frame) / img_dot.height ) ) - ( maxheight / 2 ) ) * 1 / \[value root.format.pixel_aspect] ) * fb_data.world_matrix.5 ) * fb_data.win_scale.v + ( hratio * abs(parent.fregion_define_z) * fb_data.win_translate.v /2 )"} {-parent.fregion_define_z}}
  addUserKnob {13 pt2}
  pt2 {{"( ( ( maxwidth * ( parent.focus_region.r(parent.fregion_ref_frame) / img_dot.width) ) - ( maxwidth / 2 ) ) * fb_data.world_matrix.0 + ( ( ( maxheight * ( parent.focus_region.t(parent.fregion_ref_frame) / img_dot.height ) ) - ( maxheight / 2 ) ) * 1 / \[value root.format.pixel_aspect] ) * fb_data.world_matrix.1 ) * fb_data.win_scale.u + ( hratio * abs(parent.fregion_define_z) * fb_data.win_translate.u /2 )"} {"( ( ( maxwidth * ( parent.focus_region.r(parent.fregion_ref_frame) / img_dot.width) ) - ( maxwidth / 2 ) ) * fb_data.world_matrix.4 + ( ( ( maxheight * ( parent.focus_region.t(parent.fregion_ref_frame) / img_dot.height ) ) - ( maxheight / 2 ) ) * 1 / \[value root.format.pixel_aspect] ) * fb_data.world_matrix.5 ) * fb_data.win_scale.v + ( hratio * abs(parent.fregion_define_z) * fb_data.win_translate.v /2 )"} {-parent.fregion_define_z}}
 }
end_group
Scene {
 inputs 2
 name Scene8
 xpos -821
 ypos 4184
}
push 0
ScanlineRender {
 inputs 3
 conservative_shader_sampling false
 motion_vectors_type off
 MB_channel none
 name ScanlineRender5
 xpos -831
 ypos 4306
}
Dot {
 name Dot25
 selected true
 xpos -797
 ypos 4543
}
